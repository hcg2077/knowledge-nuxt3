{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/scheme.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Scheme\nDescription: Scheme is a programming language in the Lisp family.\n             (keywords based on http://community.schemewiki.org/?scheme-keywords)\nAuthor: JP Verkamp <me@jverkamp.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nOrigin: clojure.js\nWebsite: http://community.schemewiki.org/?what-is-scheme\nCategory: lisp\n*/\n\nfunction scheme(hljs) {\n  const SCHEME_IDENT_RE = '[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';\n  const SCHEME_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+([./]\\\\d+)?';\n  const SCHEME_COMPLEX_NUMBER_RE = SCHEME_SIMPLE_NUMBER_RE + '[+\\\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';\n  const KEYWORDS = {\n    $pattern: SCHEME_IDENT_RE,\n    built_in:\n      'case-lambda call/cc class define-class exit-handler field import '\n      + 'inherit init-field interface let*-values let-values let/ec mixin '\n      + 'opt-lambda override protect provide public rename require '\n      + 'require-for-syntax syntax syntax-case syntax-error unit/sig unless '\n      + 'when with-syntax and begin call-with-current-continuation '\n      + 'call-with-input-file call-with-output-file case cond define '\n      + 'define-syntax delay do dynamic-wind else for-each if lambda let let* '\n      + 'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / '\n      + '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan '\n      + 'boolean? caar cadr call-with-input-file call-with-output-file '\n      + 'call-with-values car cdddar cddddr cdr ceiling char->integer '\n      + 'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? '\n      + 'char-downcase char-lower-case? char-numeric? char-ready? char-upcase '\n      + 'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? '\n      + 'char? close-input-port close-output-port complex? cons cos '\n      + 'current-input-port current-output-port denominator display eof-object? '\n      + 'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor '\n      + 'force gcd imag-part inexact->exact inexact? input-port? integer->char '\n      + 'integer? interaction-environment lcm length list list->string '\n      + 'list->vector list-ref list-tail list? load log magnitude make-polar '\n      + 'make-rectangular make-string make-vector max member memq memv min '\n      + 'modulo negative? newline not null-environment null? number->string '\n      + 'number? numerator odd? open-input-file open-output-file output-port? '\n      + 'pair? peek-char port? positive? procedure? quasiquote quote quotient '\n      + 'rational? rationalize read read-char real-part real? remainder reverse '\n      + 'round scheme-report-environment set! set-car! set-cdr! sin sqrt string '\n      + 'string->list string->number string->symbol string-append string-ci<=? '\n      + 'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy '\n      + 'string-fill! string-length string-ref string-set! string<=? string<? '\n      + 'string=? string>=? string>? string? substring symbol->string symbol? '\n      + 'tan transcript-off transcript-on truncate values vector '\n      + 'vector->list vector-fill! vector-length vector-ref vector-set! '\n      + 'with-input-from-file with-output-to-file write write-char zero?'\n  };\n\n  const LITERAL = {\n    className: 'literal',\n    begin: '(#t|#f|#\\\\\\\\' + SCHEME_IDENT_RE + '|#\\\\\\\\.)'\n  };\n\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: SCHEME_SIMPLE_NUMBER_RE,\n        relevance: 0\n      },\n      {\n        begin: SCHEME_COMPLEX_NUMBER_RE,\n        relevance: 0\n      },\n      { begin: '#b[0-1]+(/[0-1]+)?' },\n      { begin: '#o[0-7]+(/[0-7]+)?' },\n      { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }\n    ]\n  };\n\n  const STRING = hljs.QUOTE_STRING_MODE;\n\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      ';',\n      '$',\n      { relevance: 0 }\n    ),\n    hljs.COMMENT('#\\\\|', '\\\\|#')\n  ];\n\n  const IDENT = {\n    begin: SCHEME_IDENT_RE,\n    relevance: 0\n  };\n\n  const QUOTED_IDENT = {\n    className: 'symbol',\n    begin: '\\'' + SCHEME_IDENT_RE\n  };\n\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n\n  const QUOTED_LIST = {\n    variants: [\n      { begin: /'/ },\n      { begin: '`' }\n    ],\n    contains: [\n      {\n        begin: '\\\\(',\n        end: '\\\\)',\n        contains: [\n          'self',\n          LITERAL,\n          STRING,\n          NUMBER,\n          IDENT,\n          QUOTED_IDENT\n        ]\n      }\n    ]\n  };\n\n  const NAME = {\n    className: 'name',\n    relevance: 0,\n    begin: SCHEME_IDENT_RE,\n    keywords: KEYWORDS\n  };\n\n  const LAMBDA = {\n    begin: /lambda/,\n    endsWithParent: true,\n    returnBegin: true,\n    contains: [\n      NAME,\n      {\n        endsParent: true,\n        variants: [\n          {\n            begin: /\\(/,\n            end: /\\)/\n          },\n          {\n            begin: /\\[/,\n            end: /\\]/\n          }\n        ],\n        contains: [ IDENT ]\n      }\n    ]\n  };\n\n  const LIST = {\n    variants: [\n      {\n        begin: '\\\\(',\n        end: '\\\\)'\n      },\n      {\n        begin: '\\\\[',\n        end: '\\\\]'\n      }\n    ],\n    contains: [\n      LAMBDA,\n      NAME,\n      BODY\n    ]\n  };\n\n  BODY.contains = [\n    LITERAL,\n    NUMBER,\n    STRING,\n    IDENT,\n    QUOTED_IDENT,\n    QUOTED_LIST,\n    LIST\n  ].concat(COMMENT_MODES);\n\n  return {\n    name: 'Scheme',\n    aliases: ['scm'],\n    illegal: /\\S/,\n    contains: [\n      hljs.SHEBANG(),\n      NUMBER,\n      STRING,\n      QUOTED_IDENT,\n      QUOTED_LIST,\n      LIST\n    ].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = scheme;\n",
      "start": 1699633501325,
      "end": 1699633501421,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501421,
      "end": 1699633501421,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501421,
      "end": 1699633501421,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501421,
      "end": 1699633501421,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501421,
      "end": 1699633501421,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501421,
      "end": 1699633501421,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501421,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501422,
      "end": 1699633501422,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501422,
      "end": 1699633501423,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501423,
      "end": 1699633501423,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Scheme\nDescription: Scheme is a programming language in the Lisp family.\n             (keywords based on http://community.schemewiki.org/?scheme-keywords)\nAuthor: JP Verkamp <me@jverkamp.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nOrigin: clojure.js\nWebsite: http://community.schemewiki.org/?what-is-scheme\nCategory: lisp\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar scheme_1;\nvar hasRequiredScheme;\n\nfunction requireScheme () {\n\tif (hasRequiredScheme) return scheme_1;\n\thasRequiredScheme = 1;\n\tfunction scheme(hljs) {\n\t  const SCHEME_IDENT_RE = '[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';\n\t  const SCHEME_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+([./]\\\\d+)?';\n\t  const SCHEME_COMPLEX_NUMBER_RE = SCHEME_SIMPLE_NUMBER_RE + '[+\\\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';\n\t  const KEYWORDS = {\n\t    $pattern: SCHEME_IDENT_RE,\n\t    built_in:\n\t      'case-lambda call/cc class define-class exit-handler field import '\n\t      + 'inherit init-field interface let*-values let-values let/ec mixin '\n\t      + 'opt-lambda override protect provide public rename require '\n\t      + 'require-for-syntax syntax syntax-case syntax-error unit/sig unless '\n\t      + 'when with-syntax and begin call-with-current-continuation '\n\t      + 'call-with-input-file call-with-output-file case cond define '\n\t      + 'define-syntax delay do dynamic-wind else for-each if lambda let let* '\n\t      + 'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / '\n\t      + '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan '\n\t      + 'boolean? caar cadr call-with-input-file call-with-output-file '\n\t      + 'call-with-values car cdddar cddddr cdr ceiling char->integer '\n\t      + 'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? '\n\t      + 'char-downcase char-lower-case? char-numeric? char-ready? char-upcase '\n\t      + 'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? '\n\t      + 'char? close-input-port close-output-port complex? cons cos '\n\t      + 'current-input-port current-output-port denominator display eof-object? '\n\t      + 'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor '\n\t      + 'force gcd imag-part inexact->exact inexact? input-port? integer->char '\n\t      + 'integer? interaction-environment lcm length list list->string '\n\t      + 'list->vector list-ref list-tail list? load log magnitude make-polar '\n\t      + 'make-rectangular make-string make-vector max member memq memv min '\n\t      + 'modulo negative? newline not null-environment null? number->string '\n\t      + 'number? numerator odd? open-input-file open-output-file output-port? '\n\t      + 'pair? peek-char port? positive? procedure? quasiquote quote quotient '\n\t      + 'rational? rationalize read read-char real-part real? remainder reverse '\n\t      + 'round scheme-report-environment set! set-car! set-cdr! sin sqrt string '\n\t      + 'string->list string->number string->symbol string-append string-ci<=? '\n\t      + 'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy '\n\t      + 'string-fill! string-length string-ref string-set! string<=? string<? '\n\t      + 'string=? string>=? string>? string? substring symbol->string symbol? '\n\t      + 'tan transcript-off transcript-on truncate values vector '\n\t      + 'vector->list vector-fill! vector-length vector-ref vector-set! '\n\t      + 'with-input-from-file with-output-to-file write write-char zero?'\n\t  };\n\n\t  const LITERAL = {\n\t    className: 'literal',\n\t    begin: '(#t|#f|#\\\\\\\\' + SCHEME_IDENT_RE + '|#\\\\\\\\.)'\n\t  };\n\n\t  const NUMBER = {\n\t    className: 'number',\n\t    variants: [\n\t      {\n\t        begin: SCHEME_SIMPLE_NUMBER_RE,\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: SCHEME_COMPLEX_NUMBER_RE,\n\t        relevance: 0\n\t      },\n\t      { begin: '#b[0-1]+(/[0-1]+)?' },\n\t      { begin: '#o[0-7]+(/[0-7]+)?' },\n\t      { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }\n\t    ]\n\t  };\n\n\t  const STRING = hljs.QUOTE_STRING_MODE;\n\n\t  const COMMENT_MODES = [\n\t    hljs.COMMENT(\n\t      ';',\n\t      '$',\n\t      { relevance: 0 }\n\t    ),\n\t    hljs.COMMENT('#\\\\|', '\\\\|#')\n\t  ];\n\n\t  const IDENT = {\n\t    begin: SCHEME_IDENT_RE,\n\t    relevance: 0\n\t  };\n\n\t  const QUOTED_IDENT = {\n\t    className: 'symbol',\n\t    begin: '\\'' + SCHEME_IDENT_RE\n\t  };\n\n\t  const BODY = {\n\t    endsWithParent: true,\n\t    relevance: 0\n\t  };\n\n\t  const QUOTED_LIST = {\n\t    variants: [\n\t      { begin: /'/ },\n\t      { begin: '`' }\n\t    ],\n\t    contains: [\n\t      {\n\t        begin: '\\\\(',\n\t        end: '\\\\)',\n\t        contains: [\n\t          'self',\n\t          LITERAL,\n\t          STRING,\n\t          NUMBER,\n\t          IDENT,\n\t          QUOTED_IDENT\n\t        ]\n\t      }\n\t    ]\n\t  };\n\n\t  const NAME = {\n\t    className: 'name',\n\t    relevance: 0,\n\t    begin: SCHEME_IDENT_RE,\n\t    keywords: KEYWORDS\n\t  };\n\n\t  const LAMBDA = {\n\t    begin: /lambda/,\n\t    endsWithParent: true,\n\t    returnBegin: true,\n\t    contains: [\n\t      NAME,\n\t      {\n\t        endsParent: true,\n\t        variants: [\n\t          {\n\t            begin: /\\(/,\n\t            end: /\\)/\n\t          },\n\t          {\n\t            begin: /\\[/,\n\t            end: /\\]/\n\t          }\n\t        ],\n\t        contains: [ IDENT ]\n\t      }\n\t    ]\n\t  };\n\n\t  const LIST = {\n\t    variants: [\n\t      {\n\t        begin: '\\\\(',\n\t        end: '\\\\)'\n\t      },\n\t      {\n\t        begin: '\\\\[',\n\t        end: '\\\\]'\n\t      }\n\t    ],\n\t    contains: [\n\t      LAMBDA,\n\t      NAME,\n\t      BODY\n\t    ]\n\t  };\n\n\t  BODY.contains = [\n\t    LITERAL,\n\t    NUMBER,\n\t    STRING,\n\t    IDENT,\n\t    QUOTED_IDENT,\n\t    QUOTED_LIST,\n\t    LIST\n\t  ].concat(COMMENT_MODES);\n\n\t  return {\n\t    name: 'Scheme',\n\t    aliases: ['scm'],\n\t    illegal: /\\S/,\n\t    contains: [\n\t      hljs.SHEBANG(),\n\t      NUMBER,\n\t      STRING,\n\t      QUOTED_IDENT,\n\t      QUOTED_LIST,\n\t      LIST\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t}\n\n\tscheme_1 = scheme;\n\treturn scheme_1;\n}\n\nexport { requireScheme as __require };",
      "start": 1699633501423,
      "end": 1699633501423,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501423,
      "end": 1699633501423,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501423,
      "end": 1699633501423,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501423,
      "end": 1699633501423,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501423,
      "end": 1699633501423,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501423,
      "end": 1699633501423,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501424,
      "end": 1699633501424,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501424,
      "end": 1699633501424,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501424,
      "end": 1699633501424,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501424,
      "end": 1699633501424,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501424,
      "end": 1699633501424,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501424,
      "end": 1699633501424,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501424,
      "end": 1699633501424,
      "order": "normal"
    }
  ]
}
