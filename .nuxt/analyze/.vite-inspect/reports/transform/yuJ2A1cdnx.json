{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_inline/link.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n",
      "start": 1699633501809,
      "end": 1699633501902,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501902,
      "end": 1699633501902,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501902,
      "end": 1699633501902,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501902,
      "end": 1699633501902,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501902,
      "end": 1699633501902,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501902,
      "end": 1699633501902,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501902,
      "end": 1699633501902,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501902,
      "end": 1699633501902,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501903,
      "end": 1699633501903,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501903,
      "end": 1699633501903,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501904,
      "end": 1699633501904,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501905,
      "end": 1699633501905,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/common/utils.js?commonjs-proxy\";\n\n// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require$$0.normalizeReference;\nvar isSpace              = require$$0.isSpace;\n\n\nvar link = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(link);\nexport { link as __moduleExports };",
      "start": 1699633501905,
      "end": 1699633502024,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;AAAA;AACA;AACA,YAAY,CAAC;AACb;AACA,IAAI,kBAAkB,KAAK,UAA0B,CAAC,kBAAkB,CAAC;AACzE,IAAI,OAAO,gBAAgB,UAA0B,CAAC,OAAO,CAAC;AAC9D;AACA;IACA,IAAc,GAAG,SAAS,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE;AAC9C,EAAE,IAAI,KAAK;AACX,MAAM,IAAI;AACV,MAAM,KAAK;AACX,MAAM,QAAQ;AACd,MAAM,UAAU;AAChB,MAAM,GAAG;AACT,MAAM,GAAG;AACT,MAAM,GAAG;AACT,MAAM,KAAK;AACX,MAAM,IAAI,GAAG,EAAE;AACf,MAAM,KAAK,GAAG,EAAE;AAChB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG;AACxB,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM;AACxB,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG;AACvB,MAAM,cAAc,GAAG,IAAI,CAAC;AAC5B;AACA,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,SAAS,EAAE,OAAO,KAAK,CAAC,EAAE;AACxE;AACA,EAAE,UAAU,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;AAC7B,EAAE,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACrE;AACA;AACA,EAAE,IAAI,QAAQ,GAAG,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AACrC;AACA,EAAE,GAAG,GAAG,QAAQ,GAAG,CAAC,CAAC;AACrB,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,KAAK,CAAC;AAC3B;AACA;AACA;AACA,IAAI,GAAG,EAAE,CAAC;AACV,IAAI,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;AAC7B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACvC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE,MAAM,EAAE;AACrD,KAAK;AACL,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AACrC;AACA;AACA;AACA,IAAI,KAAK,GAAG,GAAG,CAAC;AAChB,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AAC9E,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE;AAChB,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7C,MAAM,IAAI,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AACvC,QAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACtB,OAAO,MAAM;AACb,QAAQ,IAAI,GAAG,EAAE,CAAC;AAClB,OAAO;AACP;AACA;AACA;AACA,MAAM,KAAK,GAAG,GAAG,CAAC;AAClB,MAAM,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;AAC/B,QAAQ,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACzC,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE,MAAM,EAAE;AACvD,OAAO;AACP;AACA;AACA;AACA,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1E,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,GAAG,IAAI,GAAG,CAAC,EAAE,EAAE;AAChD,QAAQ,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;AACxB,QAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACtB;AACA;AACA;AACA,QAAQ,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;AACjC,UAAU,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC3C,UAAU,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE,MAAM,EAAE;AACzD,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,SAAS;AACjE;AACA,MAAM,cAAc,GAAG,IAAI,CAAC;AAC5B,KAAK;AACL,IAAI,GAAG,EAAE,CAAC;AACV,GAAG;AACH;AACA,EAAE,IAAI,cAAc,EAAE;AACtB;AACA;AACA;AACA,IAAI,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,UAAU,KAAK,WAAW,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AACtE;AACA,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,SAAS;AAChE,MAAM,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACxD,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE;AACpB,QAAQ,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9C,OAAO,MAAM;AACb,QAAQ,GAAG,GAAG,QAAQ,GAAG,CAAC,CAAC;AAC3B,OAAO;AACP,KAAK,MAAM;AACX,MAAM,GAAG,GAAG,QAAQ,GAAG,CAAC,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,EAAE;AAClE;AACA,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1D,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;AACzB,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AACtB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,MAAM,EAAE;AACf,IAAI,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC;AAC3B,IAAI,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC5B;AACA,IAAI,KAAK,UAAU,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnD,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC;AAChD,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;AACrC,KAAK;AACL;AACA,IAAI,KAAK,CAAC,SAAS,EAAE,CAAC;AACtB,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpC,IAAI,KAAK,CAAC,SAAS,EAAE,CAAC;AACtB;AACA,IAAI,KAAK,UAAU,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACrD,GAAG;AACH;AACA,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,EAAE,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;AACrB,EAAE,OAAO,IAAI,CAAC;AACd,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633502025,
      "end": 1699633502025,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633502026,
      "end": 1699633502026,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633502026,
      "end": 1699633502027,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633502027,
      "end": 1699633502027,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633502028,
      "end": 1699633502029,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633502029,
      "end": 1699633502029,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633502031,
      "end": 1699633502031,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633502032,
      "end": 1699633502032,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633502032,
      "end": 1699633502032,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633502033,
      "end": 1699633502033,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633502034,
      "end": 1699633502034,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633502034,
      "end": 1699633502034,
      "order": "normal"
    }
  ]
}
