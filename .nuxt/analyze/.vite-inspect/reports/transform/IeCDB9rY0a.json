{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/cpp.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\nmodule.exports = cpp;\n",
      "start": 1699633500673,
      "end": 1699633500767,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500767,
      "end": 1699633500767,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500767,
      "end": 1699633500767,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500767,
      "end": 1699633500767,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500767,
      "end": 1699633500767,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500767,
      "end": 1699633500767,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500767,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633500768,
      "end": 1699633500768,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633500768,
      "end": 1699633500769,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633500769,
      "end": 1699633500769,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633500769,
      "end": 1699633500769,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar cpp_1;\nvar hasRequiredCpp;\n\nfunction requireCpp () {\n\tif (hasRequiredCpp) return cpp_1;\n\thasRequiredCpp = 1;\n\t/** @type LanguageFn */\n\tfunction cpp(hljs) {\n\t  const regex = hljs.regex;\n\t  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n\t  // not include such support nor can we be sure all the grammars depending\n\t  // on it would desire this behavior\n\t  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n\t  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n\t  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n\t  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n\t  const FUNCTION_TYPE_RE = '(?!struct)('\n\t    + DECLTYPE_AUTO_RE + '|'\n\t    + regex.optional(NAMESPACE_RE)\n\t    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n\t  + ')';\n\n\t  const CPP_PRIMITIVE_TYPES = {\n\t    className: 'type',\n\t    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n\t  };\n\n\t  // https://en.cppreference.com/w/cpp/language/escape\n\t  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n\t  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n\t  const STRINGS = {\n\t    className: 'string',\n\t    variants: [\n\t      {\n\t        begin: '(u8?|U|L)?\"',\n\t        end: '\"',\n\t        illegal: '\\\\n',\n\t        contains: [ hljs.BACKSLASH_ESCAPE ]\n\t      },\n\t      {\n\t        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n\t        end: '\\'',\n\t        illegal: '.'\n\t      },\n\t      hljs.END_SAME_AS_BEGIN({\n\t        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n\t        end: /\\)([^()\\\\ ]{0,16})\"/\n\t      })\n\t    ]\n\t  };\n\n\t  const NUMBERS = {\n\t    className: 'number',\n\t    variants: [\n\t      { begin: '\\\\b(0b[01\\']+)' },\n\t      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n\t      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n\t    ],\n\t    relevance: 0\n\t  };\n\n\t  const PREPROCESSOR = {\n\t    className: 'meta',\n\t    begin: /#\\s*[a-z]+\\b/,\n\t    end: /$/,\n\t    keywords: { keyword:\n\t        'if else elif endif define undef warning error line '\n\t        + 'pragma _Pragma ifdef ifndef include' },\n\t    contains: [\n\t      {\n\t        begin: /\\\\\\n/,\n\t        relevance: 0\n\t      },\n\t      hljs.inherit(STRINGS, { className: 'string' }),\n\t      {\n\t        className: 'string',\n\t        begin: /<.*?>/\n\t      },\n\t      C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE\n\t    ]\n\t  };\n\n\t  const TITLE_MODE = {\n\t    className: 'title',\n\t    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n\t    relevance: 0\n\t  };\n\n\t  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n\t  // https://en.cppreference.com/w/cpp/keyword\n\t  const RESERVED_KEYWORDS = [\n\t    'alignas',\n\t    'alignof',\n\t    'and',\n\t    'and_eq',\n\t    'asm',\n\t    'atomic_cancel',\n\t    'atomic_commit',\n\t    'atomic_noexcept',\n\t    'auto',\n\t    'bitand',\n\t    'bitor',\n\t    'break',\n\t    'case',\n\t    'catch',\n\t    'class',\n\t    'co_await',\n\t    'co_return',\n\t    'co_yield',\n\t    'compl',\n\t    'concept',\n\t    'const_cast|10',\n\t    'consteval',\n\t    'constexpr',\n\t    'constinit',\n\t    'continue',\n\t    'decltype',\n\t    'default',\n\t    'delete',\n\t    'do',\n\t    'dynamic_cast|10',\n\t    'else',\n\t    'enum',\n\t    'explicit',\n\t    'export',\n\t    'extern',\n\t    'false',\n\t    'final',\n\t    'for',\n\t    'friend',\n\t    'goto',\n\t    'if',\n\t    'import',\n\t    'inline',\n\t    'module',\n\t    'mutable',\n\t    'namespace',\n\t    'new',\n\t    'noexcept',\n\t    'not',\n\t    'not_eq',\n\t    'nullptr',\n\t    'operator',\n\t    'or',\n\t    'or_eq',\n\t    'override',\n\t    'private',\n\t    'protected',\n\t    'public',\n\t    'reflexpr',\n\t    'register',\n\t    'reinterpret_cast|10',\n\t    'requires',\n\t    'return',\n\t    'sizeof',\n\t    'static_assert',\n\t    'static_cast|10',\n\t    'struct',\n\t    'switch',\n\t    'synchronized',\n\t    'template',\n\t    'this',\n\t    'thread_local',\n\t    'throw',\n\t    'transaction_safe',\n\t    'transaction_safe_dynamic',\n\t    'true',\n\t    'try',\n\t    'typedef',\n\t    'typeid',\n\t    'typename',\n\t    'union',\n\t    'using',\n\t    'virtual',\n\t    'volatile',\n\t    'while',\n\t    'xor',\n\t    'xor_eq'\n\t  ];\n\n\t  // https://en.cppreference.com/w/cpp/keyword\n\t  const RESERVED_TYPES = [\n\t    'bool',\n\t    'char',\n\t    'char16_t',\n\t    'char32_t',\n\t    'char8_t',\n\t    'double',\n\t    'float',\n\t    'int',\n\t    'long',\n\t    'short',\n\t    'void',\n\t    'wchar_t',\n\t    'unsigned',\n\t    'signed',\n\t    'const',\n\t    'static'\n\t  ];\n\n\t  const TYPE_HINTS = [\n\t    'any',\n\t    'auto_ptr',\n\t    'barrier',\n\t    'binary_semaphore',\n\t    'bitset',\n\t    'complex',\n\t    'condition_variable',\n\t    'condition_variable_any',\n\t    'counting_semaphore',\n\t    'deque',\n\t    'false_type',\n\t    'future',\n\t    'imaginary',\n\t    'initializer_list',\n\t    'istringstream',\n\t    'jthread',\n\t    'latch',\n\t    'lock_guard',\n\t    'multimap',\n\t    'multiset',\n\t    'mutex',\n\t    'optional',\n\t    'ostringstream',\n\t    'packaged_task',\n\t    'pair',\n\t    'promise',\n\t    'priority_queue',\n\t    'queue',\n\t    'recursive_mutex',\n\t    'recursive_timed_mutex',\n\t    'scoped_lock',\n\t    'set',\n\t    'shared_future',\n\t    'shared_lock',\n\t    'shared_mutex',\n\t    'shared_timed_mutex',\n\t    'shared_ptr',\n\t    'stack',\n\t    'string_view',\n\t    'stringstream',\n\t    'timed_mutex',\n\t    'thread',\n\t    'true_type',\n\t    'tuple',\n\t    'unique_lock',\n\t    'unique_ptr',\n\t    'unordered_map',\n\t    'unordered_multimap',\n\t    'unordered_multiset',\n\t    'unordered_set',\n\t    'variant',\n\t    'vector',\n\t    'weak_ptr',\n\t    'wstring',\n\t    'wstring_view'\n\t  ];\n\n\t  const FUNCTION_HINTS = [\n\t    'abort',\n\t    'abs',\n\t    'acos',\n\t    'apply',\n\t    'as_const',\n\t    'asin',\n\t    'atan',\n\t    'atan2',\n\t    'calloc',\n\t    'ceil',\n\t    'cerr',\n\t    'cin',\n\t    'clog',\n\t    'cos',\n\t    'cosh',\n\t    'cout',\n\t    'declval',\n\t    'endl',\n\t    'exchange',\n\t    'exit',\n\t    'exp',\n\t    'fabs',\n\t    'floor',\n\t    'fmod',\n\t    'forward',\n\t    'fprintf',\n\t    'fputs',\n\t    'free',\n\t    'frexp',\n\t    'fscanf',\n\t    'future',\n\t    'invoke',\n\t    'isalnum',\n\t    'isalpha',\n\t    'iscntrl',\n\t    'isdigit',\n\t    'isgraph',\n\t    'islower',\n\t    'isprint',\n\t    'ispunct',\n\t    'isspace',\n\t    'isupper',\n\t    'isxdigit',\n\t    'labs',\n\t    'launder',\n\t    'ldexp',\n\t    'log',\n\t    'log10',\n\t    'make_pair',\n\t    'make_shared',\n\t    'make_shared_for_overwrite',\n\t    'make_tuple',\n\t    'make_unique',\n\t    'malloc',\n\t    'memchr',\n\t    'memcmp',\n\t    'memcpy',\n\t    'memset',\n\t    'modf',\n\t    'move',\n\t    'pow',\n\t    'printf',\n\t    'putchar',\n\t    'puts',\n\t    'realloc',\n\t    'scanf',\n\t    'sin',\n\t    'sinh',\n\t    'snprintf',\n\t    'sprintf',\n\t    'sqrt',\n\t    'sscanf',\n\t    'std',\n\t    'stderr',\n\t    'stdin',\n\t    'stdout',\n\t    'strcat',\n\t    'strchr',\n\t    'strcmp',\n\t    'strcpy',\n\t    'strcspn',\n\t    'strlen',\n\t    'strncat',\n\t    'strncmp',\n\t    'strncpy',\n\t    'strpbrk',\n\t    'strrchr',\n\t    'strspn',\n\t    'strstr',\n\t    'swap',\n\t    'tan',\n\t    'tanh',\n\t    'terminate',\n\t    'to_underlying',\n\t    'tolower',\n\t    'toupper',\n\t    'vfprintf',\n\t    'visit',\n\t    'vprintf',\n\t    'vsprintf'\n\t  ];\n\n\t  const LITERALS = [\n\t    'NULL',\n\t    'false',\n\t    'nullopt',\n\t    'nullptr',\n\t    'true'\n\t  ];\n\n\t  // https://en.cppreference.com/w/cpp/keyword\n\t  const BUILT_IN = [ '_Pragma' ];\n\n\t  const CPP_KEYWORDS = {\n\t    type: RESERVED_TYPES,\n\t    keyword: RESERVED_KEYWORDS,\n\t    literal: LITERALS,\n\t    built_in: BUILT_IN,\n\t    _type_hints: TYPE_HINTS\n\t  };\n\n\t  const FUNCTION_DISPATCH = {\n\t    className: 'function.dispatch',\n\t    relevance: 0,\n\t    keywords: {\n\t      // Only for relevance, not highlighting.\n\t      _hint: FUNCTION_HINTS },\n\t    begin: regex.concat(\n\t      /\\b/,\n\t      /(?!decltype)/,\n\t      /(?!if)/,\n\t      /(?!for)/,\n\t      /(?!switch)/,\n\t      /(?!while)/,\n\t      hljs.IDENT_RE,\n\t      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n\t  };\n\n\t  const EXPRESSION_CONTAINS = [\n\t    FUNCTION_DISPATCH,\n\t    PREPROCESSOR,\n\t    CPP_PRIMITIVE_TYPES,\n\t    C_LINE_COMMENT_MODE,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    NUMBERS,\n\t    STRINGS\n\t  ];\n\n\t  const EXPRESSION_CONTEXT = {\n\t    // This mode covers expression context where we can't expect a function\n\t    // definition and shouldn't highlight anything that looks like one:\n\t    // `return some()`, `else if()`, `(x*sum(1, 2))`\n\t    variants: [\n\t      {\n\t        begin: /=/,\n\t        end: /;/\n\t      },\n\t      {\n\t        begin: /\\(/,\n\t        end: /\\)/\n\t      },\n\t      {\n\t        beginKeywords: 'new throw return else',\n\t        end: /;/\n\t      }\n\t    ],\n\t    keywords: CPP_KEYWORDS,\n\t    contains: EXPRESSION_CONTAINS.concat([\n\t      {\n\t        begin: /\\(/,\n\t        end: /\\)/,\n\t        keywords: CPP_KEYWORDS,\n\t        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n\t        relevance: 0\n\t      }\n\t    ]),\n\t    relevance: 0\n\t  };\n\n\t  const FUNCTION_DECLARATION = {\n\t    className: 'function',\n\t    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n\t    returnBegin: true,\n\t    end: /[{;=]/,\n\t    excludeEnd: true,\n\t    keywords: CPP_KEYWORDS,\n\t    illegal: /[^\\w\\s\\*&:<>.]/,\n\t    contains: [\n\t      { // to prevent it from being confused as the function title\n\t        begin: DECLTYPE_AUTO_RE,\n\t        keywords: CPP_KEYWORDS,\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: FUNCTION_TITLE,\n\t        returnBegin: true,\n\t        contains: [ TITLE_MODE ],\n\t        relevance: 0\n\t      },\n\t      // needed because we do not have look-behind on the below rule\n\t      // to prevent it from grabbing the final : in a :: pair\n\t      {\n\t        begin: /::/,\n\t        relevance: 0\n\t      },\n\t      // initializers\n\t      {\n\t        begin: /:/,\n\t        endsWithParent: true,\n\t        contains: [\n\t          STRINGS,\n\t          NUMBERS\n\t        ]\n\t      },\n\t      // allow for multiple declarations, e.g.:\n\t      // extern void f(int), g(char);\n\t      {\n\t        relevance: 0,\n\t        match: /,/\n\t      },\n\t      {\n\t        className: 'params',\n\t        begin: /\\(/,\n\t        end: /\\)/,\n\t        keywords: CPP_KEYWORDS,\n\t        relevance: 0,\n\t        contains: [\n\t          C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE,\n\t          STRINGS,\n\t          NUMBERS,\n\t          CPP_PRIMITIVE_TYPES,\n\t          // Count matching parentheses.\n\t          {\n\t            begin: /\\(/,\n\t            end: /\\)/,\n\t            keywords: CPP_KEYWORDS,\n\t            relevance: 0,\n\t            contains: [\n\t              'self',\n\t              C_LINE_COMMENT_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE,\n\t              STRINGS,\n\t              NUMBERS,\n\t              CPP_PRIMITIVE_TYPES\n\t            ]\n\t          }\n\t        ]\n\t      },\n\t      CPP_PRIMITIVE_TYPES,\n\t      C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      PREPROCESSOR\n\t    ]\n\t  };\n\n\t  return {\n\t    name: 'C++',\n\t    aliases: [\n\t      'cc',\n\t      'c++',\n\t      'h++',\n\t      'hpp',\n\t      'hh',\n\t      'hxx',\n\t      'cxx'\n\t    ],\n\t    keywords: CPP_KEYWORDS,\n\t    illegal: '</',\n\t    classNameAliases: { 'function.dispatch': 'built_in' },\n\t    contains: [].concat(\n\t      EXPRESSION_CONTEXT,\n\t      FUNCTION_DECLARATION,\n\t      FUNCTION_DISPATCH,\n\t      EXPRESSION_CONTAINS,\n\t      [\n\t        PREPROCESSOR,\n\t        { // containers: ie, `vector <int> rooms (9);`\n\t          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n\t          end: '>',\n\t          keywords: CPP_KEYWORDS,\n\t          contains: [\n\t            'self',\n\t            CPP_PRIMITIVE_TYPES\n\t          ]\n\t        },\n\t        {\n\t          begin: hljs.IDENT_RE + '::',\n\t          keywords: CPP_KEYWORDS\n\t        },\n\t        {\n\t          match: [\n\t            // extra complexity to deal with `enum class` and `enum struct`\n\t            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n\t            /\\s+/,\n\t            /\\w+/\n\t          ],\n\t          className: {\n\t            1: 'keyword',\n\t            3: 'title.class'\n\t          }\n\t        }\n\t      ])\n\t  };\n\t}\n\n\tcpp_1 = cpp;\n\treturn cpp_1;\n}\n\nexport { requireCpp as __require };",
      "start": 1699633500769,
      "end": 1699633500771,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500771,
      "end": 1699633500771,
      "order": "normal"
    }
  ]
}
