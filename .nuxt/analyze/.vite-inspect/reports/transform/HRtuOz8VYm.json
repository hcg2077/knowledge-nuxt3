{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/haskell.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\n\nfunction haskell(hljs) {\n\n  /* See:\n     - https://www.haskell.org/onlinereport/lexemes.html\n     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/binary_literals.html\n     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/numeric_underscores.html\n     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/hex_float_literals.html\n  */\n  const decimalDigits = '([0-9]_*)+';\n  const hexDigits = '([0-9a-fA-F]_*)+';\n  const binaryDigits = '([01]_*)+';\n  const octalDigits = '([0-7]_*)+';\n  const ascSymbol = '[!#$%&*+.\\\\/<=>?@\\\\\\\\^~-]';\n  const uniSymbol = '(\\\\p{S}|\\\\p{P})'; // Symbol or Punctuation\n  const special = '[(),;\\\\[\\\\]`|{}]';\n  const symbol = `(${ascSymbol}|(?!(${special}|[_:\"']))${uniSymbol})`;\n\n  const COMMENT = { variants: [\n    // Double dash forms a valid comment only if it's not part of legal lexeme.\n    // See: Haskell 98 report: https://www.haskell.org/onlinereport/lexemes.html\n    //\n    // The commented code does the job, but we can't use negative lookbehind,\n    // due to poor support by Safari browser.\n    // > hljs.COMMENT(`(?<!${symbol})--+(?!${symbol})`, '$'),\n    // So instead, we'll add a no-markup rule before the COMMENT rule in the rules list\n    // to match the problematic infix operators that contain double dash.\n    hljs.COMMENT('--+', '$'),\n    hljs.COMMENT(\n      /\\{-/,\n      /-\\}/,\n      { contains: [ 'self' ] }\n    )\n  ] };\n\n  const PRAGMA = {\n    className: 'meta',\n    begin: /\\{-#/,\n    end: /#-\\}/\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      hljs.inherit(hljs.TITLE_MODE, { begin: '[_a-z][\\\\w\\']*' }),\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal floating-point-literal (subsumes decimal-literal)\n      { match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b` },\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n      { match: `\\\\b0[xX]_*(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b` },\n      // octal-literal\n      { match: `\\\\b0[oO](${octalDigits})\\\\b` },\n      // binary-literal\n      { match: `\\\\b0[bB](${binaryDigits})\\\\b` }\n    ]\n  };\n\n  return {\n    name: 'Haskell',\n    aliases: [ 'hs' ],\n    keywords:\n      'let in if then else case of where do module import hiding '\n      + 'qualified type data newtype deriving class instance as default '\n      + 'infix infixl infixr foreign export ccall stdcall cplusplus '\n      + 'jvm dotnet safe unsafe family forall mdo proc rec',\n    unicodeRegex: true,\n    contains: [\n      // Top-level constructions.\n      {\n        beginKeywords: 'module',\n        end: 'where',\n        keywords: 'module where',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b',\n        end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b',\n        end: 'where',\n        keywords: 'class family instance where',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b',\n        end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [\n          PRAGMA,\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'default',\n        end: '$',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: '\\\\bforeign\\\\b',\n        end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm '\n                  + 'dotnet safe unsafe',\n        contains: [\n          CONSTRUCTOR,\n          hljs.QUOTE_STRING_MODE,\n          COMMENT\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n        end: '$'\n      },\n      // \"Whitespaces\".\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // Single characters.\n      {\n        scope: 'string',\n        begin: /'(?=\\\\?.')/,\n        end: /'/,\n        contains: [\n          {\n            scope: 'char.escape',\n            match: /\\\\./,\n          },\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      NUMBER,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, { begin: '^[_a-z][\\\\w\\']*' }),\n      // No markup, prevents infix operators from being recognized as comments.\n      { begin: `(?!-)${symbol}--+|--+(?!-)${symbol}`},\n      COMMENT,\n      { // No markup, relevance booster\n        begin: '->|<-' }\n    ]\n  };\n}\n\nmodule.exports = haskell;\n",
      "start": 1699633500874,
      "end": 1699633500985,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500985,
      "end": 1699633500985,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500985,
      "end": 1699633500985,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500985,
      "end": 1699633500985,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500985,
      "end": 1699633500985,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500985,
      "end": 1699633500985,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500985,
      "end": 1699633500985,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633500986,
      "end": 1699633500986,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar haskell_1;\nvar hasRequiredHaskell;\n\nfunction requireHaskell () {\n\tif (hasRequiredHaskell) return haskell_1;\n\thasRequiredHaskell = 1;\n\tfunction haskell(hljs) {\n\n\t  /* See:\n\t     - https://www.haskell.org/onlinereport/lexemes.html\n\t     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/binary_literals.html\n\t     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/numeric_underscores.html\n\t     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/hex_float_literals.html\n\t  */\n\t  const decimalDigits = '([0-9]_*)+';\n\t  const hexDigits = '([0-9a-fA-F]_*)+';\n\t  const binaryDigits = '([01]_*)+';\n\t  const octalDigits = '([0-7]_*)+';\n\t  const ascSymbol = '[!#$%&*+.\\\\/<=>?@\\\\\\\\^~-]';\n\t  const uniSymbol = '(\\\\p{S}|\\\\p{P})'; // Symbol or Punctuation\n\t  const special = '[(),;\\\\[\\\\]`|{}]';\n\t  const symbol = `(${ascSymbol}|(?!(${special}|[_:\"']))${uniSymbol})`;\n\n\t  const COMMENT = { variants: [\n\t    // Double dash forms a valid comment only if it's not part of legal lexeme.\n\t    // See: Haskell 98 report: https://www.haskell.org/onlinereport/lexemes.html\n\t    //\n\t    // The commented code does the job, but we can't use negative lookbehind,\n\t    // due to poor support by Safari browser.\n\t    // > hljs.COMMENT(`(?<!${symbol})--+(?!${symbol})`, '$'),\n\t    // So instead, we'll add a no-markup rule before the COMMENT rule in the rules list\n\t    // to match the problematic infix operators that contain double dash.\n\t    hljs.COMMENT('--+', '$'),\n\t    hljs.COMMENT(\n\t      /\\{-/,\n\t      /-\\}/,\n\t      { contains: [ 'self' ] }\n\t    )\n\t  ] };\n\n\t  const PRAGMA = {\n\t    className: 'meta',\n\t    begin: /\\{-#/,\n\t    end: /#-\\}/\n\t  };\n\n\t  const PREPROCESSOR = {\n\t    className: 'meta',\n\t    begin: '^#',\n\t    end: '$'\n\t  };\n\n\t  const CONSTRUCTOR = {\n\t    className: 'type',\n\t    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n\t    relevance: 0\n\t  };\n\n\t  const LIST = {\n\t    begin: '\\\\(',\n\t    end: '\\\\)',\n\t    illegal: '\"',\n\t    contains: [\n\t      PRAGMA,\n\t      PREPROCESSOR,\n\t      {\n\t        className: 'type',\n\t        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n\t      },\n\t      hljs.inherit(hljs.TITLE_MODE, { begin: '[_a-z][\\\\w\\']*' }),\n\t      COMMENT\n\t    ]\n\t  };\n\n\t  const RECORD = {\n\t    begin: /\\{/,\n\t    end: /\\}/,\n\t    contains: LIST.contains\n\t  };\n\n\t  const NUMBER = {\n\t    className: 'number',\n\t    relevance: 0,\n\t    variants: [\n\t      // decimal floating-point-literal (subsumes decimal-literal)\n\t      { match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b` },\n\t      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n\t      { match: `\\\\b0[xX]_*(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b` },\n\t      // octal-literal\n\t      { match: `\\\\b0[oO](${octalDigits})\\\\b` },\n\t      // binary-literal\n\t      { match: `\\\\b0[bB](${binaryDigits})\\\\b` }\n\t    ]\n\t  };\n\n\t  return {\n\t    name: 'Haskell',\n\t    aliases: [ 'hs' ],\n\t    keywords:\n\t      'let in if then else case of where do module import hiding '\n\t      + 'qualified type data newtype deriving class instance as default '\n\t      + 'infix infixl infixr foreign export ccall stdcall cplusplus '\n\t      + 'jvm dotnet safe unsafe family forall mdo proc rec',\n\t    unicodeRegex: true,\n\t    contains: [\n\t      // Top-level constructions.\n\t      {\n\t        beginKeywords: 'module',\n\t        end: 'where',\n\t        keywords: 'module where',\n\t        contains: [\n\t          LIST,\n\t          COMMENT\n\t        ],\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t      {\n\t        begin: '\\\\bimport\\\\b',\n\t        end: '$',\n\t        keywords: 'import qualified as hiding',\n\t        contains: [\n\t          LIST,\n\t          COMMENT\n\t        ],\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t      {\n\t        className: 'class',\n\t        begin: '^(\\\\s*)?(class|instance)\\\\b',\n\t        end: 'where',\n\t        keywords: 'class family instance where',\n\t        contains: [\n\t          CONSTRUCTOR,\n\t          LIST,\n\t          COMMENT\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        begin: '\\\\b(data|(new)?type)\\\\b',\n\t        end: '$',\n\t        keywords: 'data family type newtype deriving',\n\t        contains: [\n\t          PRAGMA,\n\t          CONSTRUCTOR,\n\t          LIST,\n\t          RECORD,\n\t          COMMENT\n\t        ]\n\t      },\n\t      {\n\t        beginKeywords: 'default',\n\t        end: '$',\n\t        contains: [\n\t          CONSTRUCTOR,\n\t          LIST,\n\t          COMMENT\n\t        ]\n\t      },\n\t      {\n\t        beginKeywords: 'infix infixl infixr',\n\t        end: '$',\n\t        contains: [\n\t          hljs.C_NUMBER_MODE,\n\t          COMMENT\n\t        ]\n\t      },\n\t      {\n\t        begin: '\\\\bforeign\\\\b',\n\t        end: '$',\n\t        keywords: 'foreign import export ccall stdcall cplusplus jvm '\n\t                  + 'dotnet safe unsafe',\n\t        contains: [\n\t          CONSTRUCTOR,\n\t          hljs.QUOTE_STRING_MODE,\n\t          COMMENT\n\t        ]\n\t      },\n\t      {\n\t        className: 'meta',\n\t        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n\t        end: '$'\n\t      },\n\t      // \"Whitespaces\".\n\t      PRAGMA,\n\t      PREPROCESSOR,\n\n\t      // Literals and names.\n\n\t      // Single characters.\n\t      {\n\t        scope: 'string',\n\t        begin: /'(?=\\\\?.')/,\n\t        end: /'/,\n\t        contains: [\n\t          {\n\t            scope: 'char.escape',\n\t            match: /\\\\./,\n\t          },\n\t        ]\n\t      },\n\t      hljs.QUOTE_STRING_MODE,\n\t      NUMBER,\n\t      CONSTRUCTOR,\n\t      hljs.inherit(hljs.TITLE_MODE, { begin: '^[_a-z][\\\\w\\']*' }),\n\t      // No markup, prevents infix operators from being recognized as comments.\n\t      { begin: `(?!-)${symbol}--+|--+(?!-)${symbol}`},\n\t      COMMENT,\n\t      { // No markup, relevance booster\n\t        begin: '->|<-' }\n\t    ]\n\t  };\n\t}\n\n\thaskell_1 = haskell;\n\treturn haskell_1;\n}\n\nexport { requireHaskell as __require };",
      "start": 1699633500986,
      "end": 1699633500987,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500987,
      "end": 1699633500987,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500987,
      "end": 1699633500987,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500987,
      "end": 1699633500987,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500987,
      "end": 1699633500987,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500987,
      "end": 1699633500988,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500988,
      "end": 1699633500988,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500988,
      "end": 1699633500988,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500988,
      "end": 1699633500988,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500988,
      "end": 1699633500988,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500988,
      "end": 1699633500988,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500988,
      "end": 1699633500988,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500988,
      "end": 1699633500988,
      "order": "normal"
    }
  ]
}
