{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/pony.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Pony\nAuthor: Joe Eli McIlvain <joe.eli.mac@gmail.com>\nDescription: Pony is an open-source, object-oriented, actor-model,\n             capabilities-secure, high performance programming language.\nWebsite: https://www.ponylang.io\n*/\n\nfunction pony(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'actor addressof and as be break class compile_error compile_intrinsic '\n      + 'consume continue delegate digestof do else elseif embed end error '\n      + 'for fun if ifdef in interface is isnt lambda let match new not object '\n      + 'or primitive recover repeat return struct then trait try type until '\n      + 'use var where while with xor',\n    meta:\n      'iso val tag trn box ref',\n    literal:\n      'this false true'\n  };\n\n  const TRIPLE_QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"\"\"',\n    end: '\"\"\"',\n    relevance: 10\n  };\n\n  const QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n\n  const SINGLE_QUOTE_CHAR_MODE = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    relevance: 0\n  };\n\n  const TYPE_NAME = {\n    className: 'type',\n    begin: '\\\\b_?[A-Z][\\\\w]*',\n    relevance: 0\n  };\n\n  const PRIMED_NAME = {\n    begin: hljs.IDENT_RE + '\\'',\n    relevance: 0\n  };\n\n  const NUMBER_MODE = {\n    className: 'number',\n    begin: '(-?)(\\\\b0[xX][a-fA-F0-9]+|\\\\b0[bB][01]+|(\\\\b\\\\d+(_\\\\d+)?(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n\n  /**\n   * The `FUNCTION` and `CLASS` modes were intentionally removed to simplify\n   * highlighting and fix cases like\n   * ```\n   * interface Iterator[A: A]\n   *   fun has_next(): Bool\n   *   fun next(): A?\n   * ```\n   * where it is valid to have a function head without a body\n   */\n\n  return {\n    name: 'Pony',\n    keywords: KEYWORDS,\n    contains: [\n      TYPE_NAME,\n      TRIPLE_QUOTE_STRING_MODE,\n      QUOTE_STRING_MODE,\n      SINGLE_QUOTE_CHAR_MODE,\n      PRIMED_NAME,\n      NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n}\n\nmodule.exports = pony;\n",
      "start": 1699633501219,
      "end": 1699633501311,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501311,
      "end": 1699633501311,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501311,
      "end": 1699633501311,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501311,
      "end": 1699633501311,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501311,
      "end": 1699633501311,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501311,
      "end": 1699633501311,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501312,
      "end": 1699633501312,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Pony\nAuthor: Joe Eli McIlvain <joe.eli.mac@gmail.com>\nDescription: Pony is an open-source, object-oriented, actor-model,\n             capabilities-secure, high performance programming language.\nWebsite: https://www.ponylang.io\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar pony_1;\nvar hasRequiredPony;\n\nfunction requirePony () {\n\tif (hasRequiredPony) return pony_1;\n\thasRequiredPony = 1;\n\tfunction pony(hljs) {\n\t  const KEYWORDS = {\n\t    keyword:\n\t      'actor addressof and as be break class compile_error compile_intrinsic '\n\t      + 'consume continue delegate digestof do else elseif embed end error '\n\t      + 'for fun if ifdef in interface is isnt lambda let match new not object '\n\t      + 'or primitive recover repeat return struct then trait try type until '\n\t      + 'use var where while with xor',\n\t    meta:\n\t      'iso val tag trn box ref',\n\t    literal:\n\t      'this false true'\n\t  };\n\n\t  const TRIPLE_QUOTE_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '\"\"\"',\n\t    end: '\"\"\"',\n\t    relevance: 10\n\t  };\n\n\t  const QUOTE_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '\"',\n\t    end: '\"',\n\t    contains: [ hljs.BACKSLASH_ESCAPE ]\n\t  };\n\n\t  const SINGLE_QUOTE_CHAR_MODE = {\n\t    className: 'string',\n\t    begin: '\\'',\n\t    end: '\\'',\n\t    contains: [ hljs.BACKSLASH_ESCAPE ],\n\t    relevance: 0\n\t  };\n\n\t  const TYPE_NAME = {\n\t    className: 'type',\n\t    begin: '\\\\b_?[A-Z][\\\\w]*',\n\t    relevance: 0\n\t  };\n\n\t  const PRIMED_NAME = {\n\t    begin: hljs.IDENT_RE + '\\'',\n\t    relevance: 0\n\t  };\n\n\t  const NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: '(-?)(\\\\b0[xX][a-fA-F0-9]+|\\\\b0[bB][01]+|(\\\\b\\\\d+(_\\\\d+)?(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)',\n\t    relevance: 0\n\t  };\n\n\t  /**\n\t   * The `FUNCTION` and `CLASS` modes were intentionally removed to simplify\n\t   * highlighting and fix cases like\n\t   * ```\n\t   * interface Iterator[A: A]\n\t   *   fun has_next(): Bool\n\t   *   fun next(): A?\n\t   * ```\n\t   * where it is valid to have a function head without a body\n\t   */\n\n\t  return {\n\t    name: 'Pony',\n\t    keywords: KEYWORDS,\n\t    contains: [\n\t      TYPE_NAME,\n\t      TRIPLE_QUOTE_STRING_MODE,\n\t      QUOTE_STRING_MODE,\n\t      SINGLE_QUOTE_CHAR_MODE,\n\t      PRIMED_NAME,\n\t      NUMBER_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE\n\t    ]\n\t  };\n\t}\n\n\tpony_1 = pony;\n\treturn pony_1;\n}\n\nexport { requirePony as __require };",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;CAQA,SAAS,IAAI,CAAC,IAAI,EAAE;CACpB,EAAE,MAAM,QAAQ,GAAG;CACnB,IAAI,OAAO;CACX,MAAM,wEAAwE;CAC9E,QAAQ,oEAAoE;CAC5E,QAAQ,wEAAwE;CAChF,QAAQ,sEAAsE;CAC9E,QAAQ,8BAA8B;CACtC,IAAI,IAAI;CACR,MAAM,yBAAyB;CAC/B,IAAI,OAAO;CACX,MAAM,iBAAiB;CACvB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,wBAAwB,GAAG;CACnC,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,KAAK;CAChB,IAAI,GAAG,EAAE,KAAK;CACd,IAAI,SAAS,EAAE,EAAE;CACjB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,iBAAiB,GAAG;CAC5B,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,GAAG;CACd,IAAI,GAAG,EAAE,GAAG;CACZ,IAAI,QAAQ,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE;CACvC,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,sBAAsB,GAAG;CACjC,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,IAAI;CACf,IAAI,GAAG,EAAE,IAAI;CACb,IAAI,QAAQ,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE;CACvC,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,SAAS,GAAG;CACpB,IAAI,SAAS,EAAE,MAAM;CACrB,IAAI,KAAK,EAAE,kBAAkB;CAC7B,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,WAAW,GAAG;CACtB,IAAI,KAAK,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI;CAC/B,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,WAAW,GAAG;CACtB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,8FAA8F;CACzG,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;AACJ;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,MAAM;CAChB,IAAI,QAAQ,EAAE,QAAQ;CACtB,IAAI,QAAQ,EAAE;CACd,MAAM,SAAS;CACf,MAAM,wBAAwB;CAC9B,MAAM,iBAAiB;CACvB,MAAM,sBAAsB;CAC5B,MAAM,WAAW;CACjB,MAAM,WAAW;CACjB,MAAM,IAAI,CAAC,mBAAmB;CAC9B,MAAM,IAAI,CAAC,oBAAoB;CAC/B,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,OAAc,GAAG,IAAI"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501313,
      "end": 1699633501313,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501313,
      "end": 1699633501314,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501314,
      "end": 1699633501314,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501314,
      "end": 1699633501314,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501314,
      "end": 1699633501314,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501314,
      "end": 1699633501314,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501314,
      "end": 1699633501314,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501314,
      "end": 1699633501314,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501314,
      "end": 1699633501314,
      "order": "normal"
    }
  ]
}
