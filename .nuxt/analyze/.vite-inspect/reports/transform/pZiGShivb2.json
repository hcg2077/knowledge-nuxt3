{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/swiper/modules/effect-creative/effect-creative.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}",
      "start": 1699710597882,
      "end": 1699710598033,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699710598034,
      "end": 1699710598034,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:default",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699710598035,
      "end": 1699710598035,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699710598036,
      "end": 1699710598036,
      "order": "normal"
    }
  ]
}
