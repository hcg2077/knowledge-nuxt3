{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_core/text_join.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n",
      "start": 1699633501771,
      "end": 1699633501860,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501860,
      "end": 1699633501860,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501860,
      "end": 1699633501860,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501860,
      "end": 1699633501860,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501860,
      "end": 1699633501860,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501860,
      "end": 1699633501860,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501860,
      "end": 1699633501860,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501861,
      "end": 1699633501861,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\n// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nvar text_join = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(text_join);\nexport { text_join as __moduleExports };",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,CAAC;AACb;AACA;IACA,SAAc,GAAG,SAAS,SAAS,CAAC,KAAK,EAAE;AAC3C,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;AACnC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;AACjC;AACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE,SAAS;AACnD;AACA,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AACrC,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;AACxB;AACA,IAAI,KAAK,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE;AACvC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,cAAc,EAAE;AAChD,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;AACnC,OAAO;AACP,KAAK;AACL;AACA,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE;AAC9C,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM;AACtC,UAAU,IAAI,GAAG,CAAC,GAAG,GAAG;AACxB,UAAU,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,EAAE;AAC5C;AACA;AACA,QAAQ,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;AACnF,OAAO,MAAM;AACb,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAC3D;AACA,QAAQ,IAAI,EAAE,CAAC;AACf,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;AACvB,MAAM,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,KAAK;AACL,GAAG;AACH,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501862,
      "end": 1699633501862,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501862,
      "end": 1699633501863,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501863,
      "end": 1699633501863,
      "order": "normal"
    }
  ]
}
