{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/crypto-js/lib-typedarrays.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",
      "start": 1699633499853,
      "end": 1699633499902,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633499902,
      "end": 1699633499902,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633499902,
      "end": 1699633499902,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633499902,
      "end": 1699633499902,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633499902,
      "end": 1699633499902,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633499902,
      "end": 1699633499902,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633499902,
      "end": 1699633499902,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633499903,
      "end": 1699633499903,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __module as libTypedarraysModule } from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/crypto-js/lib-typedarrays.js?commonjs-module\";\nvar libTypedarrays = libTypedarraysModule.exports;\nimport { __require as require$$0 } from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/crypto-js/core.js?commonjs-wrapped\";\n\nvar hasRequiredLibTypedarrays;\n\nfunction requireLibTypedarrays () {\n\tif (hasRequiredLibTypedarrays) return libTypedarraysModule.exports;\n\thasRequiredLibTypedarrays = 1;\n\t(function (module, exports) {\n\t\t;(function (root, factory) {\n\t\t\tif ('object' === \"object\") {\n\t\t\t\t// CommonJS\n\t\t\t\tmodule.exports = exports = factory(require$$0());\n\t\t\t}\n\t\t\telse if (typeof undefined === \"function\" && undefined.amd) {\n\t\t\t\t// AMD\n\t\t\t\tundefined([\"./core\"], factory);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Global (browser)\n\t\t\t\tfactory(root.CryptoJS);\n\t\t\t}\n\t\t}(commonjsHelpers.commonjsGlobal, function (CryptoJS) {\n\n\t\t\t(function () {\n\t\t\t    // Check if typed arrays are supported\n\t\t\t    if (typeof ArrayBuffer != 'function') {\n\t\t\t        return;\n\t\t\t    }\n\n\t\t\t    // Shortcuts\n\t\t\t    var C = CryptoJS;\n\t\t\t    var C_lib = C.lib;\n\t\t\t    var WordArray = C_lib.WordArray;\n\n\t\t\t    // Reference original init\n\t\t\t    var superInit = WordArray.init;\n\n\t\t\t    // Augment WordArray.init to handle typed arrays\n\t\t\t    var subInit = WordArray.init = function (typedArray) {\n\t\t\t        // Convert buffers to uint8\n\t\t\t        if (typedArray instanceof ArrayBuffer) {\n\t\t\t            typedArray = new Uint8Array(typedArray);\n\t\t\t        }\n\n\t\t\t        // Convert other array views to uint8\n\t\t\t        if (\n\t\t\t            typedArray instanceof Int8Array ||\n\t\t\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t\t\t            typedArray instanceof Int16Array ||\n\t\t\t            typedArray instanceof Uint16Array ||\n\t\t\t            typedArray instanceof Int32Array ||\n\t\t\t            typedArray instanceof Uint32Array ||\n\t\t\t            typedArray instanceof Float32Array ||\n\t\t\t            typedArray instanceof Float64Array\n\t\t\t        ) {\n\t\t\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t\t\t        }\n\n\t\t\t        // Handle Uint8Array\n\t\t\t        if (typedArray instanceof Uint8Array) {\n\t\t\t            // Shortcut\n\t\t\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t\t\t            // Extract bytes\n\t\t\t            var words = [];\n\t\t\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t\t\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t\t\t            }\n\n\t\t\t            // Initialize this word array\n\t\t\t            superInit.call(this, words, typedArrayByteLength);\n\t\t\t        } else {\n\t\t\t            // Else call normal init\n\t\t\t            superInit.apply(this, arguments);\n\t\t\t        }\n\t\t\t    };\n\n\t\t\t    subInit.prototype = WordArray;\n\t\t\t}());\n\n\n\t\t\treturn CryptoJS.lib.WordArray;\n\n\t\t})); \n\t} (libTypedarraysModule, libTypedarraysModule.exports));\n\treturn libTypedarraysModule.exports;\n}\n\nexport { requireLibTypedarrays as __require };",
      "start": 1699633499903,
      "end": 1699633500018,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [
          "define",
          "this"
        ],
        "mappings": ";;;;;;;;;;;EAAA,CAAC,CAAC,UAAU,IAAI,EAAE,OAAO,EAAE;EAC3B,CAAC,IAAI,QAAc,KAAK,QAAQ,EAAE;EAClC;EACA,EAAE,iBAAiB,OAAO,GAAG,OAAO,CAAC,YAAiB,CAAC,CAAC;EACxD,EAAE;EACF,MAAM,IAAI,OAAOA,SAAM,KAAK,UAAU,IAAIA,SAAM,CAAC,GAAG,EAAE;EACtD;EACA,EAAEA,SAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;EAC9B,EAAE;EACF,MAAM;EACN;EACA,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EACzB,EAAE;EACF,CAAC,CAACC,8BAAI,EAAE,UAAU,QAAQ,EAAE;AAC5B;EACA,CAAC,CAAC,YAAY;EACd;EACA,KAAK,IAAI,OAAO,WAAW,IAAI,UAAU,EAAE;EAC3C,SAAS,OAAO;EAChB,MAAM;AACN;EACA;EACA,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC;EACtB,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;EACvB,KAAK,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;AACrC;EACA;EACA,KAAK,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;AACpC;EACA;EACA,KAAK,IAAI,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,UAAU,UAAU,EAAE;EAC1D;EACA,SAAS,IAAI,UAAU,YAAY,WAAW,EAAE;EAChD,aAAa,UAAU,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC;EACrD,UAAU;AACV;EACA;EACA,SAAS;EACT,aAAa,UAAU,YAAY,SAAS;EAC5C,cAAc,OAAO,iBAAiB,KAAK,WAAW,IAAI,UAAU,YAAY,iBAAiB,CAAC;EAClG,aAAa,UAAU,YAAY,UAAU;EAC7C,aAAa,UAAU,YAAY,WAAW;EAC9C,aAAa,UAAU,YAAY,UAAU;EAC7C,aAAa,UAAU,YAAY,WAAW;EAC9C,aAAa,UAAU,YAAY,YAAY;EAC/C,aAAa,UAAU,YAAY,YAAY;EAC/C,WAAW;EACX,aAAa,UAAU,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;EAC1G,UAAU;AACV;EACA;EACA,SAAS,IAAI,UAAU,YAAY,UAAU,EAAE;EAC/C;EACA,aAAa,IAAI,oBAAoB,GAAG,UAAU,CAAC,UAAU,CAAC;AAC9D;EACA;EACA,aAAa,IAAI,KAAK,GAAG,EAAE,CAAC;EAC5B,aAAa,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,EAAE,CAAC,EAAE,EAAE;EAC5D,iBAAiB,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EACvE,cAAc;AACd;EACA;EACA,aAAa,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,oBAAoB,CAAC,CAAC;EAC/D,UAAU,MAAM;EAChB;EACA,aAAa,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EAC9C,UAAU;EACV,MAAM,CAAC;AACP;EACA,KAAK,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;EACnC,EAAE,EAAE,EAAE;AACN;AACA;EACA,CAAC,OAAO,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC;AAC/B;EACA,CAAC,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500018,
      "end": 1699633500018,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500019,
      "end": 1699633500019,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500019,
      "end": 1699633500019,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500020,
      "end": 1699633500020,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500020,
      "end": 1699633500021,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500021,
      "end": 1699633500021,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500021,
      "end": 1699633500021,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500022,
      "end": 1699633500022,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500022,
      "end": 1699633500022,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500023,
      "end": 1699633500023,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500023,
      "end": 1699633500023,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500024,
      "end": 1699633500024,
      "order": "normal"
    }
  ]
}
