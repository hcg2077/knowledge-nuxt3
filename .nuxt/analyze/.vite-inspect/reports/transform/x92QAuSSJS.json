{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_block/html_block.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n",
      "start": 1699633501701,
      "end": 1699633501803,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501804,
      "end": 1699633501804,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501805,
      "end": 1699633501805,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/common/html_blocks.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/common/html_re.js?commonjs-proxy\";\n\n// HTML block\n\n'use strict';\n\n\nvar block_names = require$$0;\nvar HTML_OPEN_CLOSE_TAG_RE = require$$1.HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nvar html_block = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(html_block);\nexport { html_block as __moduleExports };",
      "start": 1699633501805,
      "end": 1699633502085,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;AAAA;AACA;AACA,YAAY,CAAC;AACb;AACA;AACA,IAAI,WAAW,GAAG,UAAgC,CAAC;AACnD,IAAI,sBAAsB,GAAG,UAA4B,CAAC,sBAAsB,CAAC;AACjF;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG;AACrB,EAAE,EAAE,4CAA4C,EAAE,kCAAkC,EAAE,IAAI,EAAE;AAC5F,EAAE,EAAE,OAAO,SAAS,KAAK,IAAI,IAAI,EAAE;AACnC,EAAE,EAAE,MAAM,UAAU,KAAK,IAAI,IAAI,EAAE;AACnC,EAAE,EAAE,UAAU,MAAM,GAAG,MAAM,IAAI,EAAE;AACnC,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE;AACnC,EAAE,EAAE,IAAI,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,kBAAkB,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;AACvF,EAAE,EAAE,IAAI,MAAM,CAAC,sBAAsB,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,EAAE,KAAK,EAAE;AACvE,CAAC,CAAC;AACF;AACA;IACA,UAAc,GAAG,SAAS,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE;AACxE,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ;AAClC,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;AAC7D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACpC;AACA;AACA,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,SAAS,IAAI,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AACvE;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AAC/C;AACA,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,SAAS,EAAE,OAAO,KAAK,CAAC,EAAE;AAClE;AACA,EAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACvC;AACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE;AACvD,GAAG;AACH;AACA,EAAE,IAAI,CAAC,KAAK,cAAc,CAAC,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AACpD;AACA,EAAE,IAAI,MAAM,EAAE;AACd;AACA,IAAI,OAAO,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,GAAG;AACH;AACA,EAAE,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAC;AAC3B;AACA;AACA;AACA,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC5C,IAAI,OAAO,QAAQ,GAAG,OAAO,EAAE,QAAQ,EAAE,EAAE;AAC3C,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE;AAC9D;AACA,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC5D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACnC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3C;AACA,MAAM,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC/C,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;AAClD,QAAQ,MAAM;AACd,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;AACxB;AACA,EAAE,KAAK,WAAW,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAClD,EAAE,KAAK,CAAC,GAAG,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;AAC1C,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC7E;AACA,EAAE,OAAO,IAAI,CAAC;AACd,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633502085,
      "end": 1699633502085,
      "order": "normal"
    }
  ]
}
