{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_core/inline.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n",
      "start": 1699633501751,
      "end": 1699633501842,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501842,
      "end": 1699633501842,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501842,
      "end": 1699633501842,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501843,
      "end": 1699633501843,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\n'use strict';\n\nvar inline = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(inline);\nexport { inline as __moduleExports };",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;AAAA,YAAY,CAAC;AACb;IACA,MAAc,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE;AACxC,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AACvC;AACA;AACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACpB,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC/B,MAAM,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC5E,KAAK;AACL,GAAG;AACH,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501844,
      "end": 1699633501844,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501844,
      "end": 1699633501845,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501845,
      "end": 1699633501845,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501845,
      "end": 1699633501847,
      "order": "normal"
    }
  ]
}
