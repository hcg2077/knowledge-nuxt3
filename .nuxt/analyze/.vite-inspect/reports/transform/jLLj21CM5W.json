{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_inline/strikethrough.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n",
      "start": 1699633501801,
      "end": 1699633501897,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501898,
      "end": 1699633501898,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501898,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501899,
      "end": 1699633501899,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as strikethrough } from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_inline/strikethrough.js?commonjs-exports\";\n\n// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nvar tokenize = strikethrough.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nvar postProcess_1 = strikethrough.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n\nexport { strikethrough as __moduleExports, tokenize, postProcess_1 as postProcess, strikethrough as default };",
      "start": 1699633501899,
      "end": 1699633501900,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501900,
      "end": 1699633501900,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501900,
      "end": 1699633501901,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501901,
      "end": 1699633501901,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501901,
      "end": 1699633501901,
      "order": "normal"
    }
  ]
}
