{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/avrasm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: AVR Assembly\nAuthor: Vladimir Ermakov <vooon341@gmail.com>\nCategory: assembler\nWebsite: https://www.microchip.com/webdoc/avrassembler/avrassembler.wb_instruction_list.html\n*/\n\n/** @type LanguageFn */\nfunction avrasm(hljs) {\n  return {\n    name: 'AVR Assembly',\n    case_insensitive: true,\n    keywords: {\n      $pattern: '\\\\.?' + hljs.IDENT_RE,\n      keyword:\n        /* mnemonic */\n        'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs '\n        + 'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr '\n        + 'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor '\n        + 'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul '\n        + 'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs '\n        + 'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub '\n        + 'subi swap tst wdr',\n      built_in:\n        /* general purpose registers */\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 '\n        + 'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl '\n        /* IO Registers (ATMega128) */\n        + 'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h '\n        + 'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c '\n        + 'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg '\n        + 'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk '\n        + 'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al '\n        + 'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr '\n        + 'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 '\n        + 'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',\n      meta:\n        '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list '\n        + '.listmac .macro .nolist .org .set'\n    },\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT(\n        ';',\n        '$',\n        { relevance: 0 }\n      ),\n      hljs.C_NUMBER_MODE, // 0x..., decimal, float\n      hljs.BINARY_NUMBER_MODE, // 0b...\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '[^\\\\\\\\]\\'',\n        illegal: '[^\\\\\\\\][^\\']'\n      },\n      {\n        className: 'symbol',\n        begin: '^[A-Za-z0-9_.$]+:'\n      },\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$'\n      },\n      { // substitution within a macro\n        className: 'subst',\n        begin: '@[0-9]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = avrasm;\n",
      "start": 1699633500536,
      "end": 1699633500668,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500668,
      "end": 1699633500668,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500669,
      "end": 1699633500669,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: AVR Assembly\nAuthor: Vladimir Ermakov <vooon341@gmail.com>\nCategory: assembler\nWebsite: https://www.microchip.com/webdoc/avrassembler/avrassembler.wb_instruction_list.html\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar avrasm_1;\nvar hasRequiredAvrasm;\n\nfunction requireAvrasm () {\n\tif (hasRequiredAvrasm) return avrasm_1;\n\thasRequiredAvrasm = 1;\n\t/** @type LanguageFn */\n\tfunction avrasm(hljs) {\n\t  return {\n\t    name: 'AVR Assembly',\n\t    case_insensitive: true,\n\t    keywords: {\n\t      $pattern: '\\\\.?' + hljs.IDENT_RE,\n\t      keyword:\n\t        /* mnemonic */\n\t        'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs '\n\t        + 'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr '\n\t        + 'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor '\n\t        + 'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul '\n\t        + 'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs '\n\t        + 'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub '\n\t        + 'subi swap tst wdr',\n\t      built_in:\n\t        /* general purpose registers */\n\t        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 '\n\t        + 'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl '\n\t        /* IO Registers (ATMega128) */\n\t        + 'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h '\n\t        + 'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c '\n\t        + 'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg '\n\t        + 'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk '\n\t        + 'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al '\n\t        + 'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr '\n\t        + 'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 '\n\t        + 'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',\n\t      meta:\n\t        '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list '\n\t        + '.listmac .macro .nolist .org .set'\n\t    },\n\t    contains: [\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.COMMENT(\n\t        ';',\n\t        '$',\n\t        { relevance: 0 }\n\t      ),\n\t      hljs.C_NUMBER_MODE, // 0x..., decimal, float\n\t      hljs.BINARY_NUMBER_MODE, // 0b...\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\b(\\\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...\n\t      },\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\\'',\n\t        end: '[^\\\\\\\\]\\'',\n\t        illegal: '[^\\\\\\\\][^\\']'\n\t      },\n\t      {\n\t        className: 'symbol',\n\t        begin: '^[A-Za-z0-9_.$]+:'\n\t      },\n\t      {\n\t        className: 'meta',\n\t        begin: '#',\n\t        end: '$'\n\t      },\n\t      { // substitution within a macro\n\t        className: 'subst',\n\t        begin: '@[0-9]+'\n\t      }\n\t    ]\n\t  };\n\t}\n\n\tavrasm_1 = avrasm;\n\treturn avrasm_1;\n}\n\nexport { requireAvrasm as __require };",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;CAOA;CACA,SAAS,MAAM,CAAC,IAAI,EAAE;CACtB,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,cAAc;CACxB,IAAI,gBAAgB,EAAE,IAAI;CAC1B,IAAI,QAAQ,EAAE;CACd,MAAM,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAC,QAAQ;CACtC,MAAM,OAAO;CACb;CACA,QAAQ,mFAAmF;CAC3F,UAAU,oFAAoF;CAC9F,UAAU,oFAAoF;CAC9F,UAAU,kFAAkF;CAC5F,UAAU,uFAAuF;CACjG,UAAU,uFAAuF;CACjG,UAAU,mBAAmB;CAC7B,MAAM,QAAQ;CACd;CACA,QAAQ,oFAAoF;CAC5F,UAAU,oEAAoE;CAC9E;CACA,UAAU,oFAAoF;CAC9F,UAAU,mFAAmF;CAC7F,UAAU,qFAAqF;CAC/F,UAAU,sFAAsF;CAChG,UAAU,oFAAoF;CAC9F,UAAU,oFAAoF;CAC9F,UAAU,sFAAsF;CAChG,UAAU,sEAAsE;CAChF,MAAM,IAAI;CACV,QAAQ,mFAAmF;CAC3F,UAAU,mCAAmC;CAC7C,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,IAAI,CAAC,oBAAoB;CAC/B,MAAM,IAAI,CAAC,OAAO;CAClB,QAAQ,GAAG;CACX,QAAQ,GAAG;CACX,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE;CACxB,OAAO;CACP,MAAM,IAAI,CAAC,aAAa;CACxB,MAAM,IAAI,CAAC,kBAAkB;CAC7B,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,+BAA+B;CAC9C,OAAO;CACP,MAAM,IAAI,CAAC,iBAAiB;CAC5B,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,IAAI;CACnB,QAAQ,GAAG,EAAE,WAAW;CACxB,QAAQ,OAAO,EAAE,cAAc;CAC/B,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,mBAAmB;CAClC,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,GAAG;CAClB,QAAQ,GAAG,EAAE,GAAG;CAChB,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,OAAO;CAC1B,QAAQ,KAAK,EAAE,SAAS;CACxB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,SAAc,GAAG,MAAM"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500670,
      "end": 1699633500670,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500670,
      "end": 1699633500671,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500671,
      "end": 1699633500671,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500671,
      "end": 1699633500671,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500671,
      "end": 1699633500671,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500671,
      "end": 1699633500671,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500671,
      "end": 1699633500671,
      "order": "normal"
    }
  ]
}
