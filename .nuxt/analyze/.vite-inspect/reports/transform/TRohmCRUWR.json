{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/swiper/modules/thumbs/thumbs.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}",
      "start": 1699961617335,
      "end": 1699961617523,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1699961617523,
      "end": 1699961617523,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1699961617523,
      "end": 1699961617523,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699961617523,
      "end": 1699961617523,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699961617523,
      "end": 1699961617523,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699961617523,
      "end": 1699961617523,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:default",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699961617524,
      "end": 1699961617524,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699961617525,
      "end": 1699961617525,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699961617526,
      "end": 1699961617526,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699961617526,
      "end": 1699961617526,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699961617526,
      "end": 1699961617526,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699961617526,
      "end": 1699961617526,
      "order": "normal"
    }
  ]
}
