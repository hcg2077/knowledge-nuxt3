{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/pf.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Packet Filter config\nDescription: pf.conf — packet filter configuration file (OpenBSD)\nAuthor: Peter Piwowarski <oldlaptop654@aol.com>\nWebsite: http://man.openbsd.org/pf.conf\nCategory: config\n*/\n\nfunction pf(hljs) {\n  const MACRO = {\n    className: 'variable',\n    begin: /\\$[\\w\\d#@][\\w\\d_]*/,\n    relevance: 0\n  };\n  const TABLE = {\n    className: 'variable',\n    begin: /<(?!\\/)/,\n    end: />/\n  };\n\n  return {\n    name: 'Packet Filter config',\n    aliases: [ 'pf.conf' ],\n    keywords: {\n      $pattern: /[a-z0-9_<>-]+/,\n      built_in: /* block match pass are \"actions\" in pf.conf(5), the rest are\n                 * lexically similar top-level commands.\n                 */\n        'block match pass load anchor|5 antispoof|10 set table',\n      keyword:\n        'in out log quick on rdomain inet inet6 proto from port os to route '\n        + 'allow-opts divert-packet divert-reply divert-to flags group icmp-type '\n        + 'icmp6-type label once probability recieved-on rtable prio queue '\n        + 'tos tag tagged user keep fragment for os drop '\n        + 'af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin '\n        + 'source-hash static-port '\n        + 'dup-to reply-to route-to '\n        + 'parent bandwidth default min max qlimit '\n        + 'block-policy debug fingerprints hostid limit loginterface optimization '\n        + 'reassemble ruleset-optimization basic none profile skip state-defaults '\n        + 'state-policy timeout '\n        + 'const counters persist '\n        + 'no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy '\n        + 'source-track global rule max-src-nodes max-src-states max-src-conn '\n        + 'max-src-conn-rate overload flush '\n        + 'scrub|5 max-mss min-ttl no-df|10 random-id',\n      literal:\n        'all any no-route self urpf-failed egress|5 unknown'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      MACRO,\n      TABLE\n    ]\n  };\n}\n\nmodule.exports = pf;\n",
      "start": 1699633501199,
      "end": 1699633501285,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501285,
      "end": 1699633501285,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501285,
      "end": 1699633501285,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501285,
      "end": 1699633501285,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501285,
      "end": 1699633501285,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501286,
      "end": 1699633501286,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501286,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Packet Filter config\nDescription: pf.conf — packet filter configuration file (OpenBSD)\nAuthor: Peter Piwowarski <oldlaptop654@aol.com>\nWebsite: http://man.openbsd.org/pf.conf\nCategory: config\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar pf_1;\nvar hasRequiredPf;\n\nfunction requirePf () {\n\tif (hasRequiredPf) return pf_1;\n\thasRequiredPf = 1;\n\tfunction pf(hljs) {\n\t  const MACRO = {\n\t    className: 'variable',\n\t    begin: /\\$[\\w\\d#@][\\w\\d_]*/,\n\t    relevance: 0\n\t  };\n\t  const TABLE = {\n\t    className: 'variable',\n\t    begin: /<(?!\\/)/,\n\t    end: />/\n\t  };\n\n\t  return {\n\t    name: 'Packet Filter config',\n\t    aliases: [ 'pf.conf' ],\n\t    keywords: {\n\t      $pattern: /[a-z0-9_<>-]+/,\n\t      built_in: /* block match pass are \"actions\" in pf.conf(5), the rest are\n\t                 * lexically similar top-level commands.\n\t                 */\n\t        'block match pass load anchor|5 antispoof|10 set table',\n\t      keyword:\n\t        'in out log quick on rdomain inet inet6 proto from port os to route '\n\t        + 'allow-opts divert-packet divert-reply divert-to flags group icmp-type '\n\t        + 'icmp6-type label once probability recieved-on rtable prio queue '\n\t        + 'tos tag tagged user keep fragment for os drop '\n\t        + 'af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin '\n\t        + 'source-hash static-port '\n\t        + 'dup-to reply-to route-to '\n\t        + 'parent bandwidth default min max qlimit '\n\t        + 'block-policy debug fingerprints hostid limit loginterface optimization '\n\t        + 'reassemble ruleset-optimization basic none profile skip state-defaults '\n\t        + 'state-policy timeout '\n\t        + 'const counters persist '\n\t        + 'no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy '\n\t        + 'source-track global rule max-src-nodes max-src-states max-src-conn '\n\t        + 'max-src-conn-rate overload flush '\n\t        + 'scrub|5 max-mss min-ttl no-df|10 random-id',\n\t      literal:\n\t        'all any no-route self urpf-failed egress|5 unknown'\n\t    },\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.NUMBER_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      MACRO,\n\t      TABLE\n\t    ]\n\t  };\n\t}\n\n\tpf_1 = pf;\n\treturn pf_1;\n}\n\nexport { requirePf as __require };",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;CAQA,SAAS,EAAE,CAAC,IAAI,EAAE;CAClB,EAAE,MAAM,KAAK,GAAG;CAChB,IAAI,SAAS,EAAE,UAAU;CACzB,IAAI,KAAK,EAAE,oBAAoB;CAC/B,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;CACJ,EAAE,MAAM,KAAK,GAAG;CAChB,IAAI,SAAS,EAAE,UAAU;CACzB,IAAI,KAAK,EAAE,SAAS;CACpB,IAAI,GAAG,EAAE,GAAG;CACZ,GAAG,CAAC;AACJ;CACA,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,sBAAsB;CAChC,IAAI,OAAO,EAAE,EAAE,SAAS,EAAE;CAC1B,IAAI,QAAQ,EAAE;CACd,MAAM,QAAQ,EAAE,eAAe;CAC/B,MAAM,QAAQ;CACd;CACA;CACA,QAAQ,uDAAuD;CAC/D,MAAM,OAAO;CACb,QAAQ,qEAAqE;CAC7E,UAAU,wEAAwE;CAClF,UAAU,kEAAkE;CAC5E,UAAU,gDAAgD;CAC1D,UAAU,kFAAkF;CAC5F,UAAU,0BAA0B;CACpC,UAAU,2BAA2B;CACrC,UAAU,0CAA0C;CACpD,UAAU,yEAAyE;CACnF,UAAU,yEAAyE;CACnF,UAAU,uBAAuB;CACjC,UAAU,yBAAyB;CACnC,UAAU,yEAAyE;CACnF,UAAU,qEAAqE;CAC/E,UAAU,mCAAmC;CAC7C,UAAU,4CAA4C;CACtD,MAAM,OAAO;CACb,QAAQ,oDAAoD;CAC5D,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,IAAI,CAAC,iBAAiB;CAC5B,MAAM,IAAI,CAAC,WAAW;CACtB,MAAM,IAAI,CAAC,iBAAiB;CAC5B,MAAM,KAAK;CACX,MAAM,KAAK;CACX,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,KAAc,GAAG,EAAE"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501287,
      "end": 1699633501287,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501287,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501288,
      "end": 1699633501288,
      "order": "normal"
    }
  ]
}
