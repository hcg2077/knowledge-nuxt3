{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_inline/balance_pairs.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n",
      "start": 1699633501835,
      "end": 1699633501928,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501928,
      "end": 1699633501928,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501928,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\n// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nvar balance_pairs = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(balance_pairs);\nexport { balance_pairs as __moduleExports };",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501929,
      "end": 1699633501929,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501930,
      "end": 1699633501930,
      "order": "normal"
    }
  ]
}
