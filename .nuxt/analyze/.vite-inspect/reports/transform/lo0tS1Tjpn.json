{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/apache.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Apache config\nAuthor: Ruslan Keba <rukeba@gmail.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://httpd.apache.org\nDescription: language definition for Apache configuration files (httpd.conf & .htaccess)\nCategory: config, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction apache(hljs) {\n  const NUMBER_REF = {\n    className: 'number',\n    begin: /[$%]\\d+/\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: /\\b\\d+/\n  };\n  const IP_ADDRESS = {\n    className: \"number\",\n    begin: /\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?/\n  };\n  const PORT_NUMBER = {\n    className: \"number\",\n    begin: /:\\d{1,5}/\n  };\n  return {\n    name: 'Apache config',\n    aliases: [ 'apacheconf' ],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'section',\n        begin: /<\\/?/,\n        end: />/,\n        contains: [\n          IP_ADDRESS,\n          PORT_NUMBER,\n          // low relevance prevents us from claming XML/HTML where this rule would\n          // match strings inside of XML tags\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 })\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords aren’t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: { _: [\n          \"order\",\n          \"deny\",\n          \"allow\",\n          \"setenv\",\n          \"rewriterule\",\n          \"rewriteengine\",\n          \"rewritecond\",\n          \"documentroot\",\n          \"sethandler\",\n          \"errordocument\",\n          \"loadmodule\",\n          \"options\",\n          \"header\",\n          \"listen\",\n          \"serverroot\",\n          \"servername\"\n        ] },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: { literal: 'on off all deny allow' },\n          contains: [\n            {\n              className: 'meta',\n              begin: /\\s\\[/,\n              end: /\\]$/\n            },\n            {\n              className: 'variable',\n              begin: /[\\$%]\\{/,\n              end: /\\}/,\n              contains: [\n                'self',\n                NUMBER_REF\n              ]\n            },\n            IP_ADDRESS,\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n}\n\nmodule.exports = apache;\n",
      "start": 1699633500535,
      "end": 1699633500623,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500623,
      "end": 1699633500623,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500623,
      "end": 1699633500623,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500623,
      "end": 1699633500623,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500623,
      "end": 1699633500623,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500623,
      "end": 1699633500623,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500623,
      "end": 1699633500623,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500624,
      "end": 1699633500624,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500624,
      "end": 1699633500624,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500624,
      "end": 1699633500624,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500624,
      "end": 1699633500624,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500624,
      "end": 1699633500624,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500624,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633500625,
      "end": 1699633500625,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Apache config\nAuthor: Ruslan Keba <rukeba@gmail.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://httpd.apache.org\nDescription: language definition for Apache configuration files (httpd.conf & .htaccess)\nCategory: config, web\nAudit: 2020\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar apache_1;\nvar hasRequiredApache;\n\nfunction requireApache () {\n\tif (hasRequiredApache) return apache_1;\n\thasRequiredApache = 1;\n\t/** @type LanguageFn */\n\tfunction apache(hljs) {\n\t  const NUMBER_REF = {\n\t    className: 'number',\n\t    begin: /[$%]\\d+/\n\t  };\n\t  const NUMBER = {\n\t    className: 'number',\n\t    begin: /\\b\\d+/\n\t  };\n\t  const IP_ADDRESS = {\n\t    className: \"number\",\n\t    begin: /\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?/\n\t  };\n\t  const PORT_NUMBER = {\n\t    className: \"number\",\n\t    begin: /:\\d{1,5}/\n\t  };\n\t  return {\n\t    name: 'Apache config',\n\t    aliases: [ 'apacheconf' ],\n\t    case_insensitive: true,\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        className: 'section',\n\t        begin: /<\\/?/,\n\t        end: />/,\n\t        contains: [\n\t          IP_ADDRESS,\n\t          PORT_NUMBER,\n\t          // low relevance prevents us from claming XML/HTML where this rule would\n\t          // match strings inside of XML tags\n\t          hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 })\n\t        ]\n\t      },\n\t      {\n\t        className: 'attribute',\n\t        begin: /\\w+/,\n\t        relevance: 0,\n\t        // keywords aren’t needed for highlighting per se, they only boost relevance\n\t        // for a very generally defined mode (starts with a word, ends with line-end\n\t        keywords: { _: [\n\t          \"order\",\n\t          \"deny\",\n\t          \"allow\",\n\t          \"setenv\",\n\t          \"rewriterule\",\n\t          \"rewriteengine\",\n\t          \"rewritecond\",\n\t          \"documentroot\",\n\t          \"sethandler\",\n\t          \"errordocument\",\n\t          \"loadmodule\",\n\t          \"options\",\n\t          \"header\",\n\t          \"listen\",\n\t          \"serverroot\",\n\t          \"servername\"\n\t        ] },\n\t        starts: {\n\t          end: /$/,\n\t          relevance: 0,\n\t          keywords: { literal: 'on off all deny allow' },\n\t          contains: [\n\t            {\n\t              className: 'meta',\n\t              begin: /\\s\\[/,\n\t              end: /\\]$/\n\t            },\n\t            {\n\t              className: 'variable',\n\t              begin: /[\\$%]\\{/,\n\t              end: /\\}/,\n\t              contains: [\n\t                'self',\n\t                NUMBER_REF\n\t              ]\n\t            },\n\t            IP_ADDRESS,\n\t            NUMBER,\n\t            hljs.QUOTE_STRING_MODE\n\t          ]\n\t        }\n\t      }\n\t    ],\n\t    illegal: /\\S/\n\t  };\n\t}\n\n\tapache_1 = apache;\n\treturn apache_1;\n}\n\nexport { requireApache as __require };",
      "start": 1699633500625,
      "end": 1699633500626,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;;;CAUA;CACA,SAAS,MAAM,CAAC,IAAI,EAAE;CACtB,EAAE,MAAM,UAAU,GAAG;CACrB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,SAAS;CACpB,GAAG,CAAC;CACJ,EAAE,MAAM,MAAM,GAAG;CACjB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,OAAO;CAClB,GAAG,CAAC;CACJ,EAAE,MAAM,UAAU,GAAG;CACrB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,+CAA+C;CAC1D,GAAG,CAAC;CACJ,EAAE,MAAM,WAAW,GAAG;CACtB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,UAAU;CACrB,GAAG,CAAC;CACJ,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,eAAe;CACzB,IAAI,OAAO,EAAE,EAAE,YAAY,EAAE;CAC7B,IAAI,gBAAgB,EAAE,IAAI;CAC1B,IAAI,QAAQ,EAAE;CACd,MAAM,IAAI,CAAC,iBAAiB;CAC5B,MAAM;CACN,QAAQ,SAAS,EAAE,SAAS;CAC5B,QAAQ,KAAK,EAAE,MAAM;CACrB,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,QAAQ,EAAE;CAClB,UAAU,UAAU;CACpB,UAAU,WAAW;CACrB;CACA;CACA,UAAU,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC;CAChE,SAAS;CACT,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,WAAW;CAC9B,QAAQ,KAAK,EAAE,KAAK;CACpB,QAAQ,SAAS,EAAE,CAAC;CACpB;CACA;CACA,QAAQ,QAAQ,EAAE,EAAE,CAAC,EAAE;CACvB,UAAU,OAAO;CACjB,UAAU,MAAM;CAChB,UAAU,OAAO;CACjB,UAAU,QAAQ;CAClB,UAAU,aAAa;CACvB,UAAU,eAAe;CACzB,UAAU,aAAa;CACvB,UAAU,cAAc;CACxB,UAAU,YAAY;CACtB,UAAU,eAAe;CACzB,UAAU,YAAY;CACtB,UAAU,SAAS;CACnB,UAAU,QAAQ;CAClB,UAAU,QAAQ;CAClB,UAAU,YAAY;CACtB,UAAU,YAAY;CACtB,SAAS,EAAE;CACX,QAAQ,MAAM,EAAE;CAChB,UAAU,GAAG,EAAE,GAAG;CAClB,UAAU,SAAS,EAAE,CAAC;CACtB,UAAU,QAAQ,EAAE,EAAE,OAAO,EAAE,uBAAuB,EAAE;CACxD,UAAU,QAAQ,EAAE;CACpB,YAAY;CACZ,cAAc,SAAS,EAAE,MAAM;CAC/B,cAAc,KAAK,EAAE,MAAM;CAC3B,cAAc,GAAG,EAAE,KAAK;CACxB,aAAa;CACb,YAAY;CACZ,cAAc,SAAS,EAAE,UAAU;CACnC,cAAc,KAAK,EAAE,SAAS;CAC9B,cAAc,GAAG,EAAE,IAAI;CACvB,cAAc,QAAQ,EAAE;CACxB,gBAAgB,MAAM;CACtB,gBAAgB,UAAU;CAC1B,eAAe;CACf,aAAa;CACb,YAAY,UAAU;CACtB,YAAY,MAAM;CAClB,YAAY,IAAI,CAAC,iBAAiB;CAClC,WAAW;CACX,SAAS;CACT,OAAO;CACP,KAAK;CACL,IAAI,OAAO,EAAE,IAAI;CACjB,GAAG,CAAC;CACJ,CAAC;AACD;AACA,SAAc,GAAG,MAAM"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500626,
      "end": 1699633500626,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500627,
      "end": 1699633500627,
      "order": "normal"
    }
  ]
}
