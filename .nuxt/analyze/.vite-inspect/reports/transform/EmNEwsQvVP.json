{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_block/fence.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n",
      "start": 1699633501682,
      "end": 1699633501796,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501796,
      "end": 1699633501796,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501796,
      "end": 1699633501796,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501797,
      "end": 1699633501797,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501797,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501798,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501798,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501798,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501798,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501798,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501798,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501798,
      "end": 1699633501798,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\n// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nvar fence = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(fence);\nexport { fence as __moduleExports };",
      "start": 1699633501798,
      "end": 1699633501799,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;AAAA;AACA;AACA,YAAY,CAAC;AACb;AACA;IACA,KAAc,GAAG,SAAS,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE;AACnE,EAAE,IAAI,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM;AACvD,MAAM,aAAa,GAAG,KAAK;AAC3B,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;AAC7D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACpC;AACA;AACA,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,SAAS,IAAI,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AACvE;AACA,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AACtC;AACA,EAAE,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACrC;AACA,EAAE,IAAI,MAAM,KAAK,IAAI,WAAW,MAAM,KAAK,IAAI,UAAU;AACzD,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA;AACA,EAAE,GAAG,GAAG,GAAG,CAAC;AACZ,EAAE,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACrC;AACA,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAClB;AACA,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AAChC;AACA,EAAE,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACrC,EAAE,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACrC;AACA,EAAE,IAAI,MAAM,KAAK,IAAI,UAAU;AAC/B,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE;AAC1D,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;AAC9B;AACA;AACA,EAAE,QAAQ,GAAG,SAAS,CAAC;AACvB;AACA,EAAE,SAAS;AACX,IAAI,QAAQ,EAAE,CAAC;AACf,IAAI,IAAI,QAAQ,IAAI,OAAO,EAAE;AAC7B;AACA;AACA,MAAM,MAAM;AACZ,KAAK;AACL;AACA,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChE,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjC;AACA,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE;AAC/D;AACA;AACA;AACA,MAAM,MAAM;AACZ,KAAK;AACL;AACA,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,MAAM,EAAE,EAAE,SAAS,EAAE;AAC3D;AACA,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,SAAS,IAAI,CAAC,EAAE;AACvD;AACA,MAAM,SAAS;AACf,KAAK;AACL;AACA,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACvC;AACA;AACA,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,SAAS,EAAE;AACtC;AACA;AACA,IAAI,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAChC;AACA,IAAI,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,SAAS,EAAE;AAChC;AACA,IAAI,aAAa,GAAG,IAAI,CAAC;AACzB;AACA,IAAI,MAAM;AACV,GAAG;AACH;AACA;AACA,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAChC;AACA,EAAE,KAAK,CAAC,IAAI,GAAG,QAAQ,IAAI,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAClD;AACA,EAAE,KAAK,WAAW,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACjD,EAAE,KAAK,CAAC,IAAI,MAAM,MAAM,CAAC;AACzB,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACrE,EAAE,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC;AACzB,EAAE,KAAK,CAAC,GAAG,OAAO,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;AAC5C;AACA,EAAE,OAAO,IAAI,CAAC;AACd,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501799,
      "end": 1699633501799,
      "order": "normal"
    }
  ]
}
