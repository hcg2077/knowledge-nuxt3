{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_block/lheading.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n",
      "start": 1699633501728,
      "end": 1699633501825,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501826,
      "end": 1699633501826,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501826,
      "end": 1699633501826,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501826,
      "end": 1699633501826,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501826,
      "end": 1699633501826,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501826,
      "end": 1699633501826,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501826,
      "end": 1699633501826,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501826,
      "end": 1699633501826,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501827,
      "end": 1699633501827,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\n// lheading (---, ===)\n\n'use strict';\n\n\nvar lheading = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(lheading);\nexport { lheading as __moduleExports };",
      "start": 1699633501827,
      "end": 1699633501828,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501828,
      "end": 1699633501828,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501828,
      "end": 1699633501828,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501828,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501830,
      "end": 1699633501830,
      "order": "normal"
    }
  ]
}
