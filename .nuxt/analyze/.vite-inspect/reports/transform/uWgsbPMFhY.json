{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/bash.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const regex = hljs.regex;\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR, {\n    className: 'variable',\n    variants: [\n      { begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/,\n    end: /\\)/,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: { contains: [\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        className: 'string'\n      })\n    ] }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    match: /\\\\\"/\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/\n  };\n  const ESCAPED_APOS = {\n    match: /\\\\'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$?\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      {\n        begin: /\\d+#[0-9a-f]+/,\n        className: \"number\"\n      },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [ hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ }) ],\n    relevance: 0\n  };\n\n  const KEYWORDS = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"elif\",\n    \"fi\",\n    \"for\",\n    \"while\",\n    \"until\",\n    \"in\",\n    \"do\",\n    \"done\",\n    \"case\",\n    \"esac\",\n    \"function\",\n    \"select\"\n  ];\n\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n\n  // to consume paths to prevent keyword matches inside them\n  const PATH_MODE = { match: /(\\/[a-z._-]+)+/ };\n\n  // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n  const SHELL_BUILT_INS = [\n    \"break\",\n    \"cd\",\n    \"continue\",\n    \"eval\",\n    \"exec\",\n    \"exit\",\n    \"export\",\n    \"getopts\",\n    \"hash\",\n    \"pwd\",\n    \"readonly\",\n    \"return\",\n    \"shift\",\n    \"test\",\n    \"times\",\n    \"trap\",\n    \"umask\",\n    \"unset\"\n  ];\n\n  const BASH_BUILT_INS = [\n    \"alias\",\n    \"bind\",\n    \"builtin\",\n    \"caller\",\n    \"command\",\n    \"declare\",\n    \"echo\",\n    \"enable\",\n    \"help\",\n    \"let\",\n    \"local\",\n    \"logout\",\n    \"mapfile\",\n    \"printf\",\n    \"read\",\n    \"readarray\",\n    \"source\",\n    \"type\",\n    \"typeset\",\n    \"ulimit\",\n    \"unalias\"\n  ];\n\n  const ZSH_BUILT_INS = [\n    \"autoload\",\n    \"bg\",\n    \"bindkey\",\n    \"bye\",\n    \"cap\",\n    \"chdir\",\n    \"clone\",\n    \"comparguments\",\n    \"compcall\",\n    \"compctl\",\n    \"compdescribe\",\n    \"compfiles\",\n    \"compgroups\",\n    \"compquote\",\n    \"comptags\",\n    \"comptry\",\n    \"compvalues\",\n    \"dirs\",\n    \"disable\",\n    \"disown\",\n    \"echotc\",\n    \"echoti\",\n    \"emulate\",\n    \"fc\",\n    \"fg\",\n    \"float\",\n    \"functions\",\n    \"getcap\",\n    \"getln\",\n    \"history\",\n    \"integer\",\n    \"jobs\",\n    \"kill\",\n    \"limit\",\n    \"log\",\n    \"noglob\",\n    \"popd\",\n    \"print\",\n    \"pushd\",\n    \"pushln\",\n    \"rehash\",\n    \"sched\",\n    \"setcap\",\n    \"setopt\",\n    \"stat\",\n    \"suspend\",\n    \"ttyctl\",\n    \"unfunction\",\n    \"unhash\",\n    \"unlimit\",\n    \"unsetopt\",\n    \"vared\",\n    \"wait\",\n    \"whence\",\n    \"where\",\n    \"which\",\n    \"zcompile\",\n    \"zformat\",\n    \"zftp\",\n    \"zle\",\n    \"zmodload\",\n    \"zparseopts\",\n    \"zprof\",\n    \"zpty\",\n    \"zregexparse\",\n    \"zsocket\",\n    \"zstyle\",\n    \"ztcp\"\n  ];\n\n  const GNU_CORE_UTILS = [\n    \"chcon\",\n    \"chgrp\",\n    \"chown\",\n    \"chmod\",\n    \"cp\",\n    \"dd\",\n    \"df\",\n    \"dir\",\n    \"dircolors\",\n    \"ln\",\n    \"ls\",\n    \"mkdir\",\n    \"mkfifo\",\n    \"mknod\",\n    \"mktemp\",\n    \"mv\",\n    \"realpath\",\n    \"rm\",\n    \"rmdir\",\n    \"shred\",\n    \"sync\",\n    \"touch\",\n    \"truncate\",\n    \"vdir\",\n    \"b2sum\",\n    \"base32\",\n    \"base64\",\n    \"cat\",\n    \"cksum\",\n    \"comm\",\n    \"csplit\",\n    \"cut\",\n    \"expand\",\n    \"fmt\",\n    \"fold\",\n    \"head\",\n    \"join\",\n    \"md5sum\",\n    \"nl\",\n    \"numfmt\",\n    \"od\",\n    \"paste\",\n    \"ptx\",\n    \"pr\",\n    \"sha1sum\",\n    \"sha224sum\",\n    \"sha256sum\",\n    \"sha384sum\",\n    \"sha512sum\",\n    \"shuf\",\n    \"sort\",\n    \"split\",\n    \"sum\",\n    \"tac\",\n    \"tail\",\n    \"tr\",\n    \"tsort\",\n    \"unexpand\",\n    \"uniq\",\n    \"wc\",\n    \"arch\",\n    \"basename\",\n    \"chroot\",\n    \"date\",\n    \"dirname\",\n    \"du\",\n    \"echo\",\n    \"env\",\n    \"expr\",\n    \"factor\",\n    // \"false\", // keyword literal already\n    \"groups\",\n    \"hostid\",\n    \"id\",\n    \"link\",\n    \"logname\",\n    \"nice\",\n    \"nohup\",\n    \"nproc\",\n    \"pathchk\",\n    \"pinky\",\n    \"printenv\",\n    \"printf\",\n    \"pwd\",\n    \"readlink\",\n    \"runcon\",\n    \"seq\",\n    \"sleep\",\n    \"stat\",\n    \"stdbuf\",\n    \"stty\",\n    \"tee\",\n    \"test\",\n    \"timeout\",\n    // \"true\", // keyword literal already\n    \"tty\",\n    \"uname\",\n    \"unlink\",\n    \"uptime\",\n    \"users\",\n    \"who\",\n    \"whoami\",\n    \"yes\"\n  ];\n\n  return {\n    name: 'Bash',\n    aliases: [ 'sh' ],\n    keywords: {\n      $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: [\n        ...SHELL_BUILT_INS,\n        ...BASH_BUILT_INS,\n        // Shell modifiers\n        \"set\",\n        \"shopt\",\n        ...ZSH_BUILT_INS,\n        ...GNU_CORE_UTILS\n      ]\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      PATH_MODE,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      ESCAPED_APOS,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n",
      "start": 1699633500563,
      "end": 1699633500710,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500711,
      "end": 1699633500711,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633500712,
      "end": 1699633500712,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar bash_1;\nvar hasRequiredBash;\n\nfunction requireBash () {\n\tif (hasRequiredBash) return bash_1;\n\thasRequiredBash = 1;\n\t/** @type LanguageFn */\n\tfunction bash(hljs) {\n\t  const regex = hljs.regex;\n\t  const VAR = {};\n\t  const BRACED_VAR = {\n\t    begin: /\\$\\{/,\n\t    end: /\\}/,\n\t    contains: [\n\t      \"self\",\n\t      {\n\t        begin: /:-/,\n\t        contains: [ VAR ]\n\t      } // default values\n\t    ]\n\t  };\n\t  Object.assign(VAR, {\n\t    className: 'variable',\n\t    variants: [\n\t      { begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n\t        // negative look-ahead tries to avoid matching patterns that are not\n\t        // Perl at all like $ident$, @ident@, etc.\n\t        `(?![\\\\w\\\\d])(?![$])`) },\n\t      BRACED_VAR\n\t    ]\n\t  });\n\n\t  const SUBST = {\n\t    className: 'subst',\n\t    begin: /\\$\\(/,\n\t    end: /\\)/,\n\t    contains: [ hljs.BACKSLASH_ESCAPE ]\n\t  };\n\t  const HERE_DOC = {\n\t    begin: /<<-?\\s*(?=\\w+)/,\n\t    starts: { contains: [\n\t      hljs.END_SAME_AS_BEGIN({\n\t        begin: /(\\w+)/,\n\t        end: /(\\w+)/,\n\t        className: 'string'\n\t      })\n\t    ] }\n\t  };\n\t  const QUOTE_STRING = {\n\t    className: 'string',\n\t    begin: /\"/,\n\t    end: /\"/,\n\t    contains: [\n\t      hljs.BACKSLASH_ESCAPE,\n\t      VAR,\n\t      SUBST\n\t    ]\n\t  };\n\t  SUBST.contains.push(QUOTE_STRING);\n\t  const ESCAPED_QUOTE = {\n\t    match: /\\\\\"/\n\t  };\n\t  const APOS_STRING = {\n\t    className: 'string',\n\t    begin: /'/,\n\t    end: /'/\n\t  };\n\t  const ESCAPED_APOS = {\n\t    match: /\\\\'/\n\t  };\n\t  const ARITHMETIC = {\n\t    begin: /\\$?\\(\\(/,\n\t    end: /\\)\\)/,\n\t    contains: [\n\t      {\n\t        begin: /\\d+#[0-9a-f]+/,\n\t        className: \"number\"\n\t      },\n\t      hljs.NUMBER_MODE,\n\t      VAR\n\t    ]\n\t  };\n\t  const SH_LIKE_SHELLS = [\n\t    \"fish\",\n\t    \"bash\",\n\t    \"zsh\",\n\t    \"sh\",\n\t    \"csh\",\n\t    \"ksh\",\n\t    \"tcsh\",\n\t    \"dash\",\n\t    \"scsh\",\n\t  ];\n\t  const KNOWN_SHEBANG = hljs.SHEBANG({\n\t    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n\t    relevance: 10\n\t  });\n\t  const FUNCTION = {\n\t    className: 'function',\n\t    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n\t    returnBegin: true,\n\t    contains: [ hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ }) ],\n\t    relevance: 0\n\t  };\n\n\t  const KEYWORDS = [\n\t    \"if\",\n\t    \"then\",\n\t    \"else\",\n\t    \"elif\",\n\t    \"fi\",\n\t    \"for\",\n\t    \"while\",\n\t    \"until\",\n\t    \"in\",\n\t    \"do\",\n\t    \"done\",\n\t    \"case\",\n\t    \"esac\",\n\t    \"function\",\n\t    \"select\"\n\t  ];\n\n\t  const LITERALS = [\n\t    \"true\",\n\t    \"false\"\n\t  ];\n\n\t  // to consume paths to prevent keyword matches inside them\n\t  const PATH_MODE = { match: /(\\/[a-z._-]+)+/ };\n\n\t  // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t  const SHELL_BUILT_INS = [\n\t    \"break\",\n\t    \"cd\",\n\t    \"continue\",\n\t    \"eval\",\n\t    \"exec\",\n\t    \"exit\",\n\t    \"export\",\n\t    \"getopts\",\n\t    \"hash\",\n\t    \"pwd\",\n\t    \"readonly\",\n\t    \"return\",\n\t    \"shift\",\n\t    \"test\",\n\t    \"times\",\n\t    \"trap\",\n\t    \"umask\",\n\t    \"unset\"\n\t  ];\n\n\t  const BASH_BUILT_INS = [\n\t    \"alias\",\n\t    \"bind\",\n\t    \"builtin\",\n\t    \"caller\",\n\t    \"command\",\n\t    \"declare\",\n\t    \"echo\",\n\t    \"enable\",\n\t    \"help\",\n\t    \"let\",\n\t    \"local\",\n\t    \"logout\",\n\t    \"mapfile\",\n\t    \"printf\",\n\t    \"read\",\n\t    \"readarray\",\n\t    \"source\",\n\t    \"type\",\n\t    \"typeset\",\n\t    \"ulimit\",\n\t    \"unalias\"\n\t  ];\n\n\t  const ZSH_BUILT_INS = [\n\t    \"autoload\",\n\t    \"bg\",\n\t    \"bindkey\",\n\t    \"bye\",\n\t    \"cap\",\n\t    \"chdir\",\n\t    \"clone\",\n\t    \"comparguments\",\n\t    \"compcall\",\n\t    \"compctl\",\n\t    \"compdescribe\",\n\t    \"compfiles\",\n\t    \"compgroups\",\n\t    \"compquote\",\n\t    \"comptags\",\n\t    \"comptry\",\n\t    \"compvalues\",\n\t    \"dirs\",\n\t    \"disable\",\n\t    \"disown\",\n\t    \"echotc\",\n\t    \"echoti\",\n\t    \"emulate\",\n\t    \"fc\",\n\t    \"fg\",\n\t    \"float\",\n\t    \"functions\",\n\t    \"getcap\",\n\t    \"getln\",\n\t    \"history\",\n\t    \"integer\",\n\t    \"jobs\",\n\t    \"kill\",\n\t    \"limit\",\n\t    \"log\",\n\t    \"noglob\",\n\t    \"popd\",\n\t    \"print\",\n\t    \"pushd\",\n\t    \"pushln\",\n\t    \"rehash\",\n\t    \"sched\",\n\t    \"setcap\",\n\t    \"setopt\",\n\t    \"stat\",\n\t    \"suspend\",\n\t    \"ttyctl\",\n\t    \"unfunction\",\n\t    \"unhash\",\n\t    \"unlimit\",\n\t    \"unsetopt\",\n\t    \"vared\",\n\t    \"wait\",\n\t    \"whence\",\n\t    \"where\",\n\t    \"which\",\n\t    \"zcompile\",\n\t    \"zformat\",\n\t    \"zftp\",\n\t    \"zle\",\n\t    \"zmodload\",\n\t    \"zparseopts\",\n\t    \"zprof\",\n\t    \"zpty\",\n\t    \"zregexparse\",\n\t    \"zsocket\",\n\t    \"zstyle\",\n\t    \"ztcp\"\n\t  ];\n\n\t  const GNU_CORE_UTILS = [\n\t    \"chcon\",\n\t    \"chgrp\",\n\t    \"chown\",\n\t    \"chmod\",\n\t    \"cp\",\n\t    \"dd\",\n\t    \"df\",\n\t    \"dir\",\n\t    \"dircolors\",\n\t    \"ln\",\n\t    \"ls\",\n\t    \"mkdir\",\n\t    \"mkfifo\",\n\t    \"mknod\",\n\t    \"mktemp\",\n\t    \"mv\",\n\t    \"realpath\",\n\t    \"rm\",\n\t    \"rmdir\",\n\t    \"shred\",\n\t    \"sync\",\n\t    \"touch\",\n\t    \"truncate\",\n\t    \"vdir\",\n\t    \"b2sum\",\n\t    \"base32\",\n\t    \"base64\",\n\t    \"cat\",\n\t    \"cksum\",\n\t    \"comm\",\n\t    \"csplit\",\n\t    \"cut\",\n\t    \"expand\",\n\t    \"fmt\",\n\t    \"fold\",\n\t    \"head\",\n\t    \"join\",\n\t    \"md5sum\",\n\t    \"nl\",\n\t    \"numfmt\",\n\t    \"od\",\n\t    \"paste\",\n\t    \"ptx\",\n\t    \"pr\",\n\t    \"sha1sum\",\n\t    \"sha224sum\",\n\t    \"sha256sum\",\n\t    \"sha384sum\",\n\t    \"sha512sum\",\n\t    \"shuf\",\n\t    \"sort\",\n\t    \"split\",\n\t    \"sum\",\n\t    \"tac\",\n\t    \"tail\",\n\t    \"tr\",\n\t    \"tsort\",\n\t    \"unexpand\",\n\t    \"uniq\",\n\t    \"wc\",\n\t    \"arch\",\n\t    \"basename\",\n\t    \"chroot\",\n\t    \"date\",\n\t    \"dirname\",\n\t    \"du\",\n\t    \"echo\",\n\t    \"env\",\n\t    \"expr\",\n\t    \"factor\",\n\t    // \"false\", // keyword literal already\n\t    \"groups\",\n\t    \"hostid\",\n\t    \"id\",\n\t    \"link\",\n\t    \"logname\",\n\t    \"nice\",\n\t    \"nohup\",\n\t    \"nproc\",\n\t    \"pathchk\",\n\t    \"pinky\",\n\t    \"printenv\",\n\t    \"printf\",\n\t    \"pwd\",\n\t    \"readlink\",\n\t    \"runcon\",\n\t    \"seq\",\n\t    \"sleep\",\n\t    \"stat\",\n\t    \"stdbuf\",\n\t    \"stty\",\n\t    \"tee\",\n\t    \"test\",\n\t    \"timeout\",\n\t    // \"true\", // keyword literal already\n\t    \"tty\",\n\t    \"uname\",\n\t    \"unlink\",\n\t    \"uptime\",\n\t    \"users\",\n\t    \"who\",\n\t    \"whoami\",\n\t    \"yes\"\n\t  ];\n\n\t  return {\n\t    name: 'Bash',\n\t    aliases: [ 'sh' ],\n\t    keywords: {\n\t      $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n\t      keyword: KEYWORDS,\n\t      literal: LITERALS,\n\t      built_in: [\n\t        ...SHELL_BUILT_INS,\n\t        ...BASH_BUILT_INS,\n\t        // Shell modifiers\n\t        \"set\",\n\t        \"shopt\",\n\t        ...ZSH_BUILT_INS,\n\t        ...GNU_CORE_UTILS\n\t      ]\n\t    },\n\t    contains: [\n\t      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n\t      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n\t      FUNCTION,\n\t      ARITHMETIC,\n\t      hljs.HASH_COMMENT_MODE,\n\t      HERE_DOC,\n\t      PATH_MODE,\n\t      QUOTE_STRING,\n\t      ESCAPED_QUOTE,\n\t      APOS_STRING,\n\t      ESCAPED_APOS,\n\t      VAR\n\t    ]\n\t  };\n\t}\n\n\tbash_1 = bash;\n\treturn bash_1;\n}\n\nexport { requireBash as __require };",
      "start": 1699633500712,
      "end": 1699633500713,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500713,
      "end": 1699633500713,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500713,
      "end": 1699633500713,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500713,
      "end": 1699633500713,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500713,
      "end": 1699633500713,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500713,
      "end": 1699633500713,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500714,
      "end": 1699633500714,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500714,
      "end": 1699633500714,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500714,
      "end": 1699633500714,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500714,
      "end": 1699633500714,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500714,
      "end": 1699633500714,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500714,
      "end": 1699633500714,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500714,
      "end": 1699633500714,
      "order": "normal"
    }
  ]
}
