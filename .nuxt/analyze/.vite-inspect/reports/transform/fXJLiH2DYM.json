{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/ocaml.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: OCaml\nAuthor: Mehdi Dogguy <mehdi@dogguy.org>\nContributors: Nicolas Braud-Santoni <nicolas.braud-santoni@ens-cachan.fr>, Mickael Delahaye <mickael.delahaye@gmail.com>\nDescription: OCaml language definition.\nWebsite: https://ocaml.org\nCategory: functional\n*/\n\nfunction ocaml(hljs) {\n  /* missing support for heredoc-like string (OCaml 4.0.2+) */\n  return {\n    name: 'OCaml',\n    aliases: [ 'ml' ],\n    keywords: {\n      $pattern: '[a-z_]\\\\w*!?',\n      keyword:\n        'and as assert asr begin class constraint do done downto else end '\n        + 'exception external for fun function functor if in include '\n        + 'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method '\n        + 'mod module mutable new object of open! open or private rec sig struct '\n        + 'then to try type val! val virtual when while with '\n        /* camlp4 */\n        + 'parser value',\n      built_in:\n        /* built-in types */\n        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit '\n        /* (some) types in Pervasives */\n        + 'in_channel out_channel ref',\n      literal:\n        'true false'\n    },\n    illegal: /\\/\\/|>>/,\n    contains: [\n      {\n        className: 'literal',\n        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        { contains: [ 'self' ] }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with ' */\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*',\n        relevance: 0\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {\n        className: 'string',\n        relevance: 0\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|'\n          + '0[oO][0-7_]+[Lln]?|'\n          + '0[bB][01_]+[Lln]?|'\n          + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      { begin: /->/ // relevance booster\n      }\n    ]\n  };\n}\n\nmodule.exports = ocaml;\n",
      "start": 1699633501154,
      "end": 1699633501268,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501268,
      "end": 1699633501268,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501268,
      "end": 1699633501268,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501268,
      "end": 1699633501268,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501268,
      "end": 1699633501268,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501268,
      "end": 1699633501268,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501269,
      "end": 1699633501269,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501269,
      "end": 1699633501270,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: OCaml\nAuthor: Mehdi Dogguy <mehdi@dogguy.org>\nContributors: Nicolas Braud-Santoni <nicolas.braud-santoni@ens-cachan.fr>, Mickael Delahaye <mickael.delahaye@gmail.com>\nDescription: OCaml language definition.\nWebsite: https://ocaml.org\nCategory: functional\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar ocaml_1;\nvar hasRequiredOcaml;\n\nfunction requireOcaml () {\n\tif (hasRequiredOcaml) return ocaml_1;\n\thasRequiredOcaml = 1;\n\tfunction ocaml(hljs) {\n\t  /* missing support for heredoc-like string (OCaml 4.0.2+) */\n\t  return {\n\t    name: 'OCaml',\n\t    aliases: [ 'ml' ],\n\t    keywords: {\n\t      $pattern: '[a-z_]\\\\w*!?',\n\t      keyword:\n\t        'and as assert asr begin class constraint do done downto else end '\n\t        + 'exception external for fun function functor if in include '\n\t        + 'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method '\n\t        + 'mod module mutable new object of open! open or private rec sig struct '\n\t        + 'then to try type val! val virtual when while with '\n\t        /* camlp4 */\n\t        + 'parser value',\n\t      built_in:\n\t        /* built-in types */\n\t        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit '\n\t        /* (some) types in Pervasives */\n\t        + 'in_channel out_channel ref',\n\t      literal:\n\t        'true false'\n\t    },\n\t    illegal: /\\/\\/|>>/,\n\t    contains: [\n\t      {\n\t        className: 'literal',\n\t        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',\n\t        relevance: 0\n\t      },\n\t      hljs.COMMENT(\n\t        '\\\\(\\\\*',\n\t        '\\\\*\\\\)',\n\t        { contains: [ 'self' ] }\n\t      ),\n\t      { /* type variable */\n\t        className: 'symbol',\n\t        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n\t        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n\t      },\n\t      { /* polymorphic variant */\n\t        className: 'type',\n\t        begin: '`[A-Z][\\\\w\\']*'\n\t      },\n\t      { /* module or constructor */\n\t        className: 'type',\n\t        begin: '\\\\b[A-Z][\\\\w\\']*',\n\t        relevance: 0\n\t      },\n\t      { /* don't color identifiers, but safely catch all identifiers with ' */\n\t        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*',\n\t        relevance: 0\n\t      },\n\t      hljs.inherit(hljs.APOS_STRING_MODE, {\n\t        className: 'string',\n\t        relevance: 0\n\t      }),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),\n\t      {\n\t        className: 'number',\n\t        begin:\n\t          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|'\n\t          + '0[oO][0-7_]+[Lln]?|'\n\t          + '0[bB][01_]+[Lln]?|'\n\t          + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n\t        relevance: 0\n\t      },\n\t      { begin: /->/ // relevance booster\n\t      }\n\t    ]\n\t  };\n\t}\n\n\tocaml_1 = ocaml;\n\treturn ocaml_1;\n}\n\nexport { requireOcaml as __require };",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;;CASA,SAAS,KAAK,CAAC,IAAI,EAAE;CACrB;CACA,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,OAAO;CACjB,IAAI,OAAO,EAAE,EAAE,IAAI,EAAE;CACrB,IAAI,QAAQ,EAAE;CACd,MAAM,QAAQ,EAAE,cAAc;CAC9B,MAAM,OAAO;CACb,QAAQ,mEAAmE;CAC3E,UAAU,4DAA4D;CACtE,UAAU,sFAAsF;CAChG,UAAU,wEAAwE;CAClF,UAAU,oDAAoD;CAC9D;CACA,UAAU,cAAc;CACxB,MAAM,QAAQ;CACd;CACA,QAAQ,0FAA0F;CAClG;CACA,UAAU,4BAA4B;CACtC,MAAM,OAAO;CACb,QAAQ,YAAY;CACpB,KAAK;CACL,IAAI,OAAO,EAAE,SAAS;CACtB,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,SAAS,EAAE,SAAS;CAC5B,QAAQ,KAAK,EAAE,wBAAwB;CACvC,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM,IAAI,CAAC,OAAO;CAClB,QAAQ,QAAQ;CAChB,QAAQ,QAAQ;CAChB,QAAQ,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE;CAChC,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,2BAA2B;CAC1C;CACA,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,gBAAgB;CAC/B,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,kBAAkB;CACjC,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,sBAAsB;CACrC,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE;CAC1C,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO,CAAC;CACR,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;CAC7D,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK;CACb,UAAU,+BAA+B;CACzC,YAAY,qBAAqB;CACjC,YAAY,oBAAoB;CAChC,YAAY,wDAAwD;CACpE,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM,EAAE,KAAK,EAAE,IAAI;CACnB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,QAAc,GAAG,KAAK"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501270,
      "end": 1699633501270,
      "order": "normal"
    }
  ]
}
