{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/swiper/components-shared/update-swiper.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isObject, extend } from './utils.js';\nfunction updateSwiper({\n  swiper,\n  slides,\n  passedParams,\n  changedParams,\n  nextEl,\n  prevEl,\n  scrollbarEl,\n  paginationEl\n}) {\n  const updateParams = changedParams.filter(key => key !== 'children' && key !== 'direction' && key !== 'wrapperClass');\n  const {\n    params: currentParams,\n    pagination,\n    navigation,\n    scrollbar,\n    virtual,\n    thumbs\n  } = swiper;\n  let needThumbsInit;\n  let needControllerInit;\n  let needPaginationInit;\n  let needScrollbarInit;\n  let needNavigationInit;\n  let loopNeedDestroy;\n  let loopNeedEnable;\n  let loopNeedReloop;\n  if (changedParams.includes('thumbs') && passedParams.thumbs && passedParams.thumbs.swiper && currentParams.thumbs && !currentParams.thumbs.swiper) {\n    needThumbsInit = true;\n  }\n  if (changedParams.includes('controller') && passedParams.controller && passedParams.controller.control && currentParams.controller && !currentParams.controller.control) {\n    needControllerInit = true;\n  }\n  if (changedParams.includes('pagination') && passedParams.pagination && (passedParams.pagination.el || paginationEl) && (currentParams.pagination || currentParams.pagination === false) && pagination && !pagination.el) {\n    needPaginationInit = true;\n  }\n  if (changedParams.includes('scrollbar') && passedParams.scrollbar && (passedParams.scrollbar.el || scrollbarEl) && (currentParams.scrollbar || currentParams.scrollbar === false) && scrollbar && !scrollbar.el) {\n    needScrollbarInit = true;\n  }\n  if (changedParams.includes('navigation') && passedParams.navigation && (passedParams.navigation.prevEl || prevEl) && (passedParams.navigation.nextEl || nextEl) && (currentParams.navigation || currentParams.navigation === false) && navigation && !navigation.prevEl && !navigation.nextEl) {\n    needNavigationInit = true;\n  }\n  const destroyModule = mod => {\n    if (!swiper[mod]) return;\n    swiper[mod].destroy();\n    if (mod === 'navigation') {\n      if (swiper.isElement) {\n        swiper[mod].prevEl.remove();\n        swiper[mod].nextEl.remove();\n      }\n      currentParams[mod].prevEl = undefined;\n      currentParams[mod].nextEl = undefined;\n      swiper[mod].prevEl = undefined;\n      swiper[mod].nextEl = undefined;\n    } else {\n      if (swiper.isElement) {\n        swiper[mod].el.remove();\n      }\n      currentParams[mod].el = undefined;\n      swiper[mod].el = undefined;\n    }\n  };\n  if (changedParams.includes('loop') && swiper.isElement) {\n    if (currentParams.loop && !passedParams.loop) {\n      loopNeedDestroy = true;\n    } else if (!currentParams.loop && passedParams.loop) {\n      loopNeedEnable = true;\n    } else {\n      loopNeedReloop = true;\n    }\n  }\n  updateParams.forEach(key => {\n    if (isObject(currentParams[key]) && isObject(passedParams[key])) {\n      extend(currentParams[key], passedParams[key]);\n      if ((key === 'navigation' || key === 'pagination' || key === 'scrollbar') && 'enabled' in passedParams[key] && !passedParams[key].enabled) {\n        destroyModule(key);\n      }\n    } else {\n      const newValue = passedParams[key];\n      if ((newValue === true || newValue === false) && (key === 'navigation' || key === 'pagination' || key === 'scrollbar')) {\n        if (newValue === false) {\n          destroyModule(key);\n        }\n      } else {\n        currentParams[key] = passedParams[key];\n      }\n    }\n  });\n  if (updateParams.includes('controller') && !needControllerInit && swiper.controller && swiper.controller.control && currentParams.controller && currentParams.controller.control) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (changedParams.includes('children') && slides && virtual && currentParams.virtual.enabled) {\n    virtual.slides = slides;\n    virtual.update(true);\n  }\n  if (changedParams.includes('children') && slides && currentParams.loop) {\n    loopNeedReloop = true;\n  }\n  if (needThumbsInit) {\n    const initialized = thumbs.init();\n    if (initialized) thumbs.update(true);\n  }\n  if (needControllerInit) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (needPaginationInit) {\n    if (swiper.isElement && (!paginationEl || typeof paginationEl === 'string')) {\n      paginationEl = document.createElement('div');\n      paginationEl.classList.add('swiper-pagination');\n      swiper.el.shadowEl.appendChild(paginationEl);\n    }\n    if (paginationEl) currentParams.pagination.el = paginationEl;\n    pagination.init();\n    pagination.render();\n    pagination.update();\n  }\n  if (needScrollbarInit) {\n    if (swiper.isElement && (!scrollbarEl || typeof scrollbarEl === 'string')) {\n      scrollbarEl = document.createElement('div');\n      scrollbarEl.classList.add('swiper-scrollbar');\n      swiper.el.shadowEl.appendChild(scrollbarEl);\n    }\n    if (scrollbarEl) currentParams.scrollbar.el = scrollbarEl;\n    scrollbar.init();\n    scrollbar.updateSize();\n    scrollbar.setTranslate();\n  }\n  if (needNavigationInit) {\n    if (swiper.isElement) {\n      if (!nextEl || typeof nextEl === 'string') {\n        nextEl = document.createElement('div');\n        nextEl.classList.add('swiper-button-next');\n        swiper.el.shadowEl.appendChild(nextEl);\n      }\n      if (!prevEl || typeof prevEl === 'string') {\n        prevEl = document.createElement('div');\n        prevEl.classList.add('swiper-button-prev');\n        swiper.el.shadowEl.appendChild(prevEl);\n      }\n    }\n    if (nextEl) currentParams.navigation.nextEl = nextEl;\n    if (prevEl) currentParams.navigation.prevEl = prevEl;\n    navigation.init();\n    navigation.update();\n  }\n  if (changedParams.includes('allowSlideNext')) {\n    swiper.allowSlideNext = passedParams.allowSlideNext;\n  }\n  if (changedParams.includes('allowSlidePrev')) {\n    swiper.allowSlidePrev = passedParams.allowSlidePrev;\n  }\n  if (changedParams.includes('direction')) {\n    swiper.changeDirection(passedParams.direction, false);\n  }\n  if (loopNeedDestroy || loopNeedReloop) {\n    swiper.loopDestroy();\n  }\n  if (loopNeedEnable || loopNeedReloop) {\n    swiper.loopCreate();\n  }\n  swiper.update();\n}\nexport { updateSwiper };",
      "start": 1699961620522,
      "end": 1699961620626,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1699961620626,
      "end": 1699961620626,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1699961620626,
      "end": 1699961620626,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699961620626,
      "end": 1699961620626,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699961620626,
      "end": 1699961620626,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699961620626,
      "end": 1699961620626,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:default",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961620627,
      "end": 1699961620627,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1699961620628,
      "end": 1699961620628,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699961620629,
      "end": 1699961620629,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699961620629,
      "end": 1699961620629,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699961620629,
      "end": 1699961620629,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699961620629,
      "end": 1699961620629,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699961620629,
      "end": 1699961620629,
      "order": "normal"
    }
  ]
}
