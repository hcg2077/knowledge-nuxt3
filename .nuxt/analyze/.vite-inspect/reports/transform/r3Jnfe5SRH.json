{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/python.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        begin: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = python;\n",
      "start": 1699633501262,
      "end": 1699633501354,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501354,
      "end": 1699633501354,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501355,
      "end": 1699633501355,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501356,
      "end": 1699633501356,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar python_1;\nvar hasRequiredPython;\n\nfunction requirePython () {\n\tif (hasRequiredPython) return python_1;\n\thasRequiredPython = 1;\n\tfunction python(hljs) {\n\t  const regex = hljs.regex;\n\t  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n\t  const RESERVED_WORDS = [\n\t    'and',\n\t    'as',\n\t    'assert',\n\t    'async',\n\t    'await',\n\t    'break',\n\t    'case',\n\t    'class',\n\t    'continue',\n\t    'def',\n\t    'del',\n\t    'elif',\n\t    'else',\n\t    'except',\n\t    'finally',\n\t    'for',\n\t    'from',\n\t    'global',\n\t    'if',\n\t    'import',\n\t    'in',\n\t    'is',\n\t    'lambda',\n\t    'match',\n\t    'nonlocal|10',\n\t    'not',\n\t    'or',\n\t    'pass',\n\t    'raise',\n\t    'return',\n\t    'try',\n\t    'while',\n\t    'with',\n\t    'yield'\n\t  ];\n\n\t  const BUILT_INS = [\n\t    '__import__',\n\t    'abs',\n\t    'all',\n\t    'any',\n\t    'ascii',\n\t    'bin',\n\t    'bool',\n\t    'breakpoint',\n\t    'bytearray',\n\t    'bytes',\n\t    'callable',\n\t    'chr',\n\t    'classmethod',\n\t    'compile',\n\t    'complex',\n\t    'delattr',\n\t    'dict',\n\t    'dir',\n\t    'divmod',\n\t    'enumerate',\n\t    'eval',\n\t    'exec',\n\t    'filter',\n\t    'float',\n\t    'format',\n\t    'frozenset',\n\t    'getattr',\n\t    'globals',\n\t    'hasattr',\n\t    'hash',\n\t    'help',\n\t    'hex',\n\t    'id',\n\t    'input',\n\t    'int',\n\t    'isinstance',\n\t    'issubclass',\n\t    'iter',\n\t    'len',\n\t    'list',\n\t    'locals',\n\t    'map',\n\t    'max',\n\t    'memoryview',\n\t    'min',\n\t    'next',\n\t    'object',\n\t    'oct',\n\t    'open',\n\t    'ord',\n\t    'pow',\n\t    'print',\n\t    'property',\n\t    'range',\n\t    'repr',\n\t    'reversed',\n\t    'round',\n\t    'set',\n\t    'setattr',\n\t    'slice',\n\t    'sorted',\n\t    'staticmethod',\n\t    'str',\n\t    'sum',\n\t    'super',\n\t    'tuple',\n\t    'type',\n\t    'vars',\n\t    'zip'\n\t  ];\n\n\t  const LITERALS = [\n\t    '__debug__',\n\t    'Ellipsis',\n\t    'False',\n\t    'None',\n\t    'NotImplemented',\n\t    'True'\n\t  ];\n\n\t  // https://docs.python.org/3/library/typing.html\n\t  // TODO: Could these be supplemented by a CamelCase matcher in certain\n\t  // contexts, leaving these remaining only for relevance hinting?\n\t  const TYPES = [\n\t    \"Any\",\n\t    \"Callable\",\n\t    \"Coroutine\",\n\t    \"Dict\",\n\t    \"List\",\n\t    \"Literal\",\n\t    \"Generic\",\n\t    \"Optional\",\n\t    \"Sequence\",\n\t    \"Set\",\n\t    \"Tuple\",\n\t    \"Type\",\n\t    \"Union\"\n\t  ];\n\n\t  const KEYWORDS = {\n\t    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n\t    keyword: RESERVED_WORDS,\n\t    built_in: BUILT_INS,\n\t    literal: LITERALS,\n\t    type: TYPES\n\t  };\n\n\t  const PROMPT = {\n\t    className: 'meta',\n\t    begin: /^(>>>|\\.\\.\\.) /\n\t  };\n\n\t  const SUBST = {\n\t    className: 'subst',\n\t    begin: /\\{/,\n\t    end: /\\}/,\n\t    keywords: KEYWORDS,\n\t    illegal: /#/\n\t  };\n\n\t  const LITERAL_BRACKET = {\n\t    begin: /\\{\\{/,\n\t    relevance: 0\n\t  };\n\n\t  const STRING = {\n\t    className: 'string',\n\t    contains: [ hljs.BACKSLASH_ESCAPE ],\n\t    variants: [\n\t      {\n\t        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n\t        end: /'''/,\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          PROMPT\n\t        ],\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n\t        end: /\"\"\"/,\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          PROMPT\n\t        ],\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n\t        end: /'''/,\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          PROMPT,\n\t          LITERAL_BRACKET,\n\t          SUBST\n\t        ]\n\t      },\n\t      {\n\t        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n\t        end: /\"\"\"/,\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          PROMPT,\n\t          LITERAL_BRACKET,\n\t          SUBST\n\t        ]\n\t      },\n\t      {\n\t        begin: /([uU]|[rR])'/,\n\t        end: /'/,\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /([uU]|[rR])\"/,\n\t        end: /\"/,\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n\t        end: /'/\n\t      },\n\t      {\n\t        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n\t        end: /\"/\n\t      },\n\t      {\n\t        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n\t        end: /'/,\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          LITERAL_BRACKET,\n\t          SUBST\n\t        ]\n\t      },\n\t      {\n\t        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n\t        end: /\"/,\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          LITERAL_BRACKET,\n\t          SUBST\n\t        ]\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE\n\t    ]\n\t  };\n\n\t  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n\t  const digitpart = '[0-9](_?[0-9])*';\n\t  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n\t  // Whitespace after a number (or any lexical token) is needed only if its absence\n\t  // would change the tokenization\n\t  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n\t  // We deviate slightly, requiring a word boundary or a keyword\n\t  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n\t  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n\t  const NUMBER = {\n\t    className: 'number',\n\t    relevance: 0,\n\t    variants: [\n\t      // exponentfloat, pointfloat\n\t      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n\t      // optionally imaginary\n\t      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n\t      // Note: no leading \\b because floats can start with a decimal point\n\t      // and we don't want to mishandle e.g. `fn(.5)`,\n\t      // no trailing \\b for pointfloat because it can end with a decimal point\n\t      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n\t      // because both MUST contain a decimal point and so cannot be confused with\n\t      // the interior part of an identifier\n\t      {\n\t        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n\t      },\n\t      {\n\t        begin: `(${pointfloat})[jJ]?`\n\t      },\n\n\t      // decinteger, bininteger, octinteger, hexinteger\n\t      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n\t      // optionally \"long\" in Python 2\n\t      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n\t      // decinteger is optionally imaginary\n\t      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n\t      {\n\t        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n\t      },\n\t      {\n\t        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n\t      },\n\t      {\n\t        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n\t      },\n\t      {\n\t        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n\t      },\n\n\t      // imagnumber (digitpart-based)\n\t      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n\t      {\n\t        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n\t      }\n\t    ]\n\t  };\n\t  const COMMENT_TYPE = {\n\t    className: \"comment\",\n\t    begin: regex.lookahead(/# type:/),\n\t    end: /$/,\n\t    keywords: KEYWORDS,\n\t    contains: [\n\t      { // prevent keywords from coloring `type`\n\t        begin: /# type:/\n\t      },\n\t      // comment within a datatype comment includes no keywords\n\t      {\n\t        begin: /#/,\n\t        end: /\\b\\B/,\n\t        endsWithParent: true\n\t      }\n\t    ]\n\t  };\n\t  const PARAMS = {\n\t    className: 'params',\n\t    variants: [\n\t      // Exclude params in functions without params\n\t      {\n\t        className: \"\",\n\t        begin: /\\(\\s*\\)/,\n\t        skip: true\n\t      },\n\t      {\n\t        begin: /\\(/,\n\t        end: /\\)/,\n\t        excludeBegin: true,\n\t        excludeEnd: true,\n\t        keywords: KEYWORDS,\n\t        contains: [\n\t          'self',\n\t          PROMPT,\n\t          NUMBER,\n\t          STRING,\n\t          hljs.HASH_COMMENT_MODE\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t  SUBST.contains = [\n\t    STRING,\n\t    NUMBER,\n\t    PROMPT\n\t  ];\n\n\t  return {\n\t    name: 'Python',\n\t    aliases: [\n\t      'py',\n\t      'gyp',\n\t      'ipython'\n\t    ],\n\t    unicodeRegex: true,\n\t    keywords: KEYWORDS,\n\t    illegal: /(<\\/|\\?)|=>/,\n\t    contains: [\n\t      PROMPT,\n\t      NUMBER,\n\t      {\n\t        // very common convention\n\t        begin: /\\bself\\b/\n\t      },\n\t      {\n\t        // eat \"if\" prior to string so that it won't accidentally be\n\t        // labeled as an f-string\n\t        beginKeywords: \"if\",\n\t        relevance: 0\n\t      },\n\t      STRING,\n\t      COMMENT_TYPE,\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        match: [\n\t          /\\bdef/, /\\s+/,\n\t          IDENT_RE,\n\t        ],\n\t        scope: {\n\t          1: \"keyword\",\n\t          3: \"title.function\"\n\t        },\n\t        contains: [ PARAMS ]\n\t      },\n\t      {\n\t        variants: [\n\t          {\n\t            match: [\n\t              /\\bclass/, /\\s+/,\n\t              IDENT_RE, /\\s*/,\n\t              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n\t            ],\n\t          },\n\t          {\n\t            match: [\n\t              /\\bclass/, /\\s+/,\n\t              IDENT_RE\n\t            ],\n\t          }\n\t        ],\n\t        scope: {\n\t          1: \"keyword\",\n\t          3: \"title.class\",\n\t          6: \"title.class.inherited\",\n\t        }\n\t      },\n\t      {\n\t        className: 'meta',\n\t        begin: /^[\\t ]*@/,\n\t        end: /(?=#)|$/,\n\t        contains: [\n\t          NUMBER,\n\t          PARAMS,\n\t          STRING\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t}\n\n\tpython_1 = python;\n\treturn python_1;\n}\n\nexport { requirePython as __require };",
      "start": 1699633501356,
      "end": 1699633501359,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;CAOA,SAAS,MAAM,CAAC,IAAI,EAAE;CACtB,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;CAC3B,EAAE,MAAM,QAAQ,GAAG,oCAAoC,CAAC;CACxD,EAAE,MAAM,cAAc,GAAG;CACzB,IAAI,KAAK;CACT,IAAI,IAAI;CACR,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,SAAS;CACb,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,IAAI;CACR,IAAI,QAAQ;CACZ,IAAI,IAAI;CACR,IAAI,IAAI;CACR,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,aAAa;CACjB,IAAI,KAAK;CACT,IAAI,IAAI;CACR,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,OAAO;CACX,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,SAAS,GAAG;CACpB,IAAI,YAAY;CAChB,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,YAAY;CAChB,IAAI,WAAW;CACf,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,KAAK;CACT,IAAI,aAAa;CACjB,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,QAAQ;CACZ,IAAI,WAAW;CACf,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,IAAI;CACR,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,YAAY;CAChB,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,YAAY;CAChB,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,SAAS;CACb,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,cAAc;CAClB,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,KAAK;CACT,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,QAAQ,GAAG;CACnB,IAAI,WAAW;CACf,IAAI,UAAU;CACd,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,gBAAgB;CACpB,IAAI,MAAM;CACV,GAAG,CAAC;AACJ;CACA;CACA;CACA;CACA,EAAE,MAAM,KAAK,GAAG;CAChB,IAAI,KAAK;CACT,IAAI,UAAU;CACd,IAAI,WAAW;CACf,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,UAAU;CACd,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,OAAO;CACX,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,QAAQ,GAAG;CACnB,IAAI,QAAQ,EAAE,qBAAqB;CACnC,IAAI,OAAO,EAAE,cAAc;CAC3B,IAAI,QAAQ,EAAE,SAAS;CACvB,IAAI,OAAO,EAAE,QAAQ;CACrB,IAAI,IAAI,EAAE,KAAK;CACf,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,MAAM,GAAG;CACjB,IAAI,SAAS,EAAE,MAAM;CACrB,IAAI,KAAK,EAAE,gBAAgB;CAC3B,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,KAAK,GAAG;CAChB,IAAI,SAAS,EAAE,OAAO;CACtB,IAAI,KAAK,EAAE,IAAI;CACf,IAAI,GAAG,EAAE,IAAI;CACb,IAAI,QAAQ,EAAE,QAAQ;CACtB,IAAI,OAAO,EAAE,GAAG;CAChB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,eAAe,GAAG;CAC1B,IAAI,KAAK,EAAE,MAAM;CACjB,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,MAAM,GAAG;CACjB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,QAAQ,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE;CACvC,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,KAAK,EAAE,wCAAwC;CACvD,QAAQ,GAAG,EAAE,KAAK;CAClB,QAAQ,QAAQ,EAAE;CAClB,UAAU,IAAI,CAAC,gBAAgB;CAC/B,UAAU,MAAM;CAChB,SAAS;CACT,QAAQ,SAAS,EAAE,EAAE;CACrB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,wCAAwC;CACvD,QAAQ,GAAG,EAAE,KAAK;CAClB,QAAQ,QAAQ,EAAE;CAClB,UAAU,IAAI,CAAC,gBAAgB;CAC/B,UAAU,MAAM;CAChB,SAAS;CACT,QAAQ,SAAS,EAAE,EAAE;CACrB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,6BAA6B;CAC5C,QAAQ,GAAG,EAAE,KAAK;CAClB,QAAQ,QAAQ,EAAE;CAClB,UAAU,IAAI,CAAC,gBAAgB;CAC/B,UAAU,MAAM;CAChB,UAAU,eAAe;CACzB,UAAU,KAAK;CACf,SAAS;CACT,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,6BAA6B;CAC5C,QAAQ,GAAG,EAAE,KAAK;CAClB,QAAQ,QAAQ,EAAE;CAClB,UAAU,IAAI,CAAC,gBAAgB;CAC/B,UAAU,MAAM;CAChB,UAAU,eAAe;CACzB,UAAU,KAAK;CACf,SAAS;CACT,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,cAAc;CAC7B,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,SAAS,EAAE,EAAE;CACrB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,cAAc;CAC7B,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,SAAS,EAAE,EAAE;CACrB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,2BAA2B;CAC1C,QAAQ,GAAG,EAAE,GAAG;CAChB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,2BAA2B;CAC1C,QAAQ,GAAG,EAAE,GAAG;CAChB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,2BAA2B;CAC1C,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,QAAQ,EAAE;CAClB,UAAU,IAAI,CAAC,gBAAgB;CAC/B,UAAU,eAAe;CACzB,UAAU,KAAK;CACf,SAAS;CACT,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,2BAA2B;CAC1C,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,QAAQ,EAAE;CAClB,UAAU,IAAI,CAAC,gBAAgB;CAC/B,UAAU,eAAe;CACzB,UAAU,KAAK;CACf,SAAS;CACT,OAAO;CACP,MAAM,IAAI,CAAC,gBAAgB;CAC3B,MAAM,IAAI,CAAC,iBAAiB;CAC5B,KAAK;CACL,GAAG,CAAC;AACJ;CACA;CACA,EAAE,MAAM,SAAS,GAAG,iBAAiB,CAAC;CACtC,EAAE,MAAM,UAAU,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;CAClF;CACA;CACA;CACA;CACA;CACA,EAAE,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;CACtD,EAAE,MAAM,MAAM,GAAG;CACjB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,SAAS,EAAE,CAAC;CAChB,IAAI,QAAQ,EAAE;CACd;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM;CACN,QAAQ,KAAK,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,YAAY,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;CAChG,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC;CACrC,OAAO;AACP;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM;CACN,QAAQ,KAAK,EAAE,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC,CAAC;CACrE,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC,CAAC;CACvD,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC,CAAC;CACxD,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,CAAC,gCAAgC,EAAE,SAAS,CAAC,CAAC,CAAC;CAC9D,OAAO;AACP;CACA;CACA;CACA,MAAM;CACN,QAAQ,KAAK,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;CACtD,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,MAAM,YAAY,GAAG;CACvB,IAAI,SAAS,EAAE,SAAS;CACxB,IAAI,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;CACrC,IAAI,GAAG,EAAE,GAAG;CACZ,IAAI,QAAQ,EAAE,QAAQ;CACtB,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,KAAK,EAAE,SAAS;CACxB,OAAO;CACP;CACA,MAAM;CACN,QAAQ,KAAK,EAAE,GAAG;CAClB,QAAQ,GAAG,EAAE,MAAM;CACnB,QAAQ,cAAc,EAAE,IAAI;CAC5B,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,MAAM,MAAM,GAAG;CACjB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,QAAQ,EAAE;CACd;CACA,MAAM;CACN,QAAQ,SAAS,EAAE,EAAE;CACrB,QAAQ,KAAK,EAAE,SAAS;CACxB,QAAQ,IAAI,EAAE,IAAI;CAClB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,IAAI;CACnB,QAAQ,GAAG,EAAE,IAAI;CACjB,QAAQ,YAAY,EAAE,IAAI;CAC1B,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,QAAQ,EAAE,QAAQ;CAC1B,QAAQ,QAAQ,EAAE;CAClB,UAAU,MAAM;CAChB,UAAU,MAAM;CAChB,UAAU,MAAM;CAChB,UAAU,MAAM;CAChB,UAAU,IAAI,CAAC,iBAAiB;CAChC,SAAS;CACT,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,QAAQ,GAAG;CACnB,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,MAAM;CACV,GAAG,CAAC;AACJ;CACA,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,QAAQ;CAClB,IAAI,OAAO,EAAE;CACb,MAAM,IAAI;CACV,MAAM,KAAK;CACX,MAAM,SAAS;CACf,KAAK;CACL,IAAI,YAAY,EAAE,IAAI;CACtB,IAAI,QAAQ,EAAE,QAAQ;CACtB,IAAI,OAAO,EAAE,aAAa;CAC1B,IAAI,QAAQ,EAAE;CACd,MAAM,MAAM;CACZ,MAAM,MAAM;CACZ,MAAM;CACN;CACA,QAAQ,KAAK,EAAE,UAAU;CACzB,OAAO;CACP,MAAM;CACN;CACA;CACA,QAAQ,aAAa,EAAE,IAAI;CAC3B,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM,MAAM;CACZ,MAAM,YAAY;CAClB,MAAM,IAAI,CAAC,iBAAiB;CAC5B,MAAM;CACN,QAAQ,KAAK,EAAE;CACf,UAAU,OAAO,EAAE,KAAK;CACxB,UAAU,QAAQ;CAClB,SAAS;CACT,QAAQ,KAAK,EAAE;CACf,UAAU,CAAC,EAAE,SAAS;CACtB,UAAU,CAAC,EAAE,gBAAgB;CAC7B,SAAS;CACT,QAAQ,QAAQ,EAAE,EAAE,MAAM,EAAE;CAC5B,OAAO;CACP,MAAM;CACN,QAAQ,QAAQ,EAAE;CAClB,UAAU;CACV,YAAY,KAAK,EAAE;CACnB,cAAc,SAAS,EAAE,KAAK;CAC9B,cAAc,QAAQ,EAAE,KAAK;CAC7B,cAAc,OAAO,EAAE,QAAQ,CAAC,OAAO;CACvC,aAAa;CACb,WAAW;CACX,UAAU;CACV,YAAY,KAAK,EAAE;CACnB,cAAc,SAAS,EAAE,KAAK;CAC9B,cAAc,QAAQ;CACtB,aAAa;CACb,WAAW;CACX,SAAS;CACT,QAAQ,KAAK,EAAE;CACf,UAAU,CAAC,EAAE,SAAS;CACtB,UAAU,CAAC,EAAE,aAAa;CAC1B,UAAU,CAAC,EAAE,uBAAuB;CACpC,SAAS;CACT,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,UAAU;CACzB,QAAQ,GAAG,EAAE,SAAS;CACtB,QAAQ,QAAQ,EAAE;CAClB,UAAU,MAAM;CAChB,UAAU,MAAM;CAChB,UAAU,MAAM;CAChB,SAAS;CACT,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,SAAc,GAAG,MAAM"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501359,
      "end": 1699633501359,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501360,
      "end": 1699633501360,
      "order": "normal"
    }
  ]
}
