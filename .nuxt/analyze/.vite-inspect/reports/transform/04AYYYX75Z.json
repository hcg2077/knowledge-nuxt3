{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/swiper/shared/process-lazy-preloader.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};",
      "start": 1699961620380,
      "end": 1699961620533,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1699961620534,
      "end": 1699961620534,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1699961620534,
      "end": 1699961620534,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:default",
      "start": 1699961620535,
      "end": 1699961620535,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699961620536,
      "end": 1699961620536,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699961620537,
      "end": 1699961620537,
      "order": "normal"
    }
  ]
}
