{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/sql.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\n\n/*\n\nGoals:\n\nSQL is intended to highlight basic/common SQL keywords and expressions\n\n- If pretty much every single SQL server includes supports, then it's a canidate.\n- It is NOT intended to include tons of vendor specific keywords (Oracle, MySQL,\n  PostgreSQL) although the list of data types is purposely a bit more expansive.\n- For more specific SQL grammars please see:\n  - PostgreSQL and PL/pgSQL - core\n  - T-SQL - https://github.com/highlightjs/highlightjs-tsql\n  - sql_more (core)\n\n */\n\nfunction sql(hljs) {\n  const regex = hljs.regex;\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [ { begin: /''/ } ]\n      }\n    ]\n  };\n  const QUOTED_IDENTIFIER = {\n    begin: /\"/,\n    end: /\"/,\n    contains: [ { begin: /\"\"/ } ]\n  };\n\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n    // \"null\",\n    \"unknown\"\n  ];\n\n  const MULTI_WORD_TYPES = [\n    \"double precision\",\n    \"large object\",\n    \"with timezone\",\n    \"without timezone\"\n  ];\n\n  const TYPES = [\n    'bigint',\n    'binary',\n    'blob',\n    'boolean',\n    'char',\n    'character',\n    'clob',\n    'date',\n    'dec',\n    'decfloat',\n    'decimal',\n    'float',\n    'int',\n    'integer',\n    'interval',\n    'nchar',\n    'nclob',\n    'national',\n    'numeric',\n    'real',\n    'row',\n    'smallint',\n    'time',\n    'timestamp',\n    'varchar',\n    'varying', // modifier (character varying)\n    'varbinary'\n  ];\n\n  const NON_RESERVED_WORDS = [\n    \"add\",\n    \"asc\",\n    \"collation\",\n    \"desc\",\n    \"final\",\n    \"first\",\n    \"last\",\n    \"view\"\n  ];\n\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n  const RESERVED_WORDS = [\n    \"abs\",\n    \"acos\",\n    \"all\",\n    \"allocate\",\n    \"alter\",\n    \"and\",\n    \"any\",\n    \"are\",\n    \"array\",\n    \"array_agg\",\n    \"array_max_cardinality\",\n    \"as\",\n    \"asensitive\",\n    \"asin\",\n    \"asymmetric\",\n    \"at\",\n    \"atan\",\n    \"atomic\",\n    \"authorization\",\n    \"avg\",\n    \"begin\",\n    \"begin_frame\",\n    \"begin_partition\",\n    \"between\",\n    \"bigint\",\n    \"binary\",\n    \"blob\",\n    \"boolean\",\n    \"both\",\n    \"by\",\n    \"call\",\n    \"called\",\n    \"cardinality\",\n    \"cascaded\",\n    \"case\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"char\",\n    \"char_length\",\n    \"character\",\n    \"character_length\",\n    \"check\",\n    \"classifier\",\n    \"clob\",\n    \"close\",\n    \"coalesce\",\n    \"collate\",\n    \"collect\",\n    \"column\",\n    \"commit\",\n    \"condition\",\n    \"connect\",\n    \"constraint\",\n    \"contains\",\n    \"convert\",\n    \"copy\",\n    \"corr\",\n    \"corresponding\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"create\",\n    \"cross\",\n    \"cube\",\n    \"cume_dist\",\n    \"current\",\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_row\",\n    \"current_schema\",\n    \"current_time\",\n    \"current_timestamp\",\n    \"current_path\",\n    \"current_role\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"cursor\",\n    \"cycle\",\n    \"date\",\n    \"day\",\n    \"deallocate\",\n    \"dec\",\n    \"decimal\",\n    \"decfloat\",\n    \"declare\",\n    \"default\",\n    \"define\",\n    \"delete\",\n    \"dense_rank\",\n    \"deref\",\n    \"describe\",\n    \"deterministic\",\n    \"disconnect\",\n    \"distinct\",\n    \"double\",\n    \"drop\",\n    \"dynamic\",\n    \"each\",\n    \"element\",\n    \"else\",\n    \"empty\",\n    \"end\",\n    \"end_frame\",\n    \"end_partition\",\n    \"end-exec\",\n    \"equals\",\n    \"escape\",\n    \"every\",\n    \"except\",\n    \"exec\",\n    \"execute\",\n    \"exists\",\n    \"exp\",\n    \"external\",\n    \"extract\",\n    \"false\",\n    \"fetch\",\n    \"filter\",\n    \"first_value\",\n    \"float\",\n    \"floor\",\n    \"for\",\n    \"foreign\",\n    \"frame_row\",\n    \"free\",\n    \"from\",\n    \"full\",\n    \"function\",\n    \"fusion\",\n    \"get\",\n    \"global\",\n    \"grant\",\n    \"group\",\n    \"grouping\",\n    \"groups\",\n    \"having\",\n    \"hold\",\n    \"hour\",\n    \"identity\",\n    \"in\",\n    \"indicator\",\n    \"initial\",\n    \"inner\",\n    \"inout\",\n    \"insensitive\",\n    \"insert\",\n    \"int\",\n    \"integer\",\n    \"intersect\",\n    \"intersection\",\n    \"interval\",\n    \"into\",\n    \"is\",\n    \"join\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"language\",\n    \"large\",\n    \"last_value\",\n    \"lateral\",\n    \"lead\",\n    \"leading\",\n    \"left\",\n    \"like\",\n    \"like_regex\",\n    \"listagg\",\n    \"ln\",\n    \"local\",\n    \"localtime\",\n    \"localtimestamp\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"match\",\n    \"match_number\",\n    \"match_recognize\",\n    \"matches\",\n    \"max\",\n    \"member\",\n    \"merge\",\n    \"method\",\n    \"min\",\n    \"minute\",\n    \"mod\",\n    \"modifies\",\n    \"module\",\n    \"month\",\n    \"multiset\",\n    \"national\",\n    \"natural\",\n    \"nchar\",\n    \"nclob\",\n    \"new\",\n    \"no\",\n    \"none\",\n    \"normalize\",\n    \"not\",\n    \"nth_value\",\n    \"ntile\",\n    \"null\",\n    \"nullif\",\n    \"numeric\",\n    \"octet_length\",\n    \"occurrences_regex\",\n    \"of\",\n    \"offset\",\n    \"old\",\n    \"omit\",\n    \"on\",\n    \"one\",\n    \"only\",\n    \"open\",\n    \"or\",\n    \"order\",\n    \"out\",\n    \"outer\",\n    \"over\",\n    \"overlaps\",\n    \"overlay\",\n    \"parameter\",\n    \"partition\",\n    \"pattern\",\n    \"per\",\n    \"percent\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"period\",\n    \"portion\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"precedes\",\n    \"precision\",\n    \"prepare\",\n    \"primary\",\n    \"procedure\",\n    \"ptf\",\n    \"range\",\n    \"rank\",\n    \"reads\",\n    \"real\",\n    \"recursive\",\n    \"ref\",\n    \"references\",\n    \"referencing\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"release\",\n    \"result\",\n    \"return\",\n    \"returns\",\n    \"revoke\",\n    \"right\",\n    \"rollback\",\n    \"rollup\",\n    \"row\",\n    \"row_number\",\n    \"rows\",\n    \"running\",\n    \"savepoint\",\n    \"scope\",\n    \"scroll\",\n    \"search\",\n    \"second\",\n    \"seek\",\n    \"select\",\n    \"sensitive\",\n    \"session_user\",\n    \"set\",\n    \"show\",\n    \"similar\",\n    \"sin\",\n    \"sinh\",\n    \"skip\",\n    \"smallint\",\n    \"some\",\n    \"specific\",\n    \"specifictype\",\n    \"sql\",\n    \"sqlexception\",\n    \"sqlstate\",\n    \"sqlwarning\",\n    \"sqrt\",\n    \"start\",\n    \"static\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"submultiset\",\n    \"subset\",\n    \"substring\",\n    \"substring_regex\",\n    \"succeeds\",\n    \"sum\",\n    \"symmetric\",\n    \"system\",\n    \"system_time\",\n    \"system_user\",\n    \"table\",\n    \"tablesample\",\n    \"tan\",\n    \"tanh\",\n    \"then\",\n    \"time\",\n    \"timestamp\",\n    \"timezone_hour\",\n    \"timezone_minute\",\n    \"to\",\n    \"trailing\",\n    \"translate\",\n    \"translate_regex\",\n    \"translation\",\n    \"treat\",\n    \"trigger\",\n    \"trim\",\n    \"trim_array\",\n    \"true\",\n    \"truncate\",\n    \"uescape\",\n    \"union\",\n    \"unique\",\n    \"unknown\",\n    \"unnest\",\n    \"update\",\n    \"upper\",\n    \"user\",\n    \"using\",\n    \"value\",\n    \"values\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"varbinary\",\n    \"varchar\",\n    \"varying\",\n    \"versioning\",\n    \"when\",\n    \"whenever\",\n    \"where\",\n    \"width_bucket\",\n    \"window\",\n    \"with\",\n    \"within\",\n    \"without\",\n    \"year\",\n  ];\n\n  // these are reserved words we have identified to be functions\n  // and should only be highlighted in a dispatch-like context\n  // ie, array_agg(...), etc.\n  const RESERVED_FUNCTIONS = [\n    \"abs\",\n    \"acos\",\n    \"array_agg\",\n    \"asin\",\n    \"atan\",\n    \"avg\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"coalesce\",\n    \"corr\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"cume_dist\",\n    \"dense_rank\",\n    \"deref\",\n    \"element\",\n    \"exp\",\n    \"extract\",\n    \"first_value\",\n    \"floor\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"last_value\",\n    \"lead\",\n    \"listagg\",\n    \"ln\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"max\",\n    \"min\",\n    \"mod\",\n    \"nth_value\",\n    \"ntile\",\n    \"nullif\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"rank\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"row_number\",\n    \"sin\",\n    \"sinh\",\n    \"sqrt\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"substring\",\n    \"substring_regex\",\n    \"sum\",\n    \"tan\",\n    \"tanh\",\n    \"translate\",\n    \"translate_regex\",\n    \"treat\",\n    \"trim\",\n    \"trim_array\",\n    \"unnest\",\n    \"upper\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"width_bucket\",\n  ];\n\n  // these functions can\n  const POSSIBLE_WITHOUT_PARENS = [\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_schema\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"session_user\",\n    \"system_time\",\n    \"system_user\",\n    \"current_time\",\n    \"localtime\",\n    \"current_timestamp\",\n    \"localtimestamp\"\n  ];\n\n  // those exist to boost relevance making these very\n  // \"SQL like\" keyword combos worth +1 extra relevance\n  const COMBOS = [\n    \"create table\",\n    \"insert into\",\n    \"primary key\",\n    \"foreign key\",\n    \"not null\",\n    \"alter table\",\n    \"add constraint\",\n    \"grouping sets\",\n    \"on overflow\",\n    \"character set\",\n    \"respect nulls\",\n    \"ignore nulls\",\n    \"nulls first\",\n    \"nulls last\",\n    \"depth first\",\n    \"breadth first\"\n  ];\n\n  const FUNCTIONS = RESERVED_FUNCTIONS;\n\n  const KEYWORDS = [\n    ...RESERVED_WORDS,\n    ...NON_RESERVED_WORDS\n  ].filter((keyword) => {\n    return !RESERVED_FUNCTIONS.includes(keyword);\n  });\n\n  const VARIABLE = {\n    className: \"variable\",\n    begin: /@[a-z0-9][a-z0-9_]*/,\n  };\n\n  const OPERATOR = {\n    className: \"operator\",\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n    relevance: 0,\n  };\n\n  const FUNCTION_CALL = {\n    begin: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\n    relevance: 0,\n    keywords: { built_in: FUNCTIONS }\n  };\n\n  // keywords with less than 3 letters are reduced in relevancy\n  function reduceRelevancy(list, {\n    exceptions, when\n  } = {}) {\n    const qualifyFn = when;\n    exceptions = exceptions || [];\n    return list.map((item) => {\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n        return item;\n      } else if (qualifyFn(item)) {\n        return `${item}|0`;\n      } else {\n        return item;\n      }\n    });\n  }\n\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    // does not include {} or HTML tags `</`\n    illegal: /[{}]|<\\//,\n    keywords: {\n      $pattern: /\\b[\\w\\.]+/,\n      keyword:\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\n      literal: LITERALS,\n      type: TYPES,\n      built_in: POSSIBLE_WITHOUT_PARENS\n    },\n    contains: [\n      {\n        begin: regex.either(...COMBOS),\n        relevance: 0,\n        keywords: {\n          $pattern: /[\\w\\.]+/,\n          keyword: KEYWORDS.concat(COMBOS),\n          literal: LITERALS,\n          type: TYPES\n        },\n      },\n      {\n        className: \"type\",\n        begin: regex.either(...MULTI_WORD_TYPES)\n      },\n      FUNCTION_CALL,\n      VARIABLE,\n      STRING,\n      QUOTED_IDENTIFIER,\n      hljs.C_NUMBER_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      OPERATOR\n    ]\n  };\n}\n\nmodule.exports = sql;\n",
      "start": 1699633501362,
      "end": 1699633501452,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501452,
      "end": 1699633501452,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501452,
      "end": 1699633501452,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501452,
      "end": 1699633501452,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501453,
      "end": 1699633501453,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501453,
      "end": 1699633501454,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501454,
      "end": 1699633501454,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501454,
      "end": 1699633501454,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501454,
      "end": 1699633501454,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501454,
      "end": 1699633501454,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar sql_1;\nvar hasRequiredSql;\n\nfunction requireSql () {\n\tif (hasRequiredSql) return sql_1;\n\thasRequiredSql = 1;\n\t/*\n\n\tGoals:\n\n\tSQL is intended to highlight basic/common SQL keywords and expressions\n\n\t- If pretty much every single SQL server includes supports, then it's a canidate.\n\t- It is NOT intended to include tons of vendor specific keywords (Oracle, MySQL,\n\t  PostgreSQL) although the list of data types is purposely a bit more expansive.\n\t- For more specific SQL grammars please see:\n\t  - PostgreSQL and PL/pgSQL - core\n\t  - T-SQL - https://github.com/highlightjs/highlightjs-tsql\n\t  - sql_more (core)\n\n\t */\n\n\tfunction sql(hljs) {\n\t  const regex = hljs.regex;\n\t  const COMMENT_MODE = hljs.COMMENT('--', '$');\n\t  const STRING = {\n\t    className: 'string',\n\t    variants: [\n\t      {\n\t        begin: /'/,\n\t        end: /'/,\n\t        contains: [ { begin: /''/ } ]\n\t      }\n\t    ]\n\t  };\n\t  const QUOTED_IDENTIFIER = {\n\t    begin: /\"/,\n\t    end: /\"/,\n\t    contains: [ { begin: /\"\"/ } ]\n\t  };\n\n\t  const LITERALS = [\n\t    \"true\",\n\t    \"false\",\n\t    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n\t    // \"null\",\n\t    \"unknown\"\n\t  ];\n\n\t  const MULTI_WORD_TYPES = [\n\t    \"double precision\",\n\t    \"large object\",\n\t    \"with timezone\",\n\t    \"without timezone\"\n\t  ];\n\n\t  const TYPES = [\n\t    'bigint',\n\t    'binary',\n\t    'blob',\n\t    'boolean',\n\t    'char',\n\t    'character',\n\t    'clob',\n\t    'date',\n\t    'dec',\n\t    'decfloat',\n\t    'decimal',\n\t    'float',\n\t    'int',\n\t    'integer',\n\t    'interval',\n\t    'nchar',\n\t    'nclob',\n\t    'national',\n\t    'numeric',\n\t    'real',\n\t    'row',\n\t    'smallint',\n\t    'time',\n\t    'timestamp',\n\t    'varchar',\n\t    'varying', // modifier (character varying)\n\t    'varbinary'\n\t  ];\n\n\t  const NON_RESERVED_WORDS = [\n\t    \"add\",\n\t    \"asc\",\n\t    \"collation\",\n\t    \"desc\",\n\t    \"final\",\n\t    \"first\",\n\t    \"last\",\n\t    \"view\"\n\t  ];\n\n\t  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n\t  const RESERVED_WORDS = [\n\t    \"abs\",\n\t    \"acos\",\n\t    \"all\",\n\t    \"allocate\",\n\t    \"alter\",\n\t    \"and\",\n\t    \"any\",\n\t    \"are\",\n\t    \"array\",\n\t    \"array_agg\",\n\t    \"array_max_cardinality\",\n\t    \"as\",\n\t    \"asensitive\",\n\t    \"asin\",\n\t    \"asymmetric\",\n\t    \"at\",\n\t    \"atan\",\n\t    \"atomic\",\n\t    \"authorization\",\n\t    \"avg\",\n\t    \"begin\",\n\t    \"begin_frame\",\n\t    \"begin_partition\",\n\t    \"between\",\n\t    \"bigint\",\n\t    \"binary\",\n\t    \"blob\",\n\t    \"boolean\",\n\t    \"both\",\n\t    \"by\",\n\t    \"call\",\n\t    \"called\",\n\t    \"cardinality\",\n\t    \"cascaded\",\n\t    \"case\",\n\t    \"cast\",\n\t    \"ceil\",\n\t    \"ceiling\",\n\t    \"char\",\n\t    \"char_length\",\n\t    \"character\",\n\t    \"character_length\",\n\t    \"check\",\n\t    \"classifier\",\n\t    \"clob\",\n\t    \"close\",\n\t    \"coalesce\",\n\t    \"collate\",\n\t    \"collect\",\n\t    \"column\",\n\t    \"commit\",\n\t    \"condition\",\n\t    \"connect\",\n\t    \"constraint\",\n\t    \"contains\",\n\t    \"convert\",\n\t    \"copy\",\n\t    \"corr\",\n\t    \"corresponding\",\n\t    \"cos\",\n\t    \"cosh\",\n\t    \"count\",\n\t    \"covar_pop\",\n\t    \"covar_samp\",\n\t    \"create\",\n\t    \"cross\",\n\t    \"cube\",\n\t    \"cume_dist\",\n\t    \"current\",\n\t    \"current_catalog\",\n\t    \"current_date\",\n\t    \"current_default_transform_group\",\n\t    \"current_path\",\n\t    \"current_role\",\n\t    \"current_row\",\n\t    \"current_schema\",\n\t    \"current_time\",\n\t    \"current_timestamp\",\n\t    \"current_path\",\n\t    \"current_role\",\n\t    \"current_transform_group_for_type\",\n\t    \"current_user\",\n\t    \"cursor\",\n\t    \"cycle\",\n\t    \"date\",\n\t    \"day\",\n\t    \"deallocate\",\n\t    \"dec\",\n\t    \"decimal\",\n\t    \"decfloat\",\n\t    \"declare\",\n\t    \"default\",\n\t    \"define\",\n\t    \"delete\",\n\t    \"dense_rank\",\n\t    \"deref\",\n\t    \"describe\",\n\t    \"deterministic\",\n\t    \"disconnect\",\n\t    \"distinct\",\n\t    \"double\",\n\t    \"drop\",\n\t    \"dynamic\",\n\t    \"each\",\n\t    \"element\",\n\t    \"else\",\n\t    \"empty\",\n\t    \"end\",\n\t    \"end_frame\",\n\t    \"end_partition\",\n\t    \"end-exec\",\n\t    \"equals\",\n\t    \"escape\",\n\t    \"every\",\n\t    \"except\",\n\t    \"exec\",\n\t    \"execute\",\n\t    \"exists\",\n\t    \"exp\",\n\t    \"external\",\n\t    \"extract\",\n\t    \"false\",\n\t    \"fetch\",\n\t    \"filter\",\n\t    \"first_value\",\n\t    \"float\",\n\t    \"floor\",\n\t    \"for\",\n\t    \"foreign\",\n\t    \"frame_row\",\n\t    \"free\",\n\t    \"from\",\n\t    \"full\",\n\t    \"function\",\n\t    \"fusion\",\n\t    \"get\",\n\t    \"global\",\n\t    \"grant\",\n\t    \"group\",\n\t    \"grouping\",\n\t    \"groups\",\n\t    \"having\",\n\t    \"hold\",\n\t    \"hour\",\n\t    \"identity\",\n\t    \"in\",\n\t    \"indicator\",\n\t    \"initial\",\n\t    \"inner\",\n\t    \"inout\",\n\t    \"insensitive\",\n\t    \"insert\",\n\t    \"int\",\n\t    \"integer\",\n\t    \"intersect\",\n\t    \"intersection\",\n\t    \"interval\",\n\t    \"into\",\n\t    \"is\",\n\t    \"join\",\n\t    \"json_array\",\n\t    \"json_arrayagg\",\n\t    \"json_exists\",\n\t    \"json_object\",\n\t    \"json_objectagg\",\n\t    \"json_query\",\n\t    \"json_table\",\n\t    \"json_table_primitive\",\n\t    \"json_value\",\n\t    \"lag\",\n\t    \"language\",\n\t    \"large\",\n\t    \"last_value\",\n\t    \"lateral\",\n\t    \"lead\",\n\t    \"leading\",\n\t    \"left\",\n\t    \"like\",\n\t    \"like_regex\",\n\t    \"listagg\",\n\t    \"ln\",\n\t    \"local\",\n\t    \"localtime\",\n\t    \"localtimestamp\",\n\t    \"log\",\n\t    \"log10\",\n\t    \"lower\",\n\t    \"match\",\n\t    \"match_number\",\n\t    \"match_recognize\",\n\t    \"matches\",\n\t    \"max\",\n\t    \"member\",\n\t    \"merge\",\n\t    \"method\",\n\t    \"min\",\n\t    \"minute\",\n\t    \"mod\",\n\t    \"modifies\",\n\t    \"module\",\n\t    \"month\",\n\t    \"multiset\",\n\t    \"national\",\n\t    \"natural\",\n\t    \"nchar\",\n\t    \"nclob\",\n\t    \"new\",\n\t    \"no\",\n\t    \"none\",\n\t    \"normalize\",\n\t    \"not\",\n\t    \"nth_value\",\n\t    \"ntile\",\n\t    \"null\",\n\t    \"nullif\",\n\t    \"numeric\",\n\t    \"octet_length\",\n\t    \"occurrences_regex\",\n\t    \"of\",\n\t    \"offset\",\n\t    \"old\",\n\t    \"omit\",\n\t    \"on\",\n\t    \"one\",\n\t    \"only\",\n\t    \"open\",\n\t    \"or\",\n\t    \"order\",\n\t    \"out\",\n\t    \"outer\",\n\t    \"over\",\n\t    \"overlaps\",\n\t    \"overlay\",\n\t    \"parameter\",\n\t    \"partition\",\n\t    \"pattern\",\n\t    \"per\",\n\t    \"percent\",\n\t    \"percent_rank\",\n\t    \"percentile_cont\",\n\t    \"percentile_disc\",\n\t    \"period\",\n\t    \"portion\",\n\t    \"position\",\n\t    \"position_regex\",\n\t    \"power\",\n\t    \"precedes\",\n\t    \"precision\",\n\t    \"prepare\",\n\t    \"primary\",\n\t    \"procedure\",\n\t    \"ptf\",\n\t    \"range\",\n\t    \"rank\",\n\t    \"reads\",\n\t    \"real\",\n\t    \"recursive\",\n\t    \"ref\",\n\t    \"references\",\n\t    \"referencing\",\n\t    \"regr_avgx\",\n\t    \"regr_avgy\",\n\t    \"regr_count\",\n\t    \"regr_intercept\",\n\t    \"regr_r2\",\n\t    \"regr_slope\",\n\t    \"regr_sxx\",\n\t    \"regr_sxy\",\n\t    \"regr_syy\",\n\t    \"release\",\n\t    \"result\",\n\t    \"return\",\n\t    \"returns\",\n\t    \"revoke\",\n\t    \"right\",\n\t    \"rollback\",\n\t    \"rollup\",\n\t    \"row\",\n\t    \"row_number\",\n\t    \"rows\",\n\t    \"running\",\n\t    \"savepoint\",\n\t    \"scope\",\n\t    \"scroll\",\n\t    \"search\",\n\t    \"second\",\n\t    \"seek\",\n\t    \"select\",\n\t    \"sensitive\",\n\t    \"session_user\",\n\t    \"set\",\n\t    \"show\",\n\t    \"similar\",\n\t    \"sin\",\n\t    \"sinh\",\n\t    \"skip\",\n\t    \"smallint\",\n\t    \"some\",\n\t    \"specific\",\n\t    \"specifictype\",\n\t    \"sql\",\n\t    \"sqlexception\",\n\t    \"sqlstate\",\n\t    \"sqlwarning\",\n\t    \"sqrt\",\n\t    \"start\",\n\t    \"static\",\n\t    \"stddev_pop\",\n\t    \"stddev_samp\",\n\t    \"submultiset\",\n\t    \"subset\",\n\t    \"substring\",\n\t    \"substring_regex\",\n\t    \"succeeds\",\n\t    \"sum\",\n\t    \"symmetric\",\n\t    \"system\",\n\t    \"system_time\",\n\t    \"system_user\",\n\t    \"table\",\n\t    \"tablesample\",\n\t    \"tan\",\n\t    \"tanh\",\n\t    \"then\",\n\t    \"time\",\n\t    \"timestamp\",\n\t    \"timezone_hour\",\n\t    \"timezone_minute\",\n\t    \"to\",\n\t    \"trailing\",\n\t    \"translate\",\n\t    \"translate_regex\",\n\t    \"translation\",\n\t    \"treat\",\n\t    \"trigger\",\n\t    \"trim\",\n\t    \"trim_array\",\n\t    \"true\",\n\t    \"truncate\",\n\t    \"uescape\",\n\t    \"union\",\n\t    \"unique\",\n\t    \"unknown\",\n\t    \"unnest\",\n\t    \"update\",\n\t    \"upper\",\n\t    \"user\",\n\t    \"using\",\n\t    \"value\",\n\t    \"values\",\n\t    \"value_of\",\n\t    \"var_pop\",\n\t    \"var_samp\",\n\t    \"varbinary\",\n\t    \"varchar\",\n\t    \"varying\",\n\t    \"versioning\",\n\t    \"when\",\n\t    \"whenever\",\n\t    \"where\",\n\t    \"width_bucket\",\n\t    \"window\",\n\t    \"with\",\n\t    \"within\",\n\t    \"without\",\n\t    \"year\",\n\t  ];\n\n\t  // these are reserved words we have identified to be functions\n\t  // and should only be highlighted in a dispatch-like context\n\t  // ie, array_agg(...), etc.\n\t  const RESERVED_FUNCTIONS = [\n\t    \"abs\",\n\t    \"acos\",\n\t    \"array_agg\",\n\t    \"asin\",\n\t    \"atan\",\n\t    \"avg\",\n\t    \"cast\",\n\t    \"ceil\",\n\t    \"ceiling\",\n\t    \"coalesce\",\n\t    \"corr\",\n\t    \"cos\",\n\t    \"cosh\",\n\t    \"count\",\n\t    \"covar_pop\",\n\t    \"covar_samp\",\n\t    \"cume_dist\",\n\t    \"dense_rank\",\n\t    \"deref\",\n\t    \"element\",\n\t    \"exp\",\n\t    \"extract\",\n\t    \"first_value\",\n\t    \"floor\",\n\t    \"json_array\",\n\t    \"json_arrayagg\",\n\t    \"json_exists\",\n\t    \"json_object\",\n\t    \"json_objectagg\",\n\t    \"json_query\",\n\t    \"json_table\",\n\t    \"json_table_primitive\",\n\t    \"json_value\",\n\t    \"lag\",\n\t    \"last_value\",\n\t    \"lead\",\n\t    \"listagg\",\n\t    \"ln\",\n\t    \"log\",\n\t    \"log10\",\n\t    \"lower\",\n\t    \"max\",\n\t    \"min\",\n\t    \"mod\",\n\t    \"nth_value\",\n\t    \"ntile\",\n\t    \"nullif\",\n\t    \"percent_rank\",\n\t    \"percentile_cont\",\n\t    \"percentile_disc\",\n\t    \"position\",\n\t    \"position_regex\",\n\t    \"power\",\n\t    \"rank\",\n\t    \"regr_avgx\",\n\t    \"regr_avgy\",\n\t    \"regr_count\",\n\t    \"regr_intercept\",\n\t    \"regr_r2\",\n\t    \"regr_slope\",\n\t    \"regr_sxx\",\n\t    \"regr_sxy\",\n\t    \"regr_syy\",\n\t    \"row_number\",\n\t    \"sin\",\n\t    \"sinh\",\n\t    \"sqrt\",\n\t    \"stddev_pop\",\n\t    \"stddev_samp\",\n\t    \"substring\",\n\t    \"substring_regex\",\n\t    \"sum\",\n\t    \"tan\",\n\t    \"tanh\",\n\t    \"translate\",\n\t    \"translate_regex\",\n\t    \"treat\",\n\t    \"trim\",\n\t    \"trim_array\",\n\t    \"unnest\",\n\t    \"upper\",\n\t    \"value_of\",\n\t    \"var_pop\",\n\t    \"var_samp\",\n\t    \"width_bucket\",\n\t  ];\n\n\t  // these functions can\n\t  const POSSIBLE_WITHOUT_PARENS = [\n\t    \"current_catalog\",\n\t    \"current_date\",\n\t    \"current_default_transform_group\",\n\t    \"current_path\",\n\t    \"current_role\",\n\t    \"current_schema\",\n\t    \"current_transform_group_for_type\",\n\t    \"current_user\",\n\t    \"session_user\",\n\t    \"system_time\",\n\t    \"system_user\",\n\t    \"current_time\",\n\t    \"localtime\",\n\t    \"current_timestamp\",\n\t    \"localtimestamp\"\n\t  ];\n\n\t  // those exist to boost relevance making these very\n\t  // \"SQL like\" keyword combos worth +1 extra relevance\n\t  const COMBOS = [\n\t    \"create table\",\n\t    \"insert into\",\n\t    \"primary key\",\n\t    \"foreign key\",\n\t    \"not null\",\n\t    \"alter table\",\n\t    \"add constraint\",\n\t    \"grouping sets\",\n\t    \"on overflow\",\n\t    \"character set\",\n\t    \"respect nulls\",\n\t    \"ignore nulls\",\n\t    \"nulls first\",\n\t    \"nulls last\",\n\t    \"depth first\",\n\t    \"breadth first\"\n\t  ];\n\n\t  const FUNCTIONS = RESERVED_FUNCTIONS;\n\n\t  const KEYWORDS = [\n\t    ...RESERVED_WORDS,\n\t    ...NON_RESERVED_WORDS\n\t  ].filter((keyword) => {\n\t    return !RESERVED_FUNCTIONS.includes(keyword);\n\t  });\n\n\t  const VARIABLE = {\n\t    className: \"variable\",\n\t    begin: /@[a-z0-9][a-z0-9_]*/,\n\t  };\n\n\t  const OPERATOR = {\n\t    className: \"operator\",\n\t    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n\t    relevance: 0,\n\t  };\n\n\t  const FUNCTION_CALL = {\n\t    begin: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\n\t    relevance: 0,\n\t    keywords: { built_in: FUNCTIONS }\n\t  };\n\n\t  // keywords with less than 3 letters are reduced in relevancy\n\t  function reduceRelevancy(list, {\n\t    exceptions, when\n\t  } = {}) {\n\t    const qualifyFn = when;\n\t    exceptions = exceptions || [];\n\t    return list.map((item) => {\n\t      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n\t        return item;\n\t      } else if (qualifyFn(item)) {\n\t        return `${item}|0`;\n\t      } else {\n\t        return item;\n\t      }\n\t    });\n\t  }\n\n\t  return {\n\t    name: 'SQL',\n\t    case_insensitive: true,\n\t    // does not include {} or HTML tags `</`\n\t    illegal: /[{}]|<\\//,\n\t    keywords: {\n\t      $pattern: /\\b[\\w\\.]+/,\n\t      keyword:\n\t        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\n\t      literal: LITERALS,\n\t      type: TYPES,\n\t      built_in: POSSIBLE_WITHOUT_PARENS\n\t    },\n\t    contains: [\n\t      {\n\t        begin: regex.either(...COMBOS),\n\t        relevance: 0,\n\t        keywords: {\n\t          $pattern: /[\\w\\.]+/,\n\t          keyword: KEYWORDS.concat(COMBOS),\n\t          literal: LITERALS,\n\t          type: TYPES\n\t        },\n\t      },\n\t      {\n\t        className: \"type\",\n\t        begin: regex.either(...MULTI_WORD_TYPES)\n\t      },\n\t      FUNCTION_CALL,\n\t      VARIABLE,\n\t      STRING,\n\t      QUOTED_IDENTIFIER,\n\t      hljs.C_NUMBER_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      COMMENT_MODE,\n\t      OPERATOR\n\t    ]\n\t  };\n\t}\n\n\tsql_1 = sql;\n\treturn sql_1;\n}\n\nexport { requireSql as __require };",
      "start": 1699633501454,
      "end": 1699633501455,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;CAMA;AACA;CACA;AACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;AACA;CACA,SAAS,GAAG,CAAC,IAAI,EAAE;CACnB,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;CAC3B,EAAE,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CAC/C,EAAE,MAAM,MAAM,GAAG;CACjB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,KAAK,EAAE,GAAG;CAClB,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;CACrC,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,MAAM,iBAAiB,GAAG;CAC5B,IAAI,KAAK,EAAE,GAAG;CACd,IAAI,GAAG,EAAE,GAAG;CACZ,IAAI,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;CACjC,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,QAAQ,GAAG;CACnB,IAAI,MAAM;CACV,IAAI,OAAO;CACX;CACA;CACA,IAAI,SAAS;CACb,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,gBAAgB,GAAG;CAC3B,IAAI,kBAAkB;CACtB,IAAI,cAAc;CAClB,IAAI,eAAe;CACnB,IAAI,kBAAkB;CACtB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,KAAK,GAAG;CAChB,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,UAAU;CACd,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,WAAW;CACf,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,kBAAkB,GAAG;CAC7B,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,WAAW;CACf,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,MAAM;CACV,GAAG,CAAC;AACJ;CACA;CACA,EAAE,MAAM,cAAc,GAAG;CACzB,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,UAAU;CACd,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,WAAW;CACf,IAAI,uBAAuB;CAC3B,IAAI,IAAI;CACR,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,YAAY;CAChB,IAAI,IAAI;CACR,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,eAAe;CACnB,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,aAAa;CACjB,IAAI,iBAAiB;CACrB,IAAI,SAAS;CACb,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,IAAI;CACR,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,aAAa;CACjB,IAAI,UAAU;CACd,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,aAAa;CACjB,IAAI,WAAW;CACf,IAAI,kBAAkB;CACtB,IAAI,OAAO;CACX,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,YAAY;CAChB,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,eAAe;CACnB,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,WAAW;CACf,IAAI,YAAY;CAChB,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,iBAAiB;CACrB,IAAI,cAAc;CAClB,IAAI,iCAAiC;CACrC,IAAI,cAAc;CAClB,IAAI,cAAc;CAClB,IAAI,aAAa;CACjB,IAAI,gBAAgB;CACpB,IAAI,cAAc;CAClB,IAAI,mBAAmB;CACvB,IAAI,cAAc;CAClB,IAAI,cAAc;CAClB,IAAI,kCAAkC;CACtC,IAAI,cAAc;CAClB,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,YAAY;CAChB,IAAI,KAAK;CACT,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,YAAY;CAChB,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,eAAe;CACnB,IAAI,YAAY;CAChB,IAAI,UAAU;CACd,IAAI,QAAQ;CACZ,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,WAAW;CACf,IAAI,eAAe;CACnB,IAAI,UAAU;CACd,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,aAAa;CACjB,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,SAAS;CACb,IAAI,WAAW;CACf,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,IAAI;CACR,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,aAAa;CACjB,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,SAAS;CACb,IAAI,WAAW;CACf,IAAI,cAAc;CAClB,IAAI,UAAU;CACd,IAAI,MAAM;CACV,IAAI,IAAI;CACR,IAAI,MAAM;CACV,IAAI,YAAY;CAChB,IAAI,eAAe;CACnB,IAAI,aAAa;CACjB,IAAI,aAAa;CACjB,IAAI,gBAAgB;CACpB,IAAI,YAAY;CAChB,IAAI,YAAY;CAChB,IAAI,sBAAsB;CAC1B,IAAI,YAAY;CAChB,IAAI,KAAK;CACT,IAAI,UAAU;CACd,IAAI,OAAO;CACX,IAAI,YAAY;CAChB,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,YAAY;CAChB,IAAI,SAAS;CACb,IAAI,IAAI;CACR,IAAI,OAAO;CACX,IAAI,WAAW;CACf,IAAI,gBAAgB;CACpB,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,cAAc;CAClB,IAAI,iBAAiB;CACrB,IAAI,SAAS;CACb,IAAI,KAAK;CACT,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,UAAU;CACd,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,IAAI;CACR,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,KAAK;CACT,IAAI,WAAW;CACf,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,SAAS;CACb,IAAI,cAAc;CAClB,IAAI,mBAAmB;CACvB,IAAI,IAAI;CACR,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,IAAI;CACR,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,IAAI;CACR,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,WAAW;CACf,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,KAAK;CACT,IAAI,SAAS;CACb,IAAI,cAAc;CAClB,IAAI,iBAAiB;CACrB,IAAI,iBAAiB;CACrB,IAAI,QAAQ;CACZ,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,gBAAgB;CACpB,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,WAAW;CACf,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,KAAK;CACT,IAAI,YAAY;CAChB,IAAI,aAAa;CACjB,IAAI,WAAW;CACf,IAAI,WAAW;CACf,IAAI,YAAY;CAChB,IAAI,gBAAgB;CACpB,IAAI,SAAS;CACb,IAAI,YAAY;CAChB,IAAI,UAAU;CACd,IAAI,UAAU;CACd,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,SAAS;CACb,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,QAAQ;CACZ,IAAI,KAAK;CACT,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,WAAW;CACf,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,WAAW;CACf,IAAI,cAAc;CAClB,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,cAAc;CAClB,IAAI,KAAK;CACT,IAAI,cAAc;CAClB,IAAI,UAAU;CACd,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,YAAY;CAChB,IAAI,aAAa;CACjB,IAAI,aAAa;CACjB,IAAI,QAAQ;CACZ,IAAI,WAAW;CACf,IAAI,iBAAiB;CACrB,IAAI,UAAU;CACd,IAAI,KAAK;CACT,IAAI,WAAW;CACf,IAAI,QAAQ;CACZ,IAAI,aAAa;CACjB,IAAI,aAAa;CACjB,IAAI,OAAO;CACX,IAAI,aAAa;CACjB,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,eAAe;CACnB,IAAI,iBAAiB;CACrB,IAAI,IAAI;CACR,IAAI,UAAU;CACd,IAAI,WAAW;CACf,IAAI,iBAAiB;CACrB,IAAI,aAAa;CACjB,IAAI,OAAO;CACX,IAAI,SAAS;CACb,IAAI,MAAM;CACV,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,SAAS;CACb,IAAI,QAAQ;CACZ,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,WAAW;CACf,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,UAAU;CACd,IAAI,OAAO;CACX,IAAI,cAAc;CAClB,IAAI,QAAQ;CACZ,IAAI,MAAM;CACV,IAAI,QAAQ;CACZ,IAAI,SAAS;CACb,IAAI,MAAM;CACV,GAAG,CAAC;AACJ;CACA;CACA;CACA;CACA,EAAE,MAAM,kBAAkB,GAAG;CAC7B,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,OAAO;CACX,IAAI,WAAW;CACf,IAAI,YAAY;CAChB,IAAI,WAAW;CACf,IAAI,YAAY;CAChB,IAAI,OAAO;CACX,IAAI,SAAS;CACb,IAAI,KAAK;CACT,IAAI,SAAS;CACb,IAAI,aAAa;CACjB,IAAI,OAAO;CACX,IAAI,YAAY;CAChB,IAAI,eAAe;CACnB,IAAI,aAAa;CACjB,IAAI,aAAa;CACjB,IAAI,gBAAgB;CACpB,IAAI,YAAY;CAChB,IAAI,YAAY;CAChB,IAAI,sBAAsB;CAC1B,IAAI,YAAY;CAChB,IAAI,KAAK;CACT,IAAI,YAAY;CAChB,IAAI,MAAM;CACV,IAAI,SAAS;CACb,IAAI,IAAI;CACR,IAAI,KAAK;CACT,IAAI,OAAO;CACX,IAAI,OAAO;CACX,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,WAAW;CACf,IAAI,OAAO;CACX,IAAI,QAAQ;CACZ,IAAI,cAAc;CAClB,IAAI,iBAAiB;CACrB,IAAI,iBAAiB;CACrB,IAAI,UAAU;CACd,IAAI,gBAAgB;CACpB,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,WAAW;CACf,IAAI,YAAY;CAChB,IAAI,gBAAgB;CACpB,IAAI,SAAS;CACb,IAAI,YAAY;CAChB,IAAI,UAAU;CACd,IAAI,UAAU;CACd,IAAI,UAAU;CACd,IAAI,YAAY;CAChB,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,YAAY;CAChB,IAAI,aAAa;CACjB,IAAI,WAAW;CACf,IAAI,iBAAiB;CACrB,IAAI,KAAK;CACT,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,WAAW;CACf,IAAI,iBAAiB;CACrB,IAAI,OAAO;CACX,IAAI,MAAM;CACV,IAAI,YAAY;CAChB,IAAI,QAAQ;CACZ,IAAI,OAAO;CACX,IAAI,UAAU;CACd,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,cAAc;CAClB,GAAG,CAAC;AACJ;CACA;CACA,EAAE,MAAM,uBAAuB,GAAG;CAClC,IAAI,iBAAiB;CACrB,IAAI,cAAc;CAClB,IAAI,iCAAiC;CACrC,IAAI,cAAc;CAClB,IAAI,cAAc;CAClB,IAAI,gBAAgB;CACpB,IAAI,kCAAkC;CACtC,IAAI,cAAc;CAClB,IAAI,cAAc;CAClB,IAAI,aAAa;CACjB,IAAI,aAAa;CACjB,IAAI,cAAc;CAClB,IAAI,WAAW;CACf,IAAI,mBAAmB;CACvB,IAAI,gBAAgB;CACpB,GAAG,CAAC;AACJ;CACA;CACA;CACA,EAAE,MAAM,MAAM,GAAG;CACjB,IAAI,cAAc;CAClB,IAAI,aAAa;CACjB,IAAI,aAAa;CACjB,IAAI,aAAa;CACjB,IAAI,UAAU;CACd,IAAI,aAAa;CACjB,IAAI,gBAAgB;CACpB,IAAI,eAAe;CACnB,IAAI,aAAa;CACjB,IAAI,eAAe;CACnB,IAAI,eAAe;CACnB,IAAI,cAAc;CAClB,IAAI,aAAa;CACjB,IAAI,YAAY;CAChB,IAAI,aAAa;CACjB,IAAI,eAAe;CACnB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,SAAS,GAAG,kBAAkB,CAAC;AACvC;CACA,EAAE,MAAM,QAAQ,GAAG;CACnB,IAAI,GAAG,cAAc;CACrB,IAAI,GAAG,kBAAkB;CACzB,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,KAAK;CACxB,IAAI,OAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;CACjD,GAAG,CAAC,CAAC;AACL;CACA,EAAE,MAAM,QAAQ,GAAG;CACnB,IAAI,SAAS,EAAE,UAAU;CACzB,IAAI,KAAK,EAAE,qBAAqB;CAChC,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,QAAQ,GAAG;CACnB,IAAI,SAAS,EAAE,UAAU;CACzB,IAAI,KAAK,EAAE,+CAA+C;CAC1D,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;AACJ;CACA,EAAE,MAAM,aAAa,GAAG;CACxB,IAAI,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,EAAE,OAAO,CAAC;CAClE,IAAI,SAAS,EAAE,CAAC;CAChB,IAAI,QAAQ,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE;CACrC,GAAG,CAAC;AACJ;CACA;CACA,EAAE,SAAS,eAAe,CAAC,IAAI,EAAE;CACjC,IAAI,UAAU,EAAE,IAAI;CACpB,GAAG,GAAG,EAAE,EAAE;CACV,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC;CAC3B,IAAI,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;CAClC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;CAC9B,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;CAC7D,QAAQ,OAAO,IAAI,CAAC;CACpB,OAAO,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;CAClC,QAAQ,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;CAC3B,OAAO,MAAM;CACb,QAAQ,OAAO,IAAI,CAAC;CACpB,OAAO;CACP,KAAK,CAAC,CAAC;CACP,GAAG;AACH;CACA,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,KAAK;CACf,IAAI,gBAAgB,EAAE,IAAI;CAC1B;CACA,IAAI,OAAO,EAAE,UAAU;CACvB,IAAI,QAAQ,EAAE;CACd,MAAM,QAAQ,EAAE,WAAW;CAC3B,MAAM,OAAO;CACb,QAAQ,eAAe,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;CAChE,MAAM,OAAO,EAAE,QAAQ;CACvB,MAAM,IAAI,EAAE,KAAK;CACjB,MAAM,QAAQ,EAAE,uBAAuB;CACvC,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;CACtC,QAAQ,SAAS,EAAE,CAAC;CACpB,QAAQ,QAAQ,EAAE;CAClB,UAAU,QAAQ,EAAE,SAAS;CAC7B,UAAU,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;CAC1C,UAAU,OAAO,EAAE,QAAQ;CAC3B,UAAU,IAAI,EAAE,KAAK;CACrB,SAAS;CACT,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,gBAAgB,CAAC;CAChD,OAAO;CACP,MAAM,aAAa;CACnB,MAAM,QAAQ;CACd,MAAM,MAAM;CACZ,MAAM,iBAAiB;CACvB,MAAM,IAAI,CAAC,aAAa;CACxB,MAAM,IAAI,CAAC,oBAAoB;CAC/B,MAAM,YAAY;CAClB,MAAM,QAAQ;CACd,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,MAAc,GAAG,GAAG"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501455,
      "end": 1699633501455,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501456,
      "end": 1699633501456,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501456,
      "end": 1699633501456,
      "order": "normal"
    }
  ]
}
