{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/swiper/core/slide/slideTo.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}",
      "start": 1699961622167,
      "end": 1699961622291,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699961622292,
      "end": 1699961622292,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:default",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699961622293,
      "end": 1699961622293,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1699961622293,
      "end": 1699961622294,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699961622294,
      "end": 1699961622294,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699961622294,
      "end": 1699961622294,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1699961622294,
      "end": 1699961622294,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699961622294,
      "end": 1699961622294,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699961622294,
      "end": 1699961622294,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699961622294,
      "end": 1699961622294,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699961622294,
      "end": 1699961622295,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699961622295,
      "end": 1699961622295,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1699961622295,
      "end": 1699961622295,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699961622295,
      "end": 1699961622295,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699961622295,
      "end": 1699961622295,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699961622295,
      "end": 1699961622295,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699961622295,
      "end": 1699961622295,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699961622295,
      "end": 1699961622295,
      "order": "normal"
    }
  ]
}
