{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/crypto-js/mode-ctr.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",
      "start": 1699633499866,
      "end": 1699633500069,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633500070,
      "end": 1699633500070,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __module as modeCtrModule } from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/crypto-js/mode-ctr.js?commonjs-module\";\nvar modeCtr = modeCtrModule.exports;\nimport { __require as require$$0 } from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/crypto-js/core.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/crypto-js/cipher-core.js?commonjs-wrapped\";\n\nvar hasRequiredModeCtr;\n\nfunction requireModeCtr () {\n\tif (hasRequiredModeCtr) return modeCtrModule.exports;\n\thasRequiredModeCtr = 1;\n\t(function (module, exports) {\n\t\t;(function (root, factory, undef) {\n\t\t\tif ('object' === \"object\") {\n\t\t\t\t// CommonJS\n\t\t\t\tmodule.exports = exports = factory(require$$0(), require$$1());\n\t\t\t}\n\t\t\telse if (typeof undefined === \"function\" && undefined.amd) {\n\t\t\t\t// AMD\n\t\t\t\tundefined([\"./core\", \"./cipher-core\"], factory);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Global (browser)\n\t\t\t\tfactory(root.CryptoJS);\n\t\t\t}\n\t\t}(commonjsHelpers.commonjsGlobal, function (CryptoJS) {\n\n\t\t\t/**\n\t\t\t * Counter block mode.\n\t\t\t */\n\t\t\tCryptoJS.mode.CTR = (function () {\n\t\t\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\t\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t\t\t        processBlock: function (words, offset) {\n\t\t\t            // Shortcuts\n\t\t\t            var cipher = this._cipher\n\t\t\t            var blockSize = cipher.blockSize;\n\t\t\t            var iv = this._iv;\n\t\t\t            var counter = this._counter;\n\n\t\t\t            // Generate keystream\n\t\t\t            if (iv) {\n\t\t\t                counter = this._counter = iv.slice(0);\n\n\t\t\t                // Remove IV for subsequent blocks\n\t\t\t                this._iv = undefined;\n\t\t\t            }\n\t\t\t            var keystream = counter.slice(0);\n\t\t\t            cipher.encryptBlock(keystream, 0);\n\n\t\t\t            // Increment counter\n\t\t\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t\t\t            // Encrypt\n\t\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t\t                words[offset + i] ^= keystream[i];\n\t\t\t            }\n\t\t\t        }\n\t\t\t    });\n\n\t\t\t    CTR.Decryptor = Encryptor;\n\n\t\t\t    return CTR;\n\t\t\t}());\n\n\n\t\t\treturn CryptoJS.mode.CTR;\n\n\t\t})); \n\t} (modeCtrModule, modeCtrModule.exports));\n\treturn modeCtrModule.exports;\n}\n\nexport { requireModeCtr as __require };",
      "start": 1699633500070,
      "end": 1699633500073,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [
          "define",
          "this"
        ],
        "mappings": ";;;;;;;;;;;;EAAA,CAAC,CAAC,UAAU,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;EAClC,CAAC,IAAI,QAAc,KAAK,QAAQ,EAAE;EAClC;EACA,EAAE,iBAAiB,OAAO,GAAG,OAAO,CAAC,YAAiB,EAAE,YAAwB,CAAC,CAAC;EAClF,EAAE;EACF,MAAM,IAAI,OAAOA,SAAM,KAAK,UAAU,IAAIA,SAAM,CAAC,GAAG,EAAE;EACtD;EACA,EAAEA,SAAM,CAAC,CAAC,QAAQ,EAAE,eAAe,CAAC,EAAE,OAAO,CAAC,CAAC;EAC/C,EAAE;EACF,MAAM;EACN;EACA,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EACzB,EAAE;EACF,CAAC,CAACC,8BAAI,EAAE,UAAU,QAAQ,EAAE;AAC5B;EACA;EACA;EACA;EACA,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,YAAY;EAClC,KAAK,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;AACrD;EACA,KAAK,IAAI,SAAS,GAAG,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;EAChD,SAAS,YAAY,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE;EAChD;EACA,aAAa,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO;EACtC,aAAa,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;EAC9C,aAAa,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;EAC/B,aAAa,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;AACzC;EACA;EACA,aAAa,IAAI,EAAE,EAAE;EACrB,iBAAiB,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvD;EACA;EACA,iBAAiB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;EACtC,cAAc;EACd,aAAa,IAAI,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9C,aAAa,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AAC/C;EACA;EACA,aAAa,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AACtE;EACA;EACA,aAAa,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;EACjD,iBAAiB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;EACnD,cAAc;EACd,UAAU;EACV,MAAM,CAAC,CAAC;AACR;EACA,KAAK,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;AAC/B;EACA,KAAK,OAAO,GAAG,CAAC;EAChB,EAAE,EAAE,CAAC,CAAC;AACN;AACA;EACA,CAAC,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1B;EACA,CAAC,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500073,
      "end": 1699633500073,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500073,
      "end": 1699633500074,
      "order": "normal"
    }
  ]
}
