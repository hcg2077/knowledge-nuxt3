{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/hy.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Hy\nDescription: Hy is a wonderful dialect of Lisp that’s embedded in Python.\nAuthor: Sergey Sobko <s.sobko@profitware.ru>\nWebsite: http://docs.hylang.org/en/stable/\nCategory: lisp\n*/\n\nfunction hy(hljs) {\n  const SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  const SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  const keywords = {\n    $pattern: SYMBOL_RE,\n    built_in:\n      // keywords\n      '!= % %= & &= * ** **= *= *map '\n      + '+ += , --build-class-- --import-- -= . / // //= '\n      + '/= < << <<= <= = > >= >> >>= '\n      + '@ @= ^ ^= abs accumulate all and any ap-compose '\n      + 'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe '\n      + 'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast '\n      + 'callable calling-module-name car case cdr chain chr coll? combinations compile '\n      + 'compress cond cons cons? continue count curry cut cycle dec '\n      + 'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn '\n      + 'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir '\n      + 'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? '\n      + 'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first '\n      + 'flatten float? fn fnc fnr for for* format fraction genexpr '\n      + 'gensym get getattr global globals group-by hasattr hash hex id '\n      + 'identity if if* if-not if-python2 import in inc input instance? '\n      + 'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even '\n      + 'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none '\n      + 'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass '\n      + 'iter iterable? iterate iterator? keyword keyword? lambda last len let '\n      + 'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all '\n      + 'map max merge-with method-decorator min multi-decorator multicombinations name neg? next '\n      + 'none? nonlocal not not-in not? nth numeric? oct odd? open '\n      + 'or ord partition permutations pos? post-route postwalk pow prewalk print '\n      + 'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str '\n      + 'recursive-replace reduce remove repeat repeatedly repr require rest round route '\n      + 'route-with-methods rwm second seq set-comp setattr setv some sorted string '\n      + 'string? sum switch symbol? take take-nth take-while tee try unless '\n      + 'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms '\n      + 'xi xor yield yield-from zero? zip zip-longest | |= ~'\n  };\n\n  const SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  const SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n  const COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    { relevance: 0 }\n  );\n  const LITERAL = {\n    className: 'literal',\n    begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n  };\n  const COLLECTION = {\n    begin: '[\\\\[\\\\{]',\n    end: '[\\\\]\\\\}]',\n    relevance: 0\n  };\n  const HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  const HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  const KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  const NAME = {\n    className: 'name',\n    relevance: 0,\n    keywords: keywords,\n    begin: SYMBOL_RE,\n    starts: BODY\n  };\n  const DEFAULT_CONTAINS = [\n    LIST,\n    STRING,\n    HINT,\n    HINT_COL,\n    COMMENT,\n    KEY,\n    COLLECTION,\n    NUMBER,\n    LITERAL,\n    SYMBOL\n  ];\n\n  LIST.contains = [\n    hljs.COMMENT('comment', ''),\n    NAME,\n    BODY\n  ];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n\n  return {\n    name: 'Hy',\n    aliases: [ 'hylang' ],\n    illegal: /\\S/,\n    contains: [\n      hljs.SHEBANG(),\n      LIST,\n      STRING,\n      HINT,\n      HINT_COL,\n      COMMENT,\n      KEY,\n      COLLECTION,\n      NUMBER,\n      LITERAL\n    ]\n  };\n}\n\nmodule.exports = hy;\n",
      "start": 1699633500896,
      "end": 1699633500998,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500998,
      "end": 1699633500998,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500998,
      "end": 1699633500998,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500998,
      "end": 1699633500998,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500998,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500999,
      "end": 1699633500999,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500999,
      "end": 1699633501000,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501000,
      "end": 1699633501000,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501000,
      "end": 1699633501000,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501000,
      "end": 1699633501000,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501000,
      "end": 1699633501000,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Hy\nDescription: Hy is a wonderful dialect of Lisp that’s embedded in Python.\nAuthor: Sergey Sobko <s.sobko@profitware.ru>\nWebsite: http://docs.hylang.org/en/stable/\nCategory: lisp\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar hy_1;\nvar hasRequiredHy;\n\nfunction requireHy () {\n\tif (hasRequiredHy) return hy_1;\n\thasRequiredHy = 1;\n\tfunction hy(hljs) {\n\t  const SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n\t  const SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n\t  const keywords = {\n\t    $pattern: SYMBOL_RE,\n\t    built_in:\n\t      // keywords\n\t      '!= % %= & &= * ** **= *= *map '\n\t      + '+ += , --build-class-- --import-- -= . / // //= '\n\t      + '/= < << <<= <= = > >= >> >>= '\n\t      + '@ @= ^ ^= abs accumulate all and any ap-compose '\n\t      + 'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe '\n\t      + 'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast '\n\t      + 'callable calling-module-name car case cdr chain chr coll? combinations compile '\n\t      + 'compress cond cons cons? continue count curry cut cycle dec '\n\t      + 'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn '\n\t      + 'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir '\n\t      + 'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? '\n\t      + 'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first '\n\t      + 'flatten float? fn fnc fnr for for* format fraction genexpr '\n\t      + 'gensym get getattr global globals group-by hasattr hash hex id '\n\t      + 'identity if if* if-not if-python2 import in inc input instance? '\n\t      + 'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even '\n\t      + 'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none '\n\t      + 'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass '\n\t      + 'iter iterable? iterate iterator? keyword keyword? lambda last len let '\n\t      + 'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all '\n\t      + 'map max merge-with method-decorator min multi-decorator multicombinations name neg? next '\n\t      + 'none? nonlocal not not-in not? nth numeric? oct odd? open '\n\t      + 'or ord partition permutations pos? post-route postwalk pow prewalk print '\n\t      + 'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str '\n\t      + 'recursive-replace reduce remove repeat repeatedly repr require rest round route '\n\t      + 'route-with-methods rwm second seq set-comp setattr setv some sorted string '\n\t      + 'string? sum switch symbol? take take-nth take-while tee try unless '\n\t      + 'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms '\n\t      + 'xi xor yield yield-from zero? zip zip-longest | |= ~'\n\t  };\n\n\t  const SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n\t  const SYMBOL = {\n\t    begin: SYMBOL_RE,\n\t    relevance: 0\n\t  };\n\t  const NUMBER = {\n\t    className: 'number',\n\t    begin: SIMPLE_NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n\t  const COMMENT = hljs.COMMENT(\n\t    ';',\n\t    '$',\n\t    { relevance: 0 }\n\t  );\n\t  const LITERAL = {\n\t    className: 'literal',\n\t    begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n\t  };\n\t  const COLLECTION = {\n\t    begin: '[\\\\[\\\\{]',\n\t    end: '[\\\\]\\\\}]',\n\t    relevance: 0\n\t  };\n\t  const HINT = {\n\t    className: 'comment',\n\t    begin: '\\\\^' + SYMBOL_RE\n\t  };\n\t  const HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n\t  const KEY = {\n\t    className: 'symbol',\n\t    begin: '[:]{1,2}' + SYMBOL_RE\n\t  };\n\t  const LIST = {\n\t    begin: '\\\\(',\n\t    end: '\\\\)'\n\t  };\n\t  const BODY = {\n\t    endsWithParent: true,\n\t    relevance: 0\n\t  };\n\t  const NAME = {\n\t    className: 'name',\n\t    relevance: 0,\n\t    keywords: keywords,\n\t    begin: SYMBOL_RE,\n\t    starts: BODY\n\t  };\n\t  const DEFAULT_CONTAINS = [\n\t    LIST,\n\t    STRING,\n\t    HINT,\n\t    HINT_COL,\n\t    COMMENT,\n\t    KEY,\n\t    COLLECTION,\n\t    NUMBER,\n\t    LITERAL,\n\t    SYMBOL\n\t  ];\n\n\t  LIST.contains = [\n\t    hljs.COMMENT('comment', ''),\n\t    NAME,\n\t    BODY\n\t  ];\n\t  BODY.contains = DEFAULT_CONTAINS;\n\t  COLLECTION.contains = DEFAULT_CONTAINS;\n\n\t  return {\n\t    name: 'Hy',\n\t    aliases: [ 'hylang' ],\n\t    illegal: /\\S/,\n\t    contains: [\n\t      hljs.SHEBANG(),\n\t      LIST,\n\t      STRING,\n\t      HINT,\n\t      HINT_COL,\n\t      COMMENT,\n\t      KEY,\n\t      COLLECTION,\n\t      NUMBER,\n\t      LITERAL\n\t    ]\n\t  };\n\t}\n\n\thy_1 = hy;\n\treturn hy_1;\n}\n\nexport { requireHy as __require };",
      "start": 1699633501000,
      "end": 1699633501000,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501000,
      "end": 1699633501000,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501000,
      "end": 1699633501000,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501001,
      "end": 1699633501001,
      "order": "normal"
    }
  ]
}
