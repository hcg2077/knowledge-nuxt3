{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/rules_inline/newline.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n",
      "start": 1699633501790,
      "end": 1699633501876,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501876,
      "end": 1699633501876,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501876,
      "end": 1699633501876,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501877,
      "end": 1699633501877,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501878,
      "end": 1699633501878,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000F:/workSpace2024/knowledge-nuxt3/node_modules/markdown-it/lib/common/utils.js?commonjs-proxy\";\n\n// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require$$0.isSpace;\n\n\nvar newline = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(newline);\nexport { newline as __moduleExports };",
      "start": 1699633501879,
      "end": 1699633502024,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;AAAA;AACA;AACA,YAAY,CAAC;AACb;AACA,IAAI,OAAO,GAAG,UAA0B,CAAC,OAAO,CAAC;AACjD;AACA;IACA,OAAc,GAAG,SAAS,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE;AACjD,EAAE,IAAI,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AACrC;AACA,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,UAAU,EAAE,OAAO,KAAK,CAAC,EAAE;AACnE;AACA,EAAE,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAClC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,MAAM,EAAE;AACf,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;AAC9D,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;AACpE;AACA,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;AACtB,QAAQ,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC;AAC1E;AACA,QAAQ,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACnD,QAAQ,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACzC,OAAO,MAAM;AACb,QAAQ,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnD,QAAQ,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACzC,OAAO;AACP;AACA,KAAK,MAAM;AACX,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACvC,KAAK;AACL,GAAG;AACH;AACA,EAAE,GAAG,EAAE,CAAC;AACR;AACA;AACA,EAAE,OAAO,GAAG,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;AACpE;AACA,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,EAAE,OAAO,IAAI,CAAC;AACd,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633502025,
      "end": 1699633502025,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633502026,
      "end": 1699633502026,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633502026,
      "end": 1699633502027,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633502027,
      "end": 1699633502027,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633502028,
      "end": 1699633502028,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633502029,
      "end": 1699633502029,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633502031,
      "end": 1699633502031,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633502032,
      "end": 1699633502032,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633502032,
      "end": 1699633502032,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633502033,
      "end": 1699633502033,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633502034,
      "end": 1699633502034,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633502034,
      "end": 1699633502034,
      "order": "normal"
    }
  ]
}
