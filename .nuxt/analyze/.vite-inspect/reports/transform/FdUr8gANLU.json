{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/stan.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Stan\nDescription: The Stan probabilistic programming language\nAuthor: Sean Pinkney <sean.pinkney@gmail.com>\nWebsite: http://mc-stan.org/\nCategory: scientific\n*/\n\nfunction stan(hljs) {\n  const regex = hljs.regex;\n  // variable names cannot conflict with block identifiers\n  const BLOCKS = [\n    'functions',\n    'model',\n    'data',\n    'parameters',\n    'quantities',\n    'transformed',\n    'generated'\n  ];\n\n  const STATEMENTS = [\n    'for',\n    'in',\n    'if',\n    'else',\n    'while',\n    'break',\n    'continue',\n    'return'\n  ];\n\n  const TYPES = [\n    'array',\n    'tuple',\n    'complex',\n    'int',\n    'real',\n    'vector',\n    'complex_vector',\n    'ordered',\n    'positive_ordered',\n    'simplex',\n    'unit_vector',\n    'row_vector',\n    'complex_row_vector',\n    'matrix',\n    'complex_matrix',\n    'cholesky_factor_corr|10',\n    'cholesky_factor_cov|10',\n    'corr_matrix|10',\n    'cov_matrix|10',\n    'void'\n  ];\n\n  // to get the functions list\n  // clone the [stan-docs repo](https://github.com/stan-dev/docs)\n  // then cd into it and run this bash script https://gist.github.com/joshgoebel/dcd33f82d4059a907c986049893843cf\n  //\n  // the output files are\n  // distributions_quoted.txt\n  // functions_quoted.txt\n\n  const FUNCTIONS = [\n    'abs',\n    'acos',\n    'acosh',\n    'add_diag',\n    'algebra_solver',\n    'algebra_solver_newton',\n    'append_array',\n    'append_col',\n    'append_row',\n    'asin',\n    'asinh',\n    'atan',\n    'atan2',\n    'atanh',\n    'bessel_first_kind',\n    'bessel_second_kind',\n    'binary_log_loss',\n    'block',\n    'cbrt',\n    'ceil',\n    'chol2inv',\n    'cholesky_decompose',\n    'choose',\n    'col',\n    'cols',\n    'columns_dot_product',\n    'columns_dot_self',\n    'complex_schur_decompose',\n    'complex_schur_decompose_t',\n    'complex_schur_decompose_u',\n    'conj',\n    'cos',\n    'cosh',\n    'cov_exp_quad',\n    'crossprod',\n    'csr_extract',\n    'csr_extract_u',\n    'csr_extract_v',\n    'csr_extract_w',\n    'csr_matrix_times_vector',\n    'csr_to_dense_matrix',\n    'cumulative_sum',\n    'dae',\n    'dae_tol',\n    'determinant',\n    'diag_matrix',\n    'diagonal',\n    'diag_post_multiply',\n    'diag_pre_multiply',\n    'digamma',\n    'dims',\n    'distance',\n    'dot_product',\n    'dot_self',\n    'eigendecompose',\n    'eigendecompose_sym',\n    'eigenvalues',\n    'eigenvalues_sym',\n    'eigenvectors',\n    'eigenvectors_sym',\n    'erf',\n    'erfc',\n    'exp',\n    'exp2',\n    'expm1',\n    'falling_factorial',\n    'fdim',\n    'fft',\n    'fft2',\n    'floor',\n    'fma',\n    'fmax',\n    'fmin',\n    'fmod',\n    'gamma_p',\n    'gamma_q',\n    'generalized_inverse',\n    'get_imag',\n    'get_real',\n    'head',\n    'hmm_hidden_state_prob',\n    'hmm_marginal',\n    'hypot',\n    'identity_matrix',\n    'inc_beta',\n    'integrate_1d',\n    'integrate_ode',\n    'integrate_ode_adams',\n    'integrate_ode_bdf',\n    'integrate_ode_rk45',\n    'int_step',\n    'inv',\n    'inv_cloglog',\n    'inv_erfc',\n    'inverse',\n    'inverse_spd',\n    'inv_fft',\n    'inv_fft2',\n    'inv_inc_beta',\n    'inv_logit',\n    'inv_Phi',\n    'inv_sqrt',\n    'inv_square',\n    'is_inf',\n    'is_nan',\n    'lambert_w0',\n    'lambert_wm1',\n    'lbeta',\n    'lchoose',\n    'ldexp',\n    'lgamma',\n    'linspaced_array',\n    'linspaced_int_array',\n    'linspaced_row_vector',\n    'linspaced_vector',\n    'lmgamma',\n    'lmultiply',\n    'log',\n    'log1m',\n    'log1m_exp',\n    'log1m_inv_logit',\n    'log1p',\n    'log1p_exp',\n    'log_determinant',\n    'log_diff_exp',\n    'log_falling_factorial',\n    'log_inv_logit',\n    'log_inv_logit_diff',\n    'logit',\n    'log_mix',\n    'log_modified_bessel_first_kind',\n    'log_rising_factorial',\n    'log_softmax',\n    'log_sum_exp',\n    'machine_precision',\n    'map_rect',\n    'matrix_exp',\n    'matrix_exp_multiply',\n    'matrix_power',\n    'max',\n    'mdivide_left_spd',\n    'mdivide_left_tri_low',\n    'mdivide_right_spd',\n    'mdivide_right_tri_low',\n    'mean',\n    'min',\n    'modified_bessel_first_kind',\n    'modified_bessel_second_kind',\n    'multiply_lower_tri_self_transpose',\n    'negative_infinity',\n    'norm',\n    'norm1',\n    'norm2',\n    'not_a_number',\n    'num_elements',\n    'ode_adams',\n    'ode_adams_tol',\n    'ode_adjoint_tol_ctl',\n    'ode_bdf',\n    'ode_bdf_tol',\n    'ode_ckrk',\n    'ode_ckrk_tol',\n    'ode_rk45',\n    'ode_rk45_tol',\n    'one_hot_array',\n    'one_hot_int_array',\n    'one_hot_row_vector',\n    'one_hot_vector',\n    'ones_array',\n    'ones_int_array',\n    'ones_row_vector',\n    'ones_vector',\n    'owens_t',\n    'Phi',\n    'Phi_approx',\n    'polar',\n    'positive_infinity',\n    'pow',\n    'print',\n    'prod',\n    'proj',\n    'qr',\n    'qr_Q',\n    'qr_R',\n    'qr_thin',\n    'qr_thin_Q',\n    'qr_thin_R',\n    'quad_form',\n    'quad_form_diag',\n    'quad_form_sym',\n    'quantile',\n    'rank',\n    'reduce_sum',\n    'reject',\n    'rep_array',\n    'rep_matrix',\n    'rep_row_vector',\n    'rep_vector',\n    'reverse',\n    'rising_factorial',\n    'round',\n    'row',\n    'rows',\n    'rows_dot_product',\n    'rows_dot_self',\n    'scale_matrix_exp_multiply',\n    'sd',\n    'segment',\n    'sin',\n    'singular_values',\n    'sinh',\n    'size',\n    'softmax',\n    'sort_asc',\n    'sort_desc',\n    'sort_indices_asc',\n    'sort_indices_desc',\n    'sqrt',\n    'square',\n    'squared_distance',\n    'step',\n    'sub_col',\n    'sub_row',\n    'sum',\n    'svd',\n    'svd_U',\n    'svd_V',\n    'symmetrize_from_lower_tri',\n    'tail',\n    'tan',\n    'tanh',\n    'target',\n    'tcrossprod',\n    'tgamma',\n    'to_array_1d',\n    'to_array_2d',\n    'to_complex',\n    'to_int',\n    'to_matrix',\n    'to_row_vector',\n    'to_vector',\n    'trace',\n    'trace_gen_quad_form',\n    'trace_quad_form',\n    'trigamma',\n    'trunc',\n    'uniform_simplex',\n    'variance',\n    'zeros_array',\n    'zeros_int_array',\n    'zeros_row_vector'\n  ];\n\n  const DISTRIBUTIONS = [\n    'bernoulli',\n    'bernoulli_logit',\n    'bernoulli_logit_glm',\n    'beta',\n    'beta_binomial',\n    'beta_proportion',\n    'binomial',\n    'binomial_logit',\n    'categorical',\n    'categorical_logit',\n    'categorical_logit_glm',\n    'cauchy',\n    'chi_square',\n    'dirichlet',\n    'discrete_range',\n    'double_exponential',\n    'exp_mod_normal',\n    'exponential',\n    'frechet',\n    'gamma',\n    'gaussian_dlm_obs',\n    'gumbel',\n    'hmm_latent',\n    'hypergeometric',\n    'inv_chi_square',\n    'inv_gamma',\n    'inv_wishart',\n    'inv_wishart_cholesky',\n    'lkj_corr',\n    'lkj_corr_cholesky',\n    'logistic',\n    'loglogistic',\n    'lognormal',\n    'multi_gp',\n    'multi_gp_cholesky',\n    'multinomial',\n    'multinomial_logit',\n    'multi_normal',\n    'multi_normal_cholesky',\n    'multi_normal_prec',\n    'multi_student_cholesky_t',\n    'multi_student_t',\n    'multi_student_t_cholesky',\n    'neg_binomial',\n    'neg_binomial_2',\n    'neg_binomial_2_log',\n    'neg_binomial_2_log_glm',\n    'normal',\n    'normal_id_glm',\n    'ordered_logistic',\n    'ordered_logistic_glm',\n    'ordered_probit',\n    'pareto',\n    'pareto_type_2',\n    'poisson',\n    'poisson_log',\n    'poisson_log_glm',\n    'rayleigh',\n    'scaled_inv_chi_square',\n    'skew_double_exponential',\n    'skew_normal',\n    'std_normal',\n    'std_normal_log',\n    'student_t',\n    'uniform',\n    'von_mises',\n    'weibull',\n    'wiener',\n    'wishart',\n    'wishart_cholesky'\n  ];\n\n  const BLOCK_COMMENT = hljs.COMMENT(\n    /\\/\\*/,\n    /\\*\\//,\n    {\n      relevance: 0,\n      contains: [\n        {\n          scope: 'doctag',\n          match: /@(return|param)/\n        }\n      ]\n    }\n  );\n\n  const INCLUDE = {\n    scope: 'meta',\n    begin: /#include\\b/,\n    end: /$/,\n    contains: [\n      {\n        match: /[a-z][a-z-._]+/,\n        scope: 'string'\n      },\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n\n  const RANGE_CONSTRAINTS = [\n    \"lower\",\n    \"upper\",\n    \"offset\",\n    \"multiplier\"\n  ];\n\n  return {\n    name: 'Stan',\n    aliases: [ 'stanfuncs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE,\n      title: BLOCKS,\n      type: TYPES,\n      keyword: STATEMENTS,\n      built_in: FUNCTIONS\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      INCLUDE,\n      hljs.HASH_COMMENT_MODE,\n      BLOCK_COMMENT,\n      {\n        scope: 'built_in',\n        match: /\\s(pi|e|sqrt2|log2|log10)(?=\\()/,\n        relevance: 0\n      },\n      {\n        match: regex.concat(/[<,]\\s*/, regex.either(...RANGE_CONSTRAINTS), /\\s*=/),\n        keywords: RANGE_CONSTRAINTS\n      },\n      {\n        scope: 'keyword',\n        match: /\\btarget(?=\\s*\\+=)/,\n      },\n      {\n        // highlights the 'T' in T[,] for only Stan language distributrions\n        match: [\n          /~\\s*/,\n          regex.either(...DISTRIBUTIONS),\n          /(?:\\(\\))/,\n          /\\s*T(?=\\s*\\[)/\n        ],\n        scope: {\n          2: \"built_in\",\n          4: \"keyword\"\n        }\n      },\n      {\n        // highlights distributions that end with special endings\n        scope: 'built_in',\n        keywords: DISTRIBUTIONS,\n        begin: regex.concat(/\\w*/, regex.either(...DISTRIBUTIONS), /(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\\s*[\\(.*\\)])/)\n      },\n      {\n        // highlights distributions after ~\n        begin: [\n          /~/,\n          /\\s*/,\n          regex.concat(regex.either(...DISTRIBUTIONS), /(?=\\s*[\\(.*\\)])/)\n        ],\n        scope: { 3: \"built_in\" }\n      },\n      {\n        // highlights user defined distributions after ~\n        begin: [\n          /~/,\n          /\\s*\\w+(?=\\s*[\\(.*\\)])/,\n          '(?!.*/\\b(' + regex.either(...DISTRIBUTIONS) + ')\\b)'\n        ],\n        scope: { 2: \"title.function\" }\n      },\n      {\n        // highlights user defined distributions with special endings\n        scope: 'title.function',\n        begin: /\\w*(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\\s*[\\(.*\\)])/\n      },\n      {\n        scope: 'number',\n        match: regex.concat(\n          // Comes from @RunDevelopment accessed 11/29/2021 at\n          // https://github.com/PrismJS/prism/blob/c53ad2e65b7193ab4f03a1797506a54bbb33d5a2/components/prism-stan.js#L56\n\n          // start of big noncapture group which\n          // 1. gets numbers that are by themselves\n          // 2. numbers that are separated by _\n          // 3. numbers that are separted by .\n          /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)/,\n          // grabs scientific notation\n          // grabs complex numbers with i\n          /(?:[eE][+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/\n        ),\n        relevance: 0\n      },\n      {\n        scope: 'string',\n        begin: /\"/,\n        end: /\"/\n      }\n    ]\n  };\n}\n\nmodule.exports = stan;\n",
      "start": 1699633501365,
      "end": 1699633501461,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501462,
      "end": 1699633501462,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501463,
      "end": 1699633501463,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Stan\nDescription: The Stan probabilistic programming language\nAuthor: Sean Pinkney <sean.pinkney@gmail.com>\nWebsite: http://mc-stan.org/\nCategory: scientific\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar stan_1;\nvar hasRequiredStan;\n\nfunction requireStan () {\n\tif (hasRequiredStan) return stan_1;\n\thasRequiredStan = 1;\n\tfunction stan(hljs) {\n\t  const regex = hljs.regex;\n\t  // variable names cannot conflict with block identifiers\n\t  const BLOCKS = [\n\t    'functions',\n\t    'model',\n\t    'data',\n\t    'parameters',\n\t    'quantities',\n\t    'transformed',\n\t    'generated'\n\t  ];\n\n\t  const STATEMENTS = [\n\t    'for',\n\t    'in',\n\t    'if',\n\t    'else',\n\t    'while',\n\t    'break',\n\t    'continue',\n\t    'return'\n\t  ];\n\n\t  const TYPES = [\n\t    'array',\n\t    'tuple',\n\t    'complex',\n\t    'int',\n\t    'real',\n\t    'vector',\n\t    'complex_vector',\n\t    'ordered',\n\t    'positive_ordered',\n\t    'simplex',\n\t    'unit_vector',\n\t    'row_vector',\n\t    'complex_row_vector',\n\t    'matrix',\n\t    'complex_matrix',\n\t    'cholesky_factor_corr|10',\n\t    'cholesky_factor_cov|10',\n\t    'corr_matrix|10',\n\t    'cov_matrix|10',\n\t    'void'\n\t  ];\n\n\t  // to get the functions list\n\t  // clone the [stan-docs repo](https://github.com/stan-dev/docs)\n\t  // then cd into it and run this bash script https://gist.github.com/joshgoebel/dcd33f82d4059a907c986049893843cf\n\t  //\n\t  // the output files are\n\t  // distributions_quoted.txt\n\t  // functions_quoted.txt\n\n\t  const FUNCTIONS = [\n\t    'abs',\n\t    'acos',\n\t    'acosh',\n\t    'add_diag',\n\t    'algebra_solver',\n\t    'algebra_solver_newton',\n\t    'append_array',\n\t    'append_col',\n\t    'append_row',\n\t    'asin',\n\t    'asinh',\n\t    'atan',\n\t    'atan2',\n\t    'atanh',\n\t    'bessel_first_kind',\n\t    'bessel_second_kind',\n\t    'binary_log_loss',\n\t    'block',\n\t    'cbrt',\n\t    'ceil',\n\t    'chol2inv',\n\t    'cholesky_decompose',\n\t    'choose',\n\t    'col',\n\t    'cols',\n\t    'columns_dot_product',\n\t    'columns_dot_self',\n\t    'complex_schur_decompose',\n\t    'complex_schur_decompose_t',\n\t    'complex_schur_decompose_u',\n\t    'conj',\n\t    'cos',\n\t    'cosh',\n\t    'cov_exp_quad',\n\t    'crossprod',\n\t    'csr_extract',\n\t    'csr_extract_u',\n\t    'csr_extract_v',\n\t    'csr_extract_w',\n\t    'csr_matrix_times_vector',\n\t    'csr_to_dense_matrix',\n\t    'cumulative_sum',\n\t    'dae',\n\t    'dae_tol',\n\t    'determinant',\n\t    'diag_matrix',\n\t    'diagonal',\n\t    'diag_post_multiply',\n\t    'diag_pre_multiply',\n\t    'digamma',\n\t    'dims',\n\t    'distance',\n\t    'dot_product',\n\t    'dot_self',\n\t    'eigendecompose',\n\t    'eigendecompose_sym',\n\t    'eigenvalues',\n\t    'eigenvalues_sym',\n\t    'eigenvectors',\n\t    'eigenvectors_sym',\n\t    'erf',\n\t    'erfc',\n\t    'exp',\n\t    'exp2',\n\t    'expm1',\n\t    'falling_factorial',\n\t    'fdim',\n\t    'fft',\n\t    'fft2',\n\t    'floor',\n\t    'fma',\n\t    'fmax',\n\t    'fmin',\n\t    'fmod',\n\t    'gamma_p',\n\t    'gamma_q',\n\t    'generalized_inverse',\n\t    'get_imag',\n\t    'get_real',\n\t    'head',\n\t    'hmm_hidden_state_prob',\n\t    'hmm_marginal',\n\t    'hypot',\n\t    'identity_matrix',\n\t    'inc_beta',\n\t    'integrate_1d',\n\t    'integrate_ode',\n\t    'integrate_ode_adams',\n\t    'integrate_ode_bdf',\n\t    'integrate_ode_rk45',\n\t    'int_step',\n\t    'inv',\n\t    'inv_cloglog',\n\t    'inv_erfc',\n\t    'inverse',\n\t    'inverse_spd',\n\t    'inv_fft',\n\t    'inv_fft2',\n\t    'inv_inc_beta',\n\t    'inv_logit',\n\t    'inv_Phi',\n\t    'inv_sqrt',\n\t    'inv_square',\n\t    'is_inf',\n\t    'is_nan',\n\t    'lambert_w0',\n\t    'lambert_wm1',\n\t    'lbeta',\n\t    'lchoose',\n\t    'ldexp',\n\t    'lgamma',\n\t    'linspaced_array',\n\t    'linspaced_int_array',\n\t    'linspaced_row_vector',\n\t    'linspaced_vector',\n\t    'lmgamma',\n\t    'lmultiply',\n\t    'log',\n\t    'log1m',\n\t    'log1m_exp',\n\t    'log1m_inv_logit',\n\t    'log1p',\n\t    'log1p_exp',\n\t    'log_determinant',\n\t    'log_diff_exp',\n\t    'log_falling_factorial',\n\t    'log_inv_logit',\n\t    'log_inv_logit_diff',\n\t    'logit',\n\t    'log_mix',\n\t    'log_modified_bessel_first_kind',\n\t    'log_rising_factorial',\n\t    'log_softmax',\n\t    'log_sum_exp',\n\t    'machine_precision',\n\t    'map_rect',\n\t    'matrix_exp',\n\t    'matrix_exp_multiply',\n\t    'matrix_power',\n\t    'max',\n\t    'mdivide_left_spd',\n\t    'mdivide_left_tri_low',\n\t    'mdivide_right_spd',\n\t    'mdivide_right_tri_low',\n\t    'mean',\n\t    'min',\n\t    'modified_bessel_first_kind',\n\t    'modified_bessel_second_kind',\n\t    'multiply_lower_tri_self_transpose',\n\t    'negative_infinity',\n\t    'norm',\n\t    'norm1',\n\t    'norm2',\n\t    'not_a_number',\n\t    'num_elements',\n\t    'ode_adams',\n\t    'ode_adams_tol',\n\t    'ode_adjoint_tol_ctl',\n\t    'ode_bdf',\n\t    'ode_bdf_tol',\n\t    'ode_ckrk',\n\t    'ode_ckrk_tol',\n\t    'ode_rk45',\n\t    'ode_rk45_tol',\n\t    'one_hot_array',\n\t    'one_hot_int_array',\n\t    'one_hot_row_vector',\n\t    'one_hot_vector',\n\t    'ones_array',\n\t    'ones_int_array',\n\t    'ones_row_vector',\n\t    'ones_vector',\n\t    'owens_t',\n\t    'Phi',\n\t    'Phi_approx',\n\t    'polar',\n\t    'positive_infinity',\n\t    'pow',\n\t    'print',\n\t    'prod',\n\t    'proj',\n\t    'qr',\n\t    'qr_Q',\n\t    'qr_R',\n\t    'qr_thin',\n\t    'qr_thin_Q',\n\t    'qr_thin_R',\n\t    'quad_form',\n\t    'quad_form_diag',\n\t    'quad_form_sym',\n\t    'quantile',\n\t    'rank',\n\t    'reduce_sum',\n\t    'reject',\n\t    'rep_array',\n\t    'rep_matrix',\n\t    'rep_row_vector',\n\t    'rep_vector',\n\t    'reverse',\n\t    'rising_factorial',\n\t    'round',\n\t    'row',\n\t    'rows',\n\t    'rows_dot_product',\n\t    'rows_dot_self',\n\t    'scale_matrix_exp_multiply',\n\t    'sd',\n\t    'segment',\n\t    'sin',\n\t    'singular_values',\n\t    'sinh',\n\t    'size',\n\t    'softmax',\n\t    'sort_asc',\n\t    'sort_desc',\n\t    'sort_indices_asc',\n\t    'sort_indices_desc',\n\t    'sqrt',\n\t    'square',\n\t    'squared_distance',\n\t    'step',\n\t    'sub_col',\n\t    'sub_row',\n\t    'sum',\n\t    'svd',\n\t    'svd_U',\n\t    'svd_V',\n\t    'symmetrize_from_lower_tri',\n\t    'tail',\n\t    'tan',\n\t    'tanh',\n\t    'target',\n\t    'tcrossprod',\n\t    'tgamma',\n\t    'to_array_1d',\n\t    'to_array_2d',\n\t    'to_complex',\n\t    'to_int',\n\t    'to_matrix',\n\t    'to_row_vector',\n\t    'to_vector',\n\t    'trace',\n\t    'trace_gen_quad_form',\n\t    'trace_quad_form',\n\t    'trigamma',\n\t    'trunc',\n\t    'uniform_simplex',\n\t    'variance',\n\t    'zeros_array',\n\t    'zeros_int_array',\n\t    'zeros_row_vector'\n\t  ];\n\n\t  const DISTRIBUTIONS = [\n\t    'bernoulli',\n\t    'bernoulli_logit',\n\t    'bernoulli_logit_glm',\n\t    'beta',\n\t    'beta_binomial',\n\t    'beta_proportion',\n\t    'binomial',\n\t    'binomial_logit',\n\t    'categorical',\n\t    'categorical_logit',\n\t    'categorical_logit_glm',\n\t    'cauchy',\n\t    'chi_square',\n\t    'dirichlet',\n\t    'discrete_range',\n\t    'double_exponential',\n\t    'exp_mod_normal',\n\t    'exponential',\n\t    'frechet',\n\t    'gamma',\n\t    'gaussian_dlm_obs',\n\t    'gumbel',\n\t    'hmm_latent',\n\t    'hypergeometric',\n\t    'inv_chi_square',\n\t    'inv_gamma',\n\t    'inv_wishart',\n\t    'inv_wishart_cholesky',\n\t    'lkj_corr',\n\t    'lkj_corr_cholesky',\n\t    'logistic',\n\t    'loglogistic',\n\t    'lognormal',\n\t    'multi_gp',\n\t    'multi_gp_cholesky',\n\t    'multinomial',\n\t    'multinomial_logit',\n\t    'multi_normal',\n\t    'multi_normal_cholesky',\n\t    'multi_normal_prec',\n\t    'multi_student_cholesky_t',\n\t    'multi_student_t',\n\t    'multi_student_t_cholesky',\n\t    'neg_binomial',\n\t    'neg_binomial_2',\n\t    'neg_binomial_2_log',\n\t    'neg_binomial_2_log_glm',\n\t    'normal',\n\t    'normal_id_glm',\n\t    'ordered_logistic',\n\t    'ordered_logistic_glm',\n\t    'ordered_probit',\n\t    'pareto',\n\t    'pareto_type_2',\n\t    'poisson',\n\t    'poisson_log',\n\t    'poisson_log_glm',\n\t    'rayleigh',\n\t    'scaled_inv_chi_square',\n\t    'skew_double_exponential',\n\t    'skew_normal',\n\t    'std_normal',\n\t    'std_normal_log',\n\t    'student_t',\n\t    'uniform',\n\t    'von_mises',\n\t    'weibull',\n\t    'wiener',\n\t    'wishart',\n\t    'wishart_cholesky'\n\t  ];\n\n\t  const BLOCK_COMMENT = hljs.COMMENT(\n\t    /\\/\\*/,\n\t    /\\*\\//,\n\t    {\n\t      relevance: 0,\n\t      contains: [\n\t        {\n\t          scope: 'doctag',\n\t          match: /@(return|param)/\n\t        }\n\t      ]\n\t    }\n\t  );\n\n\t  const INCLUDE = {\n\t    scope: 'meta',\n\t    begin: /#include\\b/,\n\t    end: /$/,\n\t    contains: [\n\t      {\n\t        match: /[a-z][a-z-._]+/,\n\t        scope: 'string'\n\t      },\n\t      hljs.C_LINE_COMMENT_MODE\n\t    ]\n\t  };\n\n\t  const RANGE_CONSTRAINTS = [\n\t    \"lower\",\n\t    \"upper\",\n\t    \"offset\",\n\t    \"multiplier\"\n\t  ];\n\n\t  return {\n\t    name: 'Stan',\n\t    aliases: [ 'stanfuncs' ],\n\t    keywords: {\n\t      $pattern: hljs.IDENT_RE,\n\t      title: BLOCKS,\n\t      type: TYPES,\n\t      keyword: STATEMENTS,\n\t      built_in: FUNCTIONS\n\t    },\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      INCLUDE,\n\t      hljs.HASH_COMMENT_MODE,\n\t      BLOCK_COMMENT,\n\t      {\n\t        scope: 'built_in',\n\t        match: /\\s(pi|e|sqrt2|log2|log10)(?=\\()/,\n\t        relevance: 0\n\t      },\n\t      {\n\t        match: regex.concat(/[<,]\\s*/, regex.either(...RANGE_CONSTRAINTS), /\\s*=/),\n\t        keywords: RANGE_CONSTRAINTS\n\t      },\n\t      {\n\t        scope: 'keyword',\n\t        match: /\\btarget(?=\\s*\\+=)/,\n\t      },\n\t      {\n\t        // highlights the 'T' in T[,] for only Stan language distributrions\n\t        match: [\n\t          /~\\s*/,\n\t          regex.either(...DISTRIBUTIONS),\n\t          /(?:\\(\\))/,\n\t          /\\s*T(?=\\s*\\[)/\n\t        ],\n\t        scope: {\n\t          2: \"built_in\",\n\t          4: \"keyword\"\n\t        }\n\t      },\n\t      {\n\t        // highlights distributions that end with special endings\n\t        scope: 'built_in',\n\t        keywords: DISTRIBUTIONS,\n\t        begin: regex.concat(/\\w*/, regex.either(...DISTRIBUTIONS), /(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\\s*[\\(.*\\)])/)\n\t      },\n\t      {\n\t        // highlights distributions after ~\n\t        begin: [\n\t          /~/,\n\t          /\\s*/,\n\t          regex.concat(regex.either(...DISTRIBUTIONS), /(?=\\s*[\\(.*\\)])/)\n\t        ],\n\t        scope: { 3: \"built_in\" }\n\t      },\n\t      {\n\t        // highlights user defined distributions after ~\n\t        begin: [\n\t          /~/,\n\t          /\\s*\\w+(?=\\s*[\\(.*\\)])/,\n\t          '(?!.*/\\b(' + regex.either(...DISTRIBUTIONS) + ')\\b)'\n\t        ],\n\t        scope: { 2: \"title.function\" }\n\t      },\n\t      {\n\t        // highlights user defined distributions with special endings\n\t        scope: 'title.function',\n\t        begin: /\\w*(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\\s*[\\(.*\\)])/\n\t      },\n\t      {\n\t        scope: 'number',\n\t        match: regex.concat(\n\t          // Comes from @RunDevelopment accessed 11/29/2021 at\n\t          // https://github.com/PrismJS/prism/blob/c53ad2e65b7193ab4f03a1797506a54bbb33d5a2/components/prism-stan.js#L56\n\n\t          // start of big noncapture group which\n\t          // 1. gets numbers that are by themselves\n\t          // 2. numbers that are separated by _\n\t          // 3. numbers that are separted by .\n\t          /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)/,\n\t          // grabs scientific notation\n\t          // grabs complex numbers with i\n\t          /(?:[eE][+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/\n\t        ),\n\t        relevance: 0\n\t      },\n\t      {\n\t        scope: 'string',\n\t        begin: /\"/,\n\t        end: /\"/\n\t      }\n\t    ]\n\t  };\n\t}\n\n\tstan_1 = stan;\n\treturn stan_1;\n}\n\nexport { requireStan as __require };",
      "start": 1699633501463,
      "end": 1699633501467,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501467,
      "end": 1699633501467,
      "order": "normal"
    }
  ]
}
