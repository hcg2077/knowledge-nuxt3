{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/accesslog.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(hljs) {\n  const regex = hljs.regex;\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS,\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n",
      "start": 1699633500535,
      "end": 1699633500600,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633500601,
      "end": 1699633500601,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633500601,
      "end": 1699633500601,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633500601,
      "end": 1699633500601,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633500601,
      "end": 1699633500601,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633500601,
      "end": 1699633500601,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633500601,
      "end": 1699633500601,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633500602,
      "end": 1699633500602,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633500603,
      "end": 1699633500603,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633500603,
      "end": 1699633500603,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633500603,
      "end": 1699633500603,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar accesslog_1;\nvar hasRequiredAccesslog;\n\nfunction requireAccesslog () {\n\tif (hasRequiredAccesslog) return accesslog_1;\n\thasRequiredAccesslog = 1;\n\t/** @type LanguageFn */\n\tfunction accesslog(hljs) {\n\t  const regex = hljs.regex;\n\t  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n\t  const HTTP_VERBS = [\n\t    \"GET\",\n\t    \"POST\",\n\t    \"HEAD\",\n\t    \"PUT\",\n\t    \"DELETE\",\n\t    \"CONNECT\",\n\t    \"OPTIONS\",\n\t    \"PATCH\",\n\t    \"TRACE\"\n\t  ];\n\t  return {\n\t    name: 'Apache Access Log',\n\t    contains: [\n\t      // IP\n\t      {\n\t        className: 'number',\n\t        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n\t        relevance: 5\n\t      },\n\t      // Other numbers\n\t      {\n\t        className: 'number',\n\t        begin: /\\b\\d+\\b/,\n\t        relevance: 0\n\t      },\n\t      // Requests\n\t      {\n\t        className: 'string',\n\t        begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n\t        end: /\"/,\n\t        keywords: HTTP_VERBS,\n\t        illegal: /\\n/,\n\t        relevance: 5,\n\t        contains: [\n\t          {\n\t            begin: /HTTP\\/[12]\\.\\d'/,\n\t            relevance: 5\n\t          }\n\t        ]\n\t      },\n\t      // Dates\n\t      {\n\t        className: 'string',\n\t        // dates must have a certain length, this prevents matching\n\t        // simple array accesses a[123] and [] and other common patterns\n\t        // found in other languages\n\t        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n\t        illegal: /\\n/,\n\t        relevance: 1\n\t      },\n\t      {\n\t        className: 'string',\n\t        begin: /\\[/,\n\t        end: /\\]/,\n\t        illegal: /\\n/,\n\t        relevance: 0\n\t      },\n\t      // User agent / relevance boost\n\t      {\n\t        className: 'string',\n\t        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n\t        end: /\"/,\n\t        illegal: /\\n/,\n\t        relevance: 3\n\t      },\n\t      // Strings\n\t      {\n\t        className: 'string',\n\t        begin: /\"/,\n\t        end: /\"/,\n\t        illegal: /\\n/,\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t}\n\n\taccesslog_1 = accesslog;\n\treturn accesslog_1;\n}\n\nexport { requireAccesslog as __require };",
      "start": 1699633500603,
      "end": 1699633500604,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;;CASA;CACA,SAAS,SAAS,CAAC,IAAI,EAAE;CACzB,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;CAC3B;CACA,EAAE,MAAM,UAAU,GAAG;CACrB,IAAI,KAAK;CACT,IAAI,MAAM;CACV,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,QAAQ;CACZ,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,OAAO;CACX,IAAI,OAAO;CACX,GAAG,CAAC;CACJ,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,mBAAmB;CAC7B,IAAI,QAAQ,EAAE;CACd;CACA,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,kDAAkD;CACjE,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP;CACA,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,SAAS;CACxB,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP;CACA,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC;CAC7D,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,QAAQ,EAAE,UAAU;CAC5B,QAAQ,OAAO,EAAE,IAAI;CACrB,QAAQ,SAAS,EAAE,CAAC;CACpB,QAAQ,QAAQ,EAAE;CAClB,UAAU;CACV,YAAY,KAAK,EAAE,iBAAiB;CACpC,YAAY,SAAS,EAAE,CAAC;CACxB,WAAW;CACX,SAAS;CACT,OAAO;CACP;CACA,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B;CACA;CACA;CACA,QAAQ,KAAK,EAAE,mBAAmB;CAClC,QAAQ,OAAO,EAAE,IAAI;CACrB,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,IAAI;CACnB,QAAQ,GAAG,EAAE,IAAI;CACjB,QAAQ,OAAO,EAAE,IAAI;CACrB,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP;CACA,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,qBAAqB;CACpC,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,OAAO,EAAE,IAAI;CACrB,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP;CACA,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,GAAG;CAClB,QAAQ,GAAG,EAAE,GAAG;CAChB,QAAQ,OAAO,EAAE,IAAI;CACrB,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,YAAc,GAAG,SAAS"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633500604,
      "end": 1699633500604,
      "order": "normal"
    }
  ]
}
