{
  "resolvedId": "F:/workSpace2024/knowledge-nuxt3/node_modules/highlight.js/lib/languages/sml.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: SML (Standard ML)\nAuthor: Edwin Dalorzo <edwin@dalorzo.org>\nDescription: SML language definition.\nWebsite: https://www.smlnj.org\nOrigin: ocaml.js\nCategory: functional\n*/\nfunction sml(hljs) {\n  return {\n    name: 'SML (Standard ML)',\n    aliases: [ 'ml' ],\n    keywords: {\n      $pattern: '[a-z_]\\\\w*!?',\n      keyword:\n        /* according to Definition of Standard ML 97  */\n        'abstype and andalso as case datatype do else end eqtype '\n        + 'exception fn fun functor handle if in include infix infixr '\n        + 'let local nonfix of op open orelse raise rec sharing sig '\n        + 'signature struct structure then type val with withtype where while',\n      built_in:\n        /* built-in types according to basis library */\n        'array bool char exn int list option order real ref string substring vector unit word',\n      literal:\n        'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    contains: [\n      {\n        className: 'literal',\n        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        { contains: [ 'self' ] }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with ' */\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*' },\n      hljs.inherit(hljs.APOS_STRING_MODE, {\n        className: 'string',\n        relevance: 0\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|'\n          + '0[oO][0-7_]+[Lln]?|'\n          + '0[bB][01_]+[Lln]?|'\n          + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      { begin: /[-=]>/ // relevance booster\n      }\n    ]\n  };\n}\n\nmodule.exports = sml;\n",
      "start": 1699633501352,
      "end": 1699633501439,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501440,
      "end": 1699633501440,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1699633501441,
      "end": 1699633501441,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: SML (Standard ML)\nAuthor: Edwin Dalorzo <edwin@dalorzo.org>\nDescription: SML language definition.\nWebsite: https://www.smlnj.org\nOrigin: ocaml.js\nCategory: functional\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar sml_1;\nvar hasRequiredSml;\n\nfunction requireSml () {\n\tif (hasRequiredSml) return sml_1;\n\thasRequiredSml = 1;\n\tfunction sml(hljs) {\n\t  return {\n\t    name: 'SML (Standard ML)',\n\t    aliases: [ 'ml' ],\n\t    keywords: {\n\t      $pattern: '[a-z_]\\\\w*!?',\n\t      keyword:\n\t        /* according to Definition of Standard ML 97  */\n\t        'abstype and andalso as case datatype do else end eqtype '\n\t        + 'exception fn fun functor handle if in include infix infixr '\n\t        + 'let local nonfix of op open orelse raise rec sharing sig '\n\t        + 'signature struct structure then type val with withtype where while',\n\t      built_in:\n\t        /* built-in types according to basis library */\n\t        'array bool char exn int list option order real ref string substring vector unit word',\n\t      literal:\n\t        'true false NONE SOME LESS EQUAL GREATER nil'\n\t    },\n\t    illegal: /\\/\\/|>>/,\n\t    contains: [\n\t      {\n\t        className: 'literal',\n\t        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n\t        relevance: 0\n\t      },\n\t      hljs.COMMENT(\n\t        '\\\\(\\\\*',\n\t        '\\\\*\\\\)',\n\t        { contains: [ 'self' ] }\n\t      ),\n\t      { /* type variable */\n\t        className: 'symbol',\n\t        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n\t        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n\t      },\n\t      { /* polymorphic variant */\n\t        className: 'type',\n\t        begin: '`[A-Z][\\\\w\\']*'\n\t      },\n\t      { /* module or constructor */\n\t        className: 'type',\n\t        begin: '\\\\b[A-Z][\\\\w\\']*',\n\t        relevance: 0\n\t      },\n\t      { /* don't color identifiers, but safely catch all identifiers with ' */\n\t        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*' },\n\t      hljs.inherit(hljs.APOS_STRING_MODE, {\n\t        className: 'string',\n\t        relevance: 0\n\t      }),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),\n\t      {\n\t        className: 'number',\n\t        begin:\n\t          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|'\n\t          + '0[oO][0-7_]+[Lln]?|'\n\t          + '0[bB][01_]+[Lln]?|'\n\t          + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n\t        relevance: 0\n\t      },\n\t      { begin: /[-=]>/ // relevance booster\n\t      }\n\t    ]\n\t  };\n\t}\n\n\tsml_1 = sml;\n\treturn sml_1;\n}\n\nexport { requireSml as __require };",
      "start": 1699633501441,
      "end": 1699633501442,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;;CAQA,SAAS,GAAG,CAAC,IAAI,EAAE;CACnB,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,mBAAmB;CAC7B,IAAI,OAAO,EAAE,EAAE,IAAI,EAAE;CACrB,IAAI,QAAQ,EAAE;CACd,MAAM,QAAQ,EAAE,cAAc;CAC9B,MAAM,OAAO;CACb;CACA,QAAQ,0DAA0D;CAClE,UAAU,6DAA6D;CACvE,UAAU,2DAA2D;CACrE,UAAU,oEAAoE;CAC9E,MAAM,QAAQ;CACd;CACA,QAAQ,sFAAsF;CAC9F,MAAM,OAAO;CACb,QAAQ,6CAA6C;CACrD,KAAK;CACL,IAAI,OAAO,EAAE,SAAS;CACtB,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,SAAS,EAAE,SAAS;CAC5B,QAAQ,KAAK,EAAE,kBAAkB;CACjC,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM,IAAI,CAAC,OAAO;CAClB,QAAQ,QAAQ;CAChB,QAAQ,QAAQ;CAChB,QAAQ,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE;CAChC,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,2BAA2B;CAC1C;CACA,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,gBAAgB;CAC/B,OAAO;CACP,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,kBAAkB;CACjC,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,sBAAsB,EAAE;CACvC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE;CAC1C,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO,CAAC;CACR,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;CAC7D,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK;CACb,UAAU,+BAA+B;CACzC,YAAY,qBAAqB;CACjC,YAAY,oBAAoB;CAChC,YAAY,wDAAwD;CACpE,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM,EAAE,KAAK,EAAE,OAAO;CACtB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,MAAc,GAAG,GAAG"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1699633501442,
      "end": 1699633501442,
      "order": "normal"
    }
  ]
}
